[{"title":"JavaWeb（一）网络分层结构及HTTP协议","url":"https://blog.hyhcoder.top/2018/01/21/JavaWeb（一）网络分层结构及HTTP协议/","content":"<p>学习Java web的第一步, 肯定要先了解的是当今网络的运行情况; 以及弄懂当今最流行的Http协议究竟是什么?</p>\n<h3 id=\"网络分层\"><a href=\"#网络分层\" class=\"headerlink\" title=\"网络分层\"></a>网络分层</h3><p>首先说下网络分层, 如果现在让你去从头开发一个web通信工具, 你需要考虑什么?  首先你需要考虑把数据怎么分成一个个数据包, 然后要考虑这些数据包要怎么传输, 怎么到达你想要它去的那个地方, 然后还要考虑接收端如何接收这些数据, 解码出来要的数据, 最后还原成想要的最终效果。</p>\n<p>这些会让你觉得很繁琐, 你不外乎可能只是想要发送一句话过去其他客户端, 就要一下子考虑怎么多事情,  还有就是网络的传输什么都非常复杂, 万一哪里有了变动, 就全部程序都要重写, 因此,  出现了分层参考模型,   就像面向对象一样,  把每一层都封装好,  然后对每一层开发接口就可以了, 这样每一层只要负责好自己的事情就可以了, 不用每次都全部考虑。</p>\n<p>基于此， ISO指定了一个OSI参考模型（七层） ， 这可以说是一个理想化的模型，里面把每个层次都分了出来，虽清晰， 但太多层会导致复杂化，也不便于管理，因此后面又由技术人员开发了TCP/IP参考模型（四层），大大简化了层次，这也使得TCP/IP协议得到广泛的应用。</p>\n<ul>\n<li>对于OSI参考模型：（用维基百科的图片说明）<br><img src=\"http://img.hyhcoder.top/18-1-21/66496673.jpg\" alt=\"\"></li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li>而TCP/IP就大大简化了层次, 对比关系如下:(我们平时用的最多的Http是在应用层)<br><img src=\"http://img.hyhcoder.top/18-1-21/61282413.jpg\" alt=\"\"></li>\n</ul>\n<p>从上面我们就可以看出整个网络模型分层后, 我们只要按照各自的协议考虑各自当前层的问题就可以愉快的编程了;<br>比如一开始的发送例子, 我们只是想编写在应用层的程序，所以根本无需考虑下面其他分层传输数据包等的事情，只要遵循好协议发送数据即可，其他都交给其他层的程序考虑，而在应用层我们所用的协议最多的就是Http协议了, 至于http协议怎么和传输层进行协助, 我们可以不用关心, 有兴趣的可以去读&lt;<tcp ip详解(卷一)=\"\">&gt;;</tcp></p>\n<p>如果要通俗的去讲就是我们首先发送的是HTTP协议报文, 然后会转换成TCP/IP协议的数据包,  然后根据IP地址进行传输,  到客户端又重新变成TCP/IP协议的数据包,  再变成HTTP协议报文, 返回到客户端。如下， 每过一层会加一层首部，接收时再逐个去掉。<br><img src=\"http://img.hyhcoder.top/18-1-21/18937008.jpg\" alt=\"\"></p>\n<h3 id=\"HTTP协议\"><a href=\"#HTTP协议\" class=\"headerlink\" title=\"HTTP协议\"></a>HTTP协议</h3><p>因为Java web的编程很少接触到底层的协议实现，所以我们把关注点放在掌握应用层协议会更好，而当今基本上我们接触到的应用层协议最多的就是HTTP协议， 你打开一个网站，基本都是HTTP开头的；</p>\n<p>那掌握HTTP协议(Hyper Text Transfer Protocol 超文本传输协议)对于我们编写web程序非常关键。</p>\n<h4 id=\"本质：-基于TCP-IP通信协议来传递数据的协议\"><a href=\"#本质：-基于TCP-IP通信协议来传递数据的协议\" class=\"headerlink\" title=\"本质： 基于TCP/IP通信协议来传递数据的协议;\"></a>本质： 基于TCP/IP通信协议来传递数据的协议;</h4><h4 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点:\"></a>特点:</h4><ol>\n<li>简单快捷: 客户端向服务端请求服务时, 只要传送请求方法和路径。</li>\n<li>灵活： 允许传输任意类型的数据对象。（用Content-Type加以标记）</li>\n<li>无连接：无连接的含义是限制每次连接只处理一个请求。</li>\n<li>无状态：HTTP协议为无状态协议。</li>\n</ol>\n<h4 id=\"消息格式：（具体的可以自己打开浏览器，按F12进行查看）\"><a href=\"#消息格式：（具体的可以自己打开浏览器，按F12进行查看）\" class=\"headerlink\" title=\"消息格式：（具体的可以自己打开浏览器，按F12进行查看）\"></a>消息格式：（具体的可以自己打开浏览器，按F12进行查看）</h4><ol>\n<li><p>发送一个HTTP请求时（Request）， 需要包含下面的格式（请求行，请求头部，空号，和请求数据）（get，post用得最多）<br><img src=\"http://img.hyhcoder.top/18-1-21/23259117.jpg\" alt=\"\"></p>\n</li>\n<li><p>接收一个HTTP请求时（Response），需要包含下面格式（状态行，消息报头，空号，响应正文）<br><img src=\"http://img.hyhcoder.top/18-1-21/7995488.jpg\" alt=\"\"></p>\n</li>\n</ol>\n<h4 id=\"HTTP工作原理\"><a href=\"#HTTP工作原理\" class=\"headerlink\" title=\"HTTP工作原理\"></a>HTTP工作原理</h4><p>HTTP协议定义Web客户端如何从Web服务器请求Web页面，以及服务器如何把Web页面传输给客户端。HTTP协议采用了请求/响应模型。客户端向服务器发送了一个请求报文，请求报文包含了请求的方法，URL，协议版本，请求头部和请求数据。服务器以一个状态行作为响应，响应的内容包括协议的版本，成功和错误代码，服务器信息，响应头部和响应数据。<br>过程如下：</p>\n<ol>\n<li>客户端连接Web服务器：<br>一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。</li>\n<li>发送HTTP请求：<br>通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求数据4部分组成。</li>\n<li>服务器接受请求并返回HTTP响应：<br>Web服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响应头部、空行和响应数据4部分组成。</li>\n<li>释放连接TCP连接;<br>若connection 模式为close，则服务器主动关闭TCP连接，客户端被动关闭连接，释放TCP连接;若connection 模式为keepalive，则该连接会保持一段时间，在该时间内可以继续接收请求;</li>\n<li>客户端浏览器解析HTML内容<br>客户端浏览器首先解析状态行，查看表明请求是否成功的状态代码。然后解析每一个响应头，响应头告知以下为若干字节的HTML文档和文档的字符集。客户端浏览器读取响应数据HTML，根据HTML的语法对其进行格式化，并在浏览器窗口中显示。</li>\n</ol>\n<h3 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h3><p>网络的分层使得网络编程变得十分的便捷，Java Web的编程可以说是作用与应用层的，所以我们必须要了解掌握应用层应用最广的HTTP协议，所有的网络请求基本都是基于HTTP请求。</p>\n<p>参考文章:</p>\n<ol>\n<li><a href=\"https://zh.wikipedia.org/wiki/OSI%E6%A8%A1%E5%9E%8B\" target=\"_blank\" rel=\"external\">OSI模型–维基百科</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F\" target=\"_blank\" rel=\"external\">TCP/IP模型–维基百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/OSI%E6%A8%A1%E5%9E%8B\" target=\"_blank\" rel=\"external\">OSI模型–百度百科</a></li>\n<li><a href=\"https://baike.baidu.com/item/TCP%2FIP%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B\" target=\"_blank\" rel=\"external\">TCP/IP模型–百度百科</a></li>\n</ol>\n","categories":[],"tags":["JavaWeb"]},{"title":"2018新年开始第一篇","url":"https://blog.hyhcoder.top/2018/01/07/2018新年开始第一篇/","content":"<p><img src=\"http://img.hyhcoder.top/18-1-7/26089060.jpg\" alt=\"\"></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;2018过了几天了，本应先回顾下2017再说，但过去还是让他过去吧，就像之前朋友圈里流行的晒18岁的照片，其实有这个时间，倒不如多想一想现在，想一想未来还比较好。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;之前中兴程序员跳楼事件传的沸沸扬扬，还不是反映了其实处处有危机， 处处有焦虑感， 我们可以做的就只有怎么让自己在这些危机面前更加坦然， 减少焦虑感，这一切都是要让自己有所准备。<br><a id=\"more\"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;其实这个公众号很早就存在了，但也是一直比较懒，跟博客一样，已很久没更新打理了。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;这个时代产生内容的人很多，什么自媒体，什么app，其实大家也早已被这些信息覆盖，但其实信息虽多， 却很多只是重复的复制粘贴罢了，还有很多都把知识零碎化了，还美曰其名碎片化阅读，但对于技术来说，其实碎片化其实并不是好事，很容易看不清整个体系，或者其实只是知其然不知所以然。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;这些作为一个初级程序员来说，可能可以，毕竟会用，会写出业务代码，跑起来了，可能就够了，但这样可能当你想要再踏进一步的时候，却发现根本没有路，或者很难，或者当某些bug发生的时候，你发现根本发现不了，因为这个错误其实是发生在你写代码的更底层，或者是由全局所导致的崩溃，这个时候，就很需要有可能分析全局或者是分析底层的能力了；这些是碎片化带不来的知识，都需要整个系统的去学习。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;这些系统的学习最有效的方法就是先看书，一本讲某某技术的书一开始就可以给你带来一个整体的认识，让你对某某技术有一个整体入门，接着要深入了解就是看源码，记得侯捷在分析STL的时候就说过： 源码面前了无秘密。</p>\n<h3 id=\"因此今年给自己定了几个目标：\"><a href=\"#因此今年给自己定了几个目标：\" class=\"headerlink\" title=\"因此今年给自己定了几个目标：\"></a>因此今年给自己定了几个目标：</h3><ol>\n<li>把Java web的整个流程完全搞清楚，从一个http请求到tomcat的处理，完整了解，而不仅仅限制于Spring的封装；</li>\n<li>研究下中间件redis，redis之前看了一些源码，还是很好懂的，所以把整块看了应该没什么问题；</li>\n<li>研究下TensorFlow，研究下机器学习等新事物（这个还要去再复习下图论知识）。</li>\n</ol>\n<h3 id=\"下面是之前看到关于此不错的书籍：\"><a href=\"#下面是之前看到关于此不错的书籍：\" class=\"headerlink\" title=\"下面是之前看到关于此不错的书籍：\"></a>下面是之前看到关于此不错的书籍：</h3><p><strong>JavaWeb的：</strong></p>\n<ul>\n<li>《深入分析Java Web技术内幕》</li>\n<li>《精通Spring 4.x企业应用开发实战》</li>\n<li>《Spring 源码深度解析》</li>\n<li>《Tomcat 架构解析》</li>\n<li>《深入理解Java虚拟机: JVM高级特性与最佳实践》</li>\n</ul>\n<p><strong>Redis的：</strong></p>\n<ul>\n<li>《Redis设计与实现》</li>\n<li>《Redis开发与运维》</li>\n</ul>\n<p><strong>前沿技术的：</strong></p>\n<ul>\n<li>《机器学习》</li>\n</ul>\n","categories":[],"tags":["杂聊"]},{"title":"小程序wx.uploadFile踩坑","url":"https://blog.hyhcoder.top/2017/04/01/小程序wx-uploadFile踩坑/","content":"<h3 id=\"前端实现\"><a href=\"#前端实现\" class=\"headerlink\" title=\"前端实现\"></a>前端实现</h3><p>小程序目前可以上传文件了,比如最常用到的会是图片的上传:</p>\n<p>我们可以使用wx.chooseImage(OBJECT)实现</p>\n<p>官方示例如下:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">wx.chooseImage(&#123;</div><div class=\"line\">  count: <span class=\"number\">1</span>, <span class=\"comment\">// 默认9</span></div><div class=\"line\">  sizeType: [<span class=\"string\">'original'</span>, <span class=\"string\">'compressed'</span>], <span class=\"comment\">// 可以指定是原图还是压缩图，默认二者都有</span></div><div class=\"line\">  sourceType: [<span class=\"string\">'album'</span>, <span class=\"string\">'camera'</span>], <span class=\"comment\">// 可以指定来源是相册还是相机，默认二者都有</span></div><div class=\"line\">  success: function (res) &#123;</div><div class=\"line\">    <span class=\"comment\">// 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片</span></div><div class=\"line\">    var tempFilePaths = res.tempFilePaths</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>小程序目前一次只能上传一张图片;</p>\n<p>上传后通过wx.uploadFile(OBJECT) 可以将本地资源文件上传到服务器。</p>\n<p>官方示例如下:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">wx.chooseImage(&#123;</div><div class=\"line\">  success: function(res) &#123;</div><div class=\"line\">    var tempFilePaths = res.tempFilePaths</div><div class=\"line\">    wx.uploadFile(&#123;</div><div class=\"line\">      url: <span class=\"string\">'http://example.weixin.qq.com/upload'</span>, <span class=\"comment\">//仅为示例，非真实的接口地址</span></div><div class=\"line\">      filePath: tempFilePaths[<span class=\"number\">0</span>],</div><div class=\"line\">      name: <span class=\"string\">'file'</span>,</div><div class=\"line\">      formData:&#123;</div><div class=\"line\">        <span class=\"string\">'user'</span>: <span class=\"string\">'test'</span></div><div class=\"line\">      &#125;,</div><div class=\"line\">      success: function(res)&#123;</div><div class=\"line\">        var data = res.data</div><div class=\"line\">        <span class=\"comment\">//do something</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<h3 id=\"后端实现\"><a href=\"#后端实现\" class=\"headerlink\" title=\"后端实现\"></a>后端实现</h3><p>后端的实现我们使用最基本的Servlet进行基本的post和get操作就可以把文件存储下来;</p>\n<p>核心代码如下,具体捕获到再进行其他处理:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileUploadServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = LoggerFactory.getLogger(FileUploadServlet.class);</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FileUploadServlet</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">        JsonMessage&lt;Object&gt; message = <span class=\"keyword\">new</span> JsonMessage&lt;Object&gt;();</div><div class=\"line\">        EOSResponse eosResponse = <span class=\"keyword\">null</span>;</div><div class=\"line\">        String sessionToken = <span class=\"keyword\">null</span>;</div><div class=\"line\">        FileItem file = <span class=\"keyword\">null</span>;</div><div class=\"line\">        InputStream in = <span class=\"keyword\">null</span>;</div><div class=\"line\">        ByteArrayOutputStream swapStream1 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            request.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>); </div><div class=\"line\">            <span class=\"comment\">//1、创建一个DiskFileItemFactory工厂  </span></div><div class=\"line\">            DiskFileItemFactory factory = <span class=\"keyword\">new</span> DiskFileItemFactory();  </div><div class=\"line\">            <span class=\"comment\">//2、创建一个文件上传解析器  </span></div><div class=\"line\">            ServletFileUpload upload = <span class=\"keyword\">new</span> ServletFileUpload(factory);</div><div class=\"line\">            <span class=\"comment\">//解决上传文件名的中文乱码  </span></div><div class=\"line\">            upload.setHeaderEncoding(<span class=\"string\">\"UTF-8\"</span>);   </div><div class=\"line\">            <span class=\"comment\">// 1. 得到 FileItem 的集合 items  </span></div><div class=\"line\">            List&lt;FileItem&gt; items = upload.parseRequest(request);</div><div class=\"line\">            logger.info(<span class=\"string\">\"items:&#123;&#125;\"</span>, items.size());</div><div class=\"line\">            <span class=\"comment\">// 2. 遍历 items:  </span></div><div class=\"line\">            <span class=\"keyword\">for</span> (FileItem item : items) &#123;  </div><div class=\"line\">                String name = item.getFieldName();  </div><div class=\"line\">                logger.info(<span class=\"string\">\"fieldName:&#123;&#125;\"</span>, name);</div><div class=\"line\">                <span class=\"comment\">// 若是一个一般的表单域, 打印信息  </span></div><div class=\"line\">                <span class=\"keyword\">if</span> (item.isFormField()) &#123;  </div><div class=\"line\">                    String value = item.getString(<span class=\"string\">\"utf-8\"</span>);  </div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">//进行业务处理...</span></div><div class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span>(<span class=\"string\">\"file\"</span>.equals(name))&#123;</div><div class=\"line\">                       <span class=\"comment\">//进行文件存储....</span></div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;  </div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span>(swapStream1 != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                    swapStream1.close();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span>(in != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                    in.close();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        PrintWriter out = response.getWriter();  </div><div class=\"line\">        out.write(JSONObject.toJSONString(message));  </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">        doGet(request, response);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"真机无法通过问题\"><a href=\"#真机无法通过问题\" class=\"headerlink\" title=\"真机无法通过问题\"></a>真机无法通过问题</h3><p>用上面的方法调试后, 会发现在本机的开发者工具是可以通过的, 但一弄到真机上面去调试, 就会发现无法通过, 这大概会有两个原因:</p>\n<ol>\n<li>没有使用真实的地址去调试, 真机调试需要用到https连接才可以通过, 因此需要先搭建一台服务器进行模拟, 不能使用本地的地址;</li>\n<li>服务器不支持TSL1.2, ios对于加密策略比较谨慎, 需要对https服务的支持TSL1.2才可以, 可以使用这个地址来测试服务器支不支持TSL1.2,地址如下:<a href=\"https://www.ssllabs.com/ssltest/index.html\" target=\"_blank\" rel=\"external\">https://www.ssllabs.com/ssltest/index.html</a></li>\n</ol>\n<p><strong>PS:</strong>上面的写法也可以改为servlet的getParameter</p>\n","categories":[],"tags":["Java"]},{"title":"最近折腾的redis的总结","url":"https://blog.hyhcoder.top/2017/03/20/最近折腾的redis的总结/","content":"<h3 id=\"redis介绍\"><a href=\"#redis介绍\" class=\"headerlink\" title=\"redis介绍\"></a>redis介绍</h3><ul>\n<li>redis是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)、zset(sorted set –有序集合)和hash（哈希类型）。这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。</li>\n<li>还有另外一个与Memcached不同的是， 他可以支持持久化，redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave(主从)同步；因此支持分布式架构；</li>\n<li>redis在部分场合可以对关系型数据库起到了很好的补充作用。</li>\n<li>提供了对众多的语言支持， 比如java，c/c++，c#，php，Python等客户端，基本都可以满足；</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"redis安装\"><a href=\"#redis安装\" class=\"headerlink\" title=\"redis安装\"></a>redis安装</h3><p>redis的安装非常简单；<br>首先去<a href=\"https://redis.io/\" target=\"_blank\" rel=\"external\">官网</a>下载安装包；<br>然后使用如下命令,即可进行编译安装:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure></p>\n<h3 id=\"redis连接\"><a href=\"#redis连接\" class=\"headerlink\" title=\"redis连接\"></a>redis连接</h3><p>安装完redis后,运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-server</div></pre></td></tr></table></figure></p>\n<p>就可以启动redis服务, 默认端口为6379</p>\n<p>可以更改根目录下的redis.conf来更改默认端口及其他设置;</p>\n<p>运行下面命令可以启动客户端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli</div></pre></td></tr></table></figure>\n<p>默认redis-server的启动是以前台方式启动的, 需要更改配置文件中的,改为yes<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 默认Rdis不会作为守护进程运行。如果需要的话配置成&apos;yes&apos;</div><div class=\"line\">daemonize no</div></pre></td></tr></table></figure></p>\n<p>还有默认的redis-server只允许本地访问, 你会在配置文件中看到<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#指定 redis 只接收来自于该 IP 地址的请求，如果不进行设置，那么将处理所有请求</div><div class=\"line\">bind 127.0.0.1</div></pre></td></tr></table></figure></p>\n<p>将其注释掉外网即可无限制访问, <strong>强烈不推荐,</strong> 有非常大的漏洞,导致主机变肉鸡, 不要问我为啥会知道,╮(╯﹏╰）╭<br>可以选择绑定特定地址, 或者使用密码认证:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#requirepass配置可以让用户使用AUTH命令来认证密码，才能使用其他命令。这让redis可以使用在不受信任的网络中。为了保持向后的兼容性，可以注释该命令，因为大部分用户也不需要认证。使用requirepass的时候需要注意，因为redis太快了，每秒可以认证15w次密码，简单的密码很容易被攻破，所以最好使用一个更复杂的密码。</div><div class=\"line\"># requirepass foobared</div></pre></td></tr></table></figure></p>\n<p>以上就是redis-server的一些关键的配置点, 通过这里的配置我们就可以从外网或内网访问到服务器的redis-server了</p>\n<p>至于redis客户端的基本命令:<br>可以看下这里:<a href=\"http://www.runoob.com/redis/redis-connection.html\" target=\"_blank\" rel=\"external\">http://www.runoob.com/redis/redis-connection.html</a></p>\n<h3 id=\"redis的java客户端jedis\"><a href=\"#redis的java客户端jedis\" class=\"headerlink\" title=\"redis的java客户端jedis\"></a>redis的java客户端jedis</h3><p>在linux里面, 我们使用了redis-cli这个客户端来连接redis, 但是如何通过程序来控制redis了, 这就需要使用另外一个客户端了, redis对于各种语言的支持非常丰富, 基本上都有相应的客户端,我是使用java的, 就使用了java里面最火的一个客户端jedis;</p>\n<p>jedis也是一个开源项目, 目前对于redis的各种操作已经封装得基本完美了, 各种数据结构的操作,连接池, 都有一系列的api支持;</p>\n<h4 id=\"jedis的实现\"><a href=\"#jedis的实现\" class=\"headerlink\" title=\"jedis的实现\"></a>jedis的实现</h4><p>下面是我用jedis的一些核心实现, 也是非常简单的;</p>\n<p>配置文件:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">#最大活动对象数     </div><div class=\"line\">redis.pool.maxTotal=1000    </div><div class=\"line\">#最大能够保持idel状态的对象数      </div><div class=\"line\">redis.pool.maxIdle=100  </div><div class=\"line\">#最小能够保持idel状态的对象数   </div><div class=\"line\">redis.pool.minIdle=50    </div><div class=\"line\">#当池内没有返回对象时，最大等待时间    </div><div class=\"line\">redis.pool.maxWaitMillis=10000    </div><div class=\"line\">#当调用borrow Object方法时，是否进行有效性检查    </div><div class=\"line\">redis.pool.testOnBorrow=true    </div><div class=\"line\">#当调用return Object方法时，是否进行有效性检查    </div><div class=\"line\">redis.pool.testOnReturn=true  </div><div class=\"line\">#“空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1.  </div><div class=\"line\">redis.pool.timeBetweenEvictionRunsMillis=30000  </div><div class=\"line\">#向调用者输出“链接”对象时，是否检测它的空闲超时；  </div><div class=\"line\">redis.pool.testWhileIdle=true  </div><div class=\"line\"># 对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3.  </div><div class=\"line\">redis.pool.numTestsPerEvictionRun=50  </div><div class=\"line\">#redis服务器的IP    </div><div class=\"line\">redis.ip=xxxxxx  </div><div class=\"line\">#redis服务器的Port    </div><div class=\"line\">redis.port=6379</div></pre></td></tr></table></figure>\n<p>连接池</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisClient</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 链接池</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> JedisPool jedisPool = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = LoggerFactory.getLogger(RedisClient.class);</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 链接池初始化</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">static</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 池基本配置</span></div><div class=\"line\">\t\t\tJedisPoolConfig config = <span class=\"keyword\">new</span> JedisPoolConfig();</div><div class=\"line\">\t\t\t<span class=\"comment\">// 预设置参数</span></div><div class=\"line\">\t\t\t<span class=\"comment\">// 最大链接数</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> maxTotal = NumberUtils.toInt(Config.get(<span class=\"string\">\"redis.pool.maxTotal\"</span>), <span class=\"number\">0</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (maxTotal &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tlogger.info(<span class=\"string\">\"设置最大连接数为&#123;&#125;\"</span>, Config.get(<span class=\"string\">\"redis.pool.maxTotal\"</span>));</div><div class=\"line\">\t\t\t\tconfig.setMaxTotal(maxTotal);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 最大空闲资源数</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> maxIdle = NumberUtils.toInt(Config.get(<span class=\"string\">\"redis.pool.maxIdle\"</span>), <span class=\"number\">0</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (maxIdle &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tlogger.info(<span class=\"string\">\"设置最大空闲资源数为&#123;&#125;\"</span>, Config.get(<span class=\"string\">\"redis.pool.maxIdle\"</span>));</div><div class=\"line\">\t\t\t\tconfig.setMaxIdle(maxIdle);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 最小空闲资源数</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> minIdle = NumberUtils.toInt(Config.get(<span class=\"string\">\"redis.pool.minIdle\"</span>), <span class=\"number\">0</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (minIdle &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tlogger.info(<span class=\"string\">\"设置最小空闲资源数为&#123;&#125;\"</span>, Config.get(<span class=\"string\">\"redis.pool.minIdle\"</span>));</div><div class=\"line\">\t\t\t\tconfig.setMinIdle(minIdle);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 最大等待时间</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> maxWaitMillis = NumberUtils.toInt(Config.get(<span class=\"string\">\"redis.pool.maxWaitMillis\"</span>), <span class=\"number\">0</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (maxWaitMillis &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tlogger.info(<span class=\"string\">\"设置最大等待时间为&#123;&#125;\"</span>, Config.get(<span class=\"string\">\"redis.pool.maxWaitMillis\"</span>));</div><div class=\"line\">\t\t\t\tconfig.setMaxWaitMillis(maxWaitMillis);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 是否提前进行validate操作(默认否)</span></div><div class=\"line\">\t\t\tBoolean testOnBorrow = Boolean.valueOf(Config.get(<span class=\"string\">\"redis.pool.testOnBorrow\"</span>, <span class=\"string\">\"false\"</span>));</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (testOnBorrow) &#123;</div><div class=\"line\">\t\t\t\tlogger.info(<span class=\"string\">\"设置是否提前进行validate操作为&#123;&#125;\"</span>, Config.get(<span class=\"string\">\"redis.pool.testOnBorrow\"</span>, <span class=\"string\">\"false\"</span>));</div><div class=\"line\">\t\t\t\tconfig.setTestOnBorrow(testOnBorrow);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 当调用return Object方法时，是否进行有效性检查(默认否)</span></div><div class=\"line\">\t\t\tBoolean testOnReturn = Boolean.valueOf(Config.get(<span class=\"string\">\"redis.pool.testOnReturn\"</span>, <span class=\"string\">\"false\"</span>));</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (testOnReturn) &#123;</div><div class=\"line\">\t\t\t\tlogger.info(<span class=\"string\">\"当调用return Object方法时，是否进行有效性检查&#123;&#125;\"</span>, Config.get(<span class=\"string\">\"redis.pool.testOnReturn\"</span>, <span class=\"string\">\"false\"</span>));</div><div class=\"line\">\t\t\t\tconfig.setTestOnReturn(testOnReturn);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Config.get(<span class=\"string\">\"redis.ip\"</span>).isEmpty()) &#123;</div><div class=\"line\">\t\t\t\tlogger.warn(<span class=\"string\">\"没有设置redis服务器IP,无法连接\"</span>);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\tString ip = (String) Config.get(<span class=\"string\">\"redis.ip\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> port = Integer.parseInt(Config.get(<span class=\"string\">\"redis.port\"</span>, <span class=\"string\">\"6379\"</span>));</div><div class=\"line\">\t\t\t\tlogger.info(<span class=\"string\">\"设置ip为&#123;&#125;,port为&#123;&#125;\"</span>, ip, port);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 构建链接池</span></div><div class=\"line\">\t\t\t\tjedisPool = <span class=\"keyword\">new</span> JedisPool(config, ip, port);</div><div class=\"line\">\t\t\t\tlogger.info(<span class=\"string\">\"redis连接成功\"</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.error(<span class=\"string\">\"初始化redis失败\"</span>, e);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">static</span> Jedis <span class=\"title\">getJedis</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedisPool != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t\tJedis resource = jedisPool.getResource();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> resource;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 释放jedis资源</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> jedis</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">releaseResource</span><span class=\"params\">(<span class=\"keyword\">final</span> Jedis jedis)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (jedis != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tjedis.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>调用库</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * redis 调用库</div><div class=\"line\"> * </div><div class=\"line\"> * <span class=\"doctag\">@author</span> Chris</div><div class=\"line\"> *</div><div class=\"line\"> */</div><div class=\"line\">ScriptSupport(<span class=\"string\">\"cache\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CacheHelper</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = LoggerFactory.getLogger(CacheHelper.class);</div><div class=\"line\">\t<span class=\"comment\">// 序列化</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] serialize(Object obj) &#123;</div><div class=\"line\">\t\tObjectOutputStream obi = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tByteArrayOutputStream bai = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tbai = <span class=\"keyword\">new</span> ByteArrayOutputStream();</div><div class=\"line\">\t\t\tobi = <span class=\"keyword\">new</span> ObjectOutputStream(bai);</div><div class=\"line\">\t\t\tobi.writeObject(obj);</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] byt = bai.toByteArray();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> byt;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">// 反序列化</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Object <span class=\"title\">unserizlize</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] byt)</span> </span>&#123;</div><div class=\"line\">\t\tObjectInputStream oii = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tByteArrayInputStream bis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tbis = <span class=\"keyword\">new</span> ByteArrayInputStream(byt);</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\toii = <span class=\"keyword\">new</span> ObjectInputStream(bis);</div><div class=\"line\">\t\t\tObject obj = oii.readObject();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> obj;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 通过key删除（字节）</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">del</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] key)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tjedis.del(key);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 通过key删除</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">del</span><span class=\"params\">(String key)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tjedis.del(key);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 添加key value 并且设置存活时间(byte)</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> liveTime</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] key, <span class=\"keyword\">byte</span>[] value, <span class=\"keyword\">int</span> liveTime)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tjedis.set(key, value);</div><div class=\"line\">\t\tjedis.expire(key, liveTime);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 添加key value 并且设置存活时间</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> liveTime</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(String key, String value, <span class=\"keyword\">int</span> liveTime)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tjedis.set(key, value);</div><div class=\"line\">\t\tjedis.expire(key, liveTime);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 添加key value</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(String key, String value)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tjedis.set(key, value);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 添加key value (字节)(序列化)</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] key, <span class=\"keyword\">byte</span>[] value)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tjedis.set(key, value);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setClass</span><span class=\"params\">(String key, Object value)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tjedis.set(key.getBytes(), serialize(value));</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">getClass</span><span class=\"params\">(String key)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tObject value = unserizlize(jedis.get(key.getBytes()));</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取redis value (String)</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">(String key)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tString value = jedis.get(key);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取redis value (byte [] )(反序列化)</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] get(<span class=\"keyword\">byte</span>[] key) &#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\t<span class=\"keyword\">byte</span>[] value = jedis.get(key);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 通过正则匹配keys</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> pattern</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">keys</span><span class=\"params\">(String pattern)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tSet&lt;String&gt; value = jedis.keys(pattern);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 检查key是否已经存在</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">exists</span><span class=\"params\">(String key)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> value = jedis.exists(key);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/******************* redis list操作 ************************/</span></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 往list中添加元素</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lpush</span><span class=\"params\">(String key, String value)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tjedis.lpush(key, value);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">rpush</span><span class=\"params\">(String key, String value)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tjedis.rpush(key, value);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 数组长度</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Long <span class=\"title\">llen</span><span class=\"params\">(String key)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tLong len = jedis.llen(key);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> len;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取下标为index的value</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> index</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">lindex</span><span class=\"params\">(String key, Long index)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tString str = jedis.lindex(key, index);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> str;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">lpop</span><span class=\"params\">(String key)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tString str = jedis.lpop(key);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> str;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">lrange</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> start, <span class=\"keyword\">long</span> end)</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tList&lt;String&gt; str = jedis.lrange(key, start, end);</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> str;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/********************* redis list操作结束 **************************/</span></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 清空redis 所有数据</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">flushDB</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tString str = jedis.flushDB();</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> str;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 查看redis里有多少数据</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">dbSize</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> len = jedis.dbSize();</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> len;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 检查是否连接成功</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">ping</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tJedis jedis = RedisClient.getJedis();</div><div class=\"line\">\t\tString str = jedis.ping();</div><div class=\"line\">\t\tRedisClient.releaseResource(jedis);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> str;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":[],"tags":["Java","中间件"]},{"title":"一个奇怪的bug,tomcat卡在deploying","url":"https://blog.hyhcoder.top/2017/02/26/一个奇怪的bug-tomcat卡在deploying/","content":"<p>今天在部署一个新的开发环境, 然后启动tomcat的时候, 发现居然启动卡住了, tomcat启动以后卡在INFO: Deploying web application directory ……反反复复尝试, 未果, 于是上google爬了下文, 发现是jdk的一个bug导致的;附下<a href=\"https://docs.oracle.com/cd/E13209_01/wlcp/wlss30/configwlss/jvmrand.html\" target=\"_blank\" rel=\"external\">官网的解释</a></p>\n<a id=\"more\"></a>\n<p>原因在于centos7的随机数获取机制问题, 和jdk7的不兼容, 重启服务器的第一次启动可以, 再启动tomcat就会卡住了;</p>\n<p>若要尝试下哪种系统会卡住, 可以通过下面的命令在linux系统下测试是否会卡这个bug;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">head -n 1 /devrandom</div></pre></td></tr></table></figure></p>\n<p>会发现第一次很快返回一个随机数, 第二次就一直卡住了;</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>更改~/jre/lib/security/java.security里面的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">securerandom.source=file:/dev/urandom</div></pre></td></tr></table></figure></p>\n<p>改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">securerandom.source=file:/dev/./urandom</div></pre></td></tr></table></figure>\n<p>这里很奇怪的是官网的文档是叫人改为/dev/urandom,就是调用urandom, 不要调用random;而实际上中间还要加个/./才可以成功启动tomcat</p>\n<p>这是为什么呢? 最后被我找到了一遍详细的文章; 好奇的可以再继续探究探究;</p>\n<h3 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h3><p><a href=\"http://calvin1978.blogcn.com/articles/securerandom.html\" target=\"_blank\" rel=\"external\">SecureRandom的江湖偏方与真实效果</a></p>\n","categories":[],"tags":[]},{"title":"如何申请免费的HTTPS证书","url":"https://blog.hyhcoder.top/2017/01/26/如何申请免费的HTTPS证书/","content":"<p>前面折腾了下github pages的https的开启, 对https证书也开始感兴趣;毕竟自己搭服务器的话, 就需要自己去弄https证书, 已达到开启https的目的; 搜索了一下现在流行的免费https证书(收费的就不用说了, 大把), 大致分下面两种, 就逐一介绍下, 并给自己做个备忘;</p>\n<a id=\"more\"></a>\n<h2 id=\"阿里云-腾讯云等\"><a href=\"#阿里云-腾讯云等\" class=\"headerlink\" title=\"阿里云,腾讯云等\"></a>阿里云,腾讯云等</h2><p>第一种https免费证书比较容易获得, 应该说服务器端比较容易弄, 就是现在各种国内的云服务商所提供的免费https证书, 以阿里云和腾讯云为主;<br>下面以阿里云举例, 腾讯云类似;都可以看官网的说明, 大同小异;</p>\n<ol>\n<li><p>登陆阿里云的账号, 进入证书服务;<br><img src=\"http://img.hyhcoder.top/17-4-9/92345068-file_1491733095779_357f.png\" alt=\"enter image description here\"></p>\n</li>\n<li><p>点击右侧的购买证书;选择免费型的DV SSL证书;<br><img src=\"http://img.hyhcoder.top/17-4-9/22394895-file_1491733185721_11303.png\" alt=\"enter image description here\"></p>\n</li>\n<li><p>然后对证书进行补全;<br><img src=\"http://img.hyhcoder.top/17-4-9/65891661-file_1491733270480_740f.png\" alt=\"enter image description here\"></p>\n</li>\n<li><p>最后参照阿里云的指引在原域名解析加上一项CNAME解析,完成认证;证书就可以发放了;</p>\n</li>\n<li><p>下载证书, 根据不同的服务器来进行部署;<br><img src=\"http://img.hyhcoder.top/17-4-9/6871841-file_1491733529771_1996.png\" alt=\"enter image description here\"></p>\n</li>\n<li><p>附上自己nginx的设置;以供参考;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen 443;</div><div class=\"line\">\tlisten 80;</div><div class=\"line\">    server_name demo.xxx.com; #域名</div><div class=\"line\">    ssl on;</div><div class=\"line\">    ssl_certificate   /etc/nginx/cert/xxx.pem; #pem的位置</div><div class=\"line\">    ssl_certificate_key  /etc/nginx/cert/xxx.key;#key的位置</div><div class=\"line\">    ssl_session_timeout 5m;</div><div class=\"line\">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</div><div class=\"line\">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</div><div class=\"line\">    ssl_prefer_server_ciphers on;</div><div class=\"line\">    location / &#123;</div><div class=\"line\">      proxy_pass http://127.0.0.1:8080/; # 服务端口</div><div class=\"line\">      proxy_set_header   Host    $host;</div><div class=\"line\">      proxy_set_header   X-Real-IP   $remote_addr;</div><div class=\"line\">      proxy_set_header   X-Forwarded-For proxy_add_x_forwarded_for;</div><div class=\"line\">      proxy_set_header   X-Forwarded-Proto $scheme;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if ($scheme = http) &#123;</div><div class=\"line\">        return 301 https://$server_name$request_uri;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Let’s-Encrypt\"><a href=\"#Let’s-Encrypt\" class=\"headerlink\" title=\"Let’s Encrypt\"></a>Let’s Encrypt</h2><p>Let’s Encrypt是一个很火的免费SSL证书开源项目, 可以实现自动化发布证书, 但有限期只有90天, 不过可以通过脚本来进行自动续签, 这也是官方给出的解决方案, 是一个免费好用的证书.</p>\n<p>Let’s Encrypt官方发布一个安装工具,certbot,可以通过官方的地址来获取安装的步骤,下面我以nginx+centos7的组合来说明如何安装部署,具体其他系统可以参考官网,大同小异;</p>\n<h3 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h3><ol>\n<li><p>先执行以下命令进行环境的安装;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install epel-release</div></pre></td></tr></table></figure>\n</li>\n<li><p>执行以下命令安装certbot</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo yum install certbot</div></pre></td></tr></table></figure>\n</li>\n<li><p>申请证书</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">certbot certonly --standalone -d example.com -d www.example.com</div></pre></td></tr></table></figure>\n</li>\n<li><p>按照提示输入邮箱, 点击几次确认,会得到以下信息:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">Output:</div><div class=\"line\">IMPORTANT NOTES:</div><div class=\"line\"> - If you lose your account credentials, you can recover through</div><div class=\"line\">   e-mails sent to xxx@gmail.com</div><div class=\"line\"> - Congratulations! Your certificate and chain have been saved at</div><div class=\"line\">   /etc/letsencrypt/live/www.example.com/fullchain.pem. Your</div><div class=\"line\">   cert will expire on 2017-02-02. To obtain a new version of the</div><div class=\"line\">   certificate in the future, simply run Let&apos;s Encrypt again.</div><div class=\"line\"> - Your account credentials have been saved in your Let&apos;s Encrypt</div><div class=\"line\">   configuration directory at /etc/letsencrypt. You should make a</div><div class=\"line\">   secure backup of this folder now. This configuration directory will</div><div class=\"line\">   also contain certificates and private keys obtained by Let&apos;s</div><div class=\"line\">   Encrypt so making regular backups of this folder is ideal.</div><div class=\"line\"> - If like Let&apos;s Encrypt, please consider supporting our work by:</div><div class=\"line\">   Donating to ISRG / Let&apos;s Encrypt:   https://letsencrypt.org/donate</div><div class=\"line\">   Donating to EFF:                    https://eff.org/donate-le</div></pre></td></tr></table></figure>\n</li>\n<li><p>至此,证书申请完毕;</p>\n</li>\n<li><p>对nginx进行设置,然后重启nginx;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">                listen       443 ssl;</div><div class=\"line\">                listen       80;</div><div class=\"line\">                server_name  www.example.cn; ##域名</div><div class=\"line\">                ssl_certificate /etc/letsencrypt/live/example.cn/fullchain.pem; #pem位置</div><div class=\"line\">                ssl_certificate_key /etc/letsencrypt/live/example.cn/privkey.pem; #key位置</div><div class=\"line\">                ssl_dhparam /etc/ssl/certs/dhparam.pem;</div><div class=\"line\">                ssl_ciphers &apos;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA&apos;;</div><div class=\"line\">                ssl_prefer_server_ciphers  on;</div><div class=\"line\">                ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</div><div class=\"line\">                ssl_session_timeout 1d;</div><div class=\"line\">                ssl_session_cache shared:SSL:50m;</div><div class=\"line\">                ssl_stapling on;</div><div class=\"line\">                ssl_stapling_verify on;</div><div class=\"line\">                add_header Strict-Transport-Security max-age=15768000;</div><div class=\"line\">                location / &#123;</div><div class=\"line\">                        proxy_pass http://127.0.0.1:8400/; ##服务端口</div><div class=\"line\">                        proxy_set_header   Host    $host;</div><div class=\"line\">                        proxy_set_header   X-Real-IP   $remote_addr;</div><div class=\"line\">                        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class=\"line\">                        proxy_set_header   X-Forwarded-Proto $scheme;</div><div class=\"line\">                &#125;</div><div class=\"line\">                if ($scheme = http) &#123;</div><div class=\"line\">                        return 301 https://$server_name$request_uri;</div><div class=\"line\">                &#125;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"自动更新\"><a href=\"#自动更新\" class=\"headerlink\" title=\"自动更新\"></a>自动更新</h3><p>Let’s Encrypt最大的不足就是只有90天的有效性, 所以需要我们配合计划任务来周期性更新证书;<br>在计划任务中加入以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 0 5 1 *  /usr/bin/certbot renew  &gt;&gt; /var/log/le-renew.log</div></pre></td></tr></table></figure>\n<p>每月1号的5点便会更新一遍证书, 可以自己设定周期, 不过不要太频繁;因为有请求次数的限制.</p>\n","categories":[],"tags":[]},{"title":"让Github Pages自定义域名开启HTTPS","url":"https://blog.hyhcoder.top/2017/01/25/让Github Pages自定义域名开启HTTPS/","content":"<p>放假在家,闲着无聊,于是乎又想着折腾下github pages的blog了, 最近github的国内连接速度不行,国内连接速度间歇性断网,导致blog也体验不佳, 还有最近https化的网站越来越多, google也在力推全面普及https, 年前刮起的小程序风也要求连接一定要是https, 导致也想折腾下给blog挂个小绿标(https).</p>\n<h2 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h2><p>HTTPS（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。可以有效防止运营商劫持和保护用户输入内容。</p>\n<p>github pages其实在上一年就支持https了,当用户用xxx.github.io访问时, 就会自动切换为https访问,但是,很可惜的是, 这个当你开启自定义域名的时候, 就失效了, 所以这个方案就不完美了.</p>\n<a id=\"more\"></a>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>既然github自己提供的方案不完美, 那么对于我们还有什么好选择呢? 遍寻资料后, 我找到了两个方案:</p>\n<ol>\n<li>使用Cloudflare对你的自定义域名进行DNS解析, 缺点是Cloudflare没有国内的解析点,会导致国内访问变慢, 这点我无法接受, 因此这个方法又放弃了,毕竟这个blog会访问的大多也是国内而已, 若要使用这个方法,可以参考这篇文章: 开启githubpage的https</li>\n<li>使用coding自带的功能, 让coding page做为github page的完美备胎; coding page不仅自带开启https功能, 还可以让国内节点访问加快非常多, 这点对我非常诱惑, 而对我平时的使用也没什么区别, 下面好好讲解这个方法;</li>\n</ol>\n<h2 id=\"coding-pages的搭建\"><a href=\"#coding-pages的搭建\" class=\"headerlink\" title=\"coding pages的搭建\"></a>coding pages的搭建</h2><ol>\n<li>首先注册coding的账号: <a href=\"https://coding.net/\" target=\"_blank\" rel=\"external\">https://coding.net/</a></li>\n<li><p>登陆后建立自己的第一个项目;<br><img src=\"http://img.hyhcoder.top/17-3-28/24716316-file_1490712481173_f1ab.png\" alt=\"enter image description here\"></p>\n</li>\n<li><p>注意项目名称要与用户名一致,这点跟github一样;</p>\n</li>\n<li><p>然后用本机和coding建立ssh密钥连接;<br><img src=\"http://img.hyhcoder.top/17-3-28/65028105-file_1490712723046_1367c.png\" alt=\"enter image description here\"></p>\n</li>\n<li><p>更改hexo的_config.yml,为了能同时同步两个地方;加上coding的项目地址;<br><img src=\"http://img.hyhcoder.top/17-3-28/2234812-file_1490712828190_2809.png\" alt=\"enter image description here\"></p>\n</li>\n<li><p>注意type和repo前有一个空格; github前面有一个tab;</p>\n</li>\n<li>执行hexo d; 开始同步;</li>\n<li>然后在coding上面开启pages服务;以及绑定自己的域名;<br><img src=\"http://img.hyhcoder.top/17-3-28/16638333-file_1490713066345_5ee9.png\" alt=\"enter image description here\"></li>\n<li>绑定自己的域名需要在自己的域名解析中绑定国内访问coding, 国外访问github;类似下面;<br><img src=\"http://img.hyhcoder.top/17-3-28/15468715-file_1490713454842_161d5.png\" alt=\"enter image description here\"></li>\n<li>默认的解析到pages.coding.me,海外解析到github;</li>\n<li>然后在下面申请https证书和开启强制https访问;<br><img src=\"http://img.hyhcoder.top/17-3-28/12336386-file_1490713119922_b7af.png\" alt=\"enter image description here\"></li>\n</ol>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>至此,github pages的两个问题都解决了, 不仅解决了https的问题, 还顺带了把github pages国内访问慢的问题解决了, 达到海内外双线的效果, 不过国外访问就没有小绿标了, 这点就没那么完美了, 想要完美的解决还是需要自己部署一台服务器, 然后自己申请https证书来部署, 这样才是最完美, 下次整理下比较火的免费https证书和部署。</p>\n","categories":[],"tags":["部署"]},{"title":"解决getpwnam(“nginx”) failed","url":"https://blog.hyhcoder.top/2016/11/05/解决getpwnam-“nginx”-failed/","content":"<p>有时在编译安装完nginx后, 启动nginx时, 会出现报错:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx: [emerg] getpwnam(&quot;nginx&quot;) failed</div></pre></td></tr></table></figure></p>\n<h3 id=\"原因及解决\"><a href=\"#原因及解决\" class=\"headerlink\" title=\"原因及解决\"></a>原因及解决</h3><p>这种报错一般是编译安装后没有加入nginx用户导致的;<br>执行如下命令:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">useradd -s /sbin/nologin -M nginx</div><div class=\"line\">id nginx</div></pre></td></tr></table></figure></p>\n<p>最后重启启动, 即可解决:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">service nginx restart</div><div class=\"line\">service nginx status</div></pre></td></tr></table></figure></p>\n","categories":[],"tags":["nginx"]},{"title":"编译安装nginx,使其支持sticky模块","url":"https://blog.hyhcoder.top/2016/11/05/编译安装nginx-使其支持sticky模块/","content":"<h2 id=\"普通安装\"><a href=\"#普通安装\" class=\"headerlink\" title=\"普通安装\"></a>普通安装</h2><p>nginx的普通安装非常简单:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo yum install epel-release</div><div class=\"line\">sudo yum install nginx</div></pre></td></tr></table></figure></p>\n<p>开机启动:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo systemctl start nginx.service</div></pre></td></tr></table></figure></p>\n<p>查看状态:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service nginx status</div></pre></td></tr></table></figure></p>\n<p>手工启动:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service nginx start</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h2 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h2><p>普通安装虽然方便, 但是不支持sticky模块,因此需要对nginx进行编译安装来支持;</p>\n<p>下载nginx源码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://nginx.org/download/nginx-1.8.0.tar.gz</div></pre></td></tr></table></figure></p>\n<p>下载nginx session sticky模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng/get/1e96371de59f.zip</div></pre></td></tr></table></figure></p>\n<p>解压以上的安装包:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">//如目录: </div><div class=\"line\">/tmp/nginx-1.8.0</div><div class=\"line\">/tmp/nginx-goodies-nginx-sticky-module-ng-bd312d586752</div></pre></td></tr></table></figure></p>\n<p>编译前配置(注意目录的配置)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/run/nginx.pid --lock-path=/run/lock/subsys/nginx --user=nginx --group=nginx --with-file-aio --with-ipv6 --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_gunzip_module --with-http_gzip_static_module --with-pcre --with-debug --with-cc-opt=&apos;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic&apos; --with-ld-opt=&apos;-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -Wl,-E&apos; --add-module=/tmp/nginx-goodies-nginx-sticky-module-ng-bd312d586752</div></pre></td></tr></table></figure></p>\n<p>然后编译并安装:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure></p>\n<p>设置开机启动:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div></pre></td><td class=\"code\"><pre><div class=\"line\">新增文件 /etc/init.d/nginx,内容如下:</div><div class=\"line\">#!/bin/sh</div><div class=\"line\">#</div><div class=\"line\"># nginx - this script starts and stops the nginx daemon</div><div class=\"line\">#</div><div class=\"line\"># chkconfig:   - 85 15</div><div class=\"line\"># description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\</div><div class=\"line\">#               proxy and IMAP/POP3 proxy server</div><div class=\"line\"># processname: nginx</div><div class=\"line\"># config:      /etc/nginx/nginx.conf</div><div class=\"line\"># pidfile:     /var/run/nginx.pid</div><div class=\"line\"># user:        nginx</div><div class=\"line\"># Source function library.</div><div class=\"line\">. /etc/rc.d/init.d/functions</div><div class=\"line\"># Source networking configuration.</div><div class=\"line\">. /etc/sysconfig/network</div><div class=\"line\"># Check that networking is up.</div><div class=\"line\">[ &quot;$NETWORKING&quot; = &quot;no&quot; ] &amp;&amp; exit 0</div><div class=\"line\">nginx=&quot;/usr/sbin/nginx&quot;</div><div class=\"line\">prog=$(basename $nginx)</div><div class=\"line\">NGINX_CONF_FILE=&quot;/etc/nginx/nginx.conf&quot;</div><div class=\"line\">lockfile=/var/run/nginx.lock</div><div class=\"line\">start() &#123;</div><div class=\"line\">    [ -x $nginx ] || exit 5</div><div class=\"line\">    [ -f $NGINX_CONF_FILE ] || exit 6</div><div class=\"line\">    echo -n $&quot;Starting $prog: &quot;</div><div class=\"line\">    daemon $nginx -c $NGINX_CONF_FILE</div><div class=\"line\">    retval=$?</div><div class=\"line\">    echo</div><div class=\"line\">    [ $retval -eq 0 ] &amp;&amp; touch $lockfile</div><div class=\"line\">    return $retval</div><div class=\"line\">&#125;</div><div class=\"line\">stop() &#123;</div><div class=\"line\">    echo -n $&quot;Stopping $prog: &quot;</div><div class=\"line\">    killproc $prog -QUIT</div><div class=\"line\">    retval=$?</div><div class=\"line\">    echo</div><div class=\"line\">    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile</div><div class=\"line\">    return $retval</div><div class=\"line\">&#125;</div><div class=\"line\">restart() &#123;</div><div class=\"line\">    configtest || return $?</div><div class=\"line\">    stop</div><div class=\"line\">    start</div><div class=\"line\">&#125;</div><div class=\"line\">reload() &#123;</div><div class=\"line\">    configtest || return $?</div><div class=\"line\">    echo -n $&quot;Reloading $prog: &quot;</div><div class=\"line\">    killproc $nginx -HUP</div><div class=\"line\">    RETVAL=$?</div><div class=\"line\">    echo</div><div class=\"line\">&#125;</div><div class=\"line\">force_reload() &#123;</div><div class=\"line\">    restart</div><div class=\"line\">&#125;</div><div class=\"line\">configtest() &#123;</div><div class=\"line\">  $nginx -t -c $NGINX_CONF_FILE</div><div class=\"line\">&#125;</div><div class=\"line\">rh_status() &#123;</div><div class=\"line\">    status $prog</div><div class=\"line\">&#125;</div><div class=\"line\">rh_status_q() &#123;</div><div class=\"line\">    rh_status &gt;/dev/null 2&gt;&amp;1</div><div class=\"line\">&#125;</div><div class=\"line\">case &quot;$1&quot; in</div><div class=\"line\">    start)</div><div class=\"line\">        rh_status_q &amp;&amp; exit 0</div><div class=\"line\">        $1</div><div class=\"line\">        ;;</div><div class=\"line\">    stop)</div><div class=\"line\">        rh_status_q || exit 0</div><div class=\"line\">        $1</div><div class=\"line\">        ;;</div><div class=\"line\">    restart|configtest)</div><div class=\"line\">        $1</div><div class=\"line\">        ;;</div><div class=\"line\">    reload)</div><div class=\"line\">        rh_status_q || exit 7</div><div class=\"line\">        $1</div><div class=\"line\">        ;;</div><div class=\"line\">    force-reload)</div><div class=\"line\">        force_reload</div><div class=\"line\">        ;;</div><div class=\"line\">    status)</div><div class=\"line\">        rh_status</div><div class=\"line\">        ;;</div><div class=\"line\">    condrestart|try-restart)</div><div class=\"line\">        rh_status_q || exit 0</div><div class=\"line\">            ;;</div><div class=\"line\">   *)</div><div class=\"line\">    echo $&quot;Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;&quot;</div><div class=\"line\">    exit 2</div><div class=\"line\">esac</div></pre></td></tr></table></figure></p>\n<p>增加执行权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x /etc/init.d/nginx</div></pre></td></tr></table></figure></p>\n<p>加入开机启动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig nginx on</div></pre></td></tr></table></figure></p>\n<h2 id=\"Session-Sticky配置\"><a href=\"#Session-Sticky配置\" class=\"headerlink\" title=\"Session Sticky配置\"></a>Session Sticky配置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">upstream session-pool &#123;</div><div class=\"line\">  sticky;</div><div class=\"line\">  server (转发的服务器地址加端口,如下);</div><div class=\"line\">  server 192.168.1.11:8082;</div><div class=\"line\">  server 192.168.1.12:8080;</div><div class=\"line\"> &#125;</div><div class=\"line\">server &#123;</div><div class=\"line\">  listen       80(监听端口);</div><div class=\"line\">  server_name  (服务器ip);</div><div class=\"line\">  location / &#123;</div><div class=\"line\">        client_max_body_size 100M;</div><div class=\"line\">    proxy_pass http://session-pool;</div><div class=\"line\">    proxy_set_header   Host    $host;</div><div class=\"line\">    proxy_set_header   X-Real-IP   $remote_addr;</div><div class=\"line\">    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":[],"tags":["nginx"]},{"title":"Mysql的主从备份搭建","url":"https://blog.hyhcoder.top/2016/10/26/Mysql的主从备份搭建/","content":"<h1 id=\"Mysql的主从备份搭建\"><a href=\"#Mysql的主从备份搭建\" class=\"headerlink\" title=\"Mysql的主从备份搭建\"></a>Mysql的主从备份搭建</h1><h3 id=\"设置server-id，打开binlog\"><a href=\"#设置server-id，打开binlog\" class=\"headerlink\" title=\"设置server-id，打开binlog\"></a>设置server-id，打开binlog</h3><ol>\n<li><p>修改master节点的/etc/my.cnf, 在[mysqld] 下面加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">log-bin=mysql-bin</div><div class=\"line\">activiti在主从复制模式下需要设置format为mixed</div><div class=\"line\">binlog_format=MIXED</div><div class=\"line\">server-id=1</div><div class=\"line\">注意主从的server-id一定要不同即可</div></pre></td></tr></table></figure>\n</li>\n<li><p>重启master：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service mysqld restart</div></pre></td></tr></table></figure>\n</li>\n<li><p>修改slave节点的/etc/my.cnf, 在[mysqld] 下面加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">server-id=2</div></pre></td></tr></table></figure>\n</li>\n<li><p>重启slave：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service mysqld restart</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"创建数据库复制用户\"><a href=\"#创建数据库复制用户\" class=\"headerlink\" title=\"创建数据库复制用户\"></a>创建数据库复制用户</h3><ul>\n<li>master节点执行：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE USER &apos;repluser&apos;@&apos;%&apos; IDENTIFIED BY &apos;replpass&apos;;</div><div class=\"line\">GRANT REPLICATION SLAVE ON *.* TO &apos;repluser&apos;@&apos;%&apos;;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"设置初始复制点\"><a href=\"#设置初始复制点\" class=\"headerlink\" title=\"设置初始复制点\"></a>设置初始复制点</h3><ol>\n<li><p>对master节点进行锁表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">FLUSH TABLES WITH READ LOCK;</div></pre></td></tr></table></figure>\n</li>\n<li><p>master节点执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; show master status;</div><div class=\"line\">+------------------+----------+--------------+------------------+-------------------+</div><div class=\"line\">| File | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</div><div class=\"line\">+------------------+----------+--------------+------------------+-------------------+</div><div class=\"line\">| mysql-bin.000001 |  419 |  |  |   |</div><div class=\"line\">+------------------+----------+--------------+------------------+-------------------+</div><div class=\"line\">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>记下<strong>mysql-bin.000001 和 419</strong></p>\n<ol>\n<li><p>slave节点执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CHANGE MASTER TO MASTER_HOST=&apos;192.168.1.1&apos;, MASTER_USER=&apos;repluser&apos;, MASTER_PASSWORD=&apos;replpass&apos;, MASTER_LOG_FILE=&apos;mysql-bin.000001&apos;,MASTER_LOG_POS=419</div></pre></td></tr></table></figure>\n</li>\n<li><p>启动slave：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">start slave</div></pre></td></tr></table></figure>\n</li>\n<li><p>看是否正常工作, 在slave上面执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">show slave status /G;</div><div class=\"line\">#看到Slave_IO_Running和Slave_SQL_Running状态均为YES即可</div></pre></td></tr></table></figure>\n</li>\n<li><p>对master节点进行解锁</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">unlock tables;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"打开防火墙\"><a href=\"#打开防火墙\" class=\"headerlink\" title=\"打开防火墙\"></a>打开防火墙</h3><p>要注意的是可能需要打开防火墙：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">iptables -I INPUT -p tcp --dport 3306 -j ACCEPT</div></pre></td></tr></table></figure></p>\n","categories":[],"tags":[]},{"title":"samba服务器可以访问,无法写入故障","url":"https://blog.hyhcoder.top/2016/10/26/samba服务器可以访问-无法写入故障/","content":"<h1 id=\"samba服务器可以访问-无法写入故障\"><a href=\"#samba服务器可以访问-无法写入故障\" class=\"headerlink\" title=\"samba服务器可以访问,无法写入故障\"></a>samba服务器可以访问,无法写入故障</h1><h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>今天尝试了部署下samba文件服务器, 部署完毕后发现A机器可以访问B机器的共享目录, 但无法写入和看到里面的文件;</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><ol>\n<li>起初以为是访问的权限问题, 但将文件全改改为777也无果, 于是放弃该方向;</li>\n<li>使用指定ip及用户名直接访问<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">subclient -L 192.168.1.113 -U test</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>系统提示错误:NT_STATUS_ACCESS_DENIED<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Server requested LANMAN password (share-level security) but &apos;client lanman auth&apos; is disabled</div><div class=\"line\">tree connect failed: NT_STATUS_ACCESS_DENIED</div></pre></td></tr></table></figure></p>\n<p>原因是被被SELINUX阻挡了，只要关闭SELINUX便可以了</p>\n<h2 id=\"SELINUX\"><a href=\"#SELINUX\" class=\"headerlink\" title=\"SELINUX\"></a>SELINUX</h2><p>SELINUX几种状态表示：</p>\n<ul>\n<li>enforcing：强制模式，代表 SELinux 运行中，且已经正确的开始限制 domain/type 了;</li>\n<li>permissive：宽容模式：代表 SELinux 运行中，不过仅会有警告信息并不会实际限制 domain/type 的存取。这种模式可以运来作为 SELinux 的 debug 之用;</li>\n<li>disabled：关闭，SELinux 并没有实际运行。</li>\n</ul>\n<p>关闭SELINUX即可:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">getenforce //获取当前服务器的SELINUX状态, 看是否enforcing</div><div class=\"line\">setenforce 0 //临时更改SELINUX状态为permissive,重启失效</div></pre></td></tr></table></figure></p>\n<p>若要永久更改SELINUX状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/sysconfig/selinux  //将里面的enforing改为permissive</div></pre></td></tr></table></figure></p>\n","categories":[],"tags":[]},{"title":"CRON表达式详解","url":"https://blog.hyhcoder.top/2016/07/22/CRON表达式详解/","content":"<h1 id=\"CRON表达式详解\"><a href=\"#CRON表达式详解\" class=\"headerlink\" title=\"CRON表达式详解\"></a>CRON表达式详解</h1><h3 id=\"格式解释\"><a href=\"#格式解释\" class=\"headerlink\" title=\"格式解释\"></a>格式解释</h3><p>Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格式：</p>\n<ul>\n<li>Seconds Minutes Hours DayofMonth Month DayofWeek Year</li>\n<li>Seconds Minutes Hours DayofMonth Month DayofWeek</li>\n</ul>\n<p>Cron常用于linux的计划任务中,每个域可以出现的字符如下:</p>\n<ul>\n<li>Seconds: 可出现”, - * /“四个字符，有效范围为0-59的整数</li>\n<li>Minutes: 可出现”, - * /“四个字符，有效范围为0-59的整数</li>\n<li>Hours: 可出现”, - * /“四个字符，有效范围为0-23的整数</li>\n<li>DayofMonth: 可出现”, - * / ? L W C”八个字符，有效范围为0-31的整数</li>\n<li>Month: 可出现”, - * /“四个字符，有效范围为1-12的整数或JAN-DEc</li>\n<li>DayofWeek: 可出现”, - * / ? L C #”四个字符，有效范围为1-7的整数或SUN-SAT两个范围。1表示星期天，2表示星期一， 依次类推</li>\n<li><p>Year: 可出现”, - * /“四个字符，有效范围为1970-2099年<br>每个域一般都是使用数字,但也可以使用特殊符号,具体如下:</p>\n</li>\n<li><p>* : 表示匹配该域的任意值，假如在Minutes域使用*, 即表示每分钟都会触发事件。</p>\n</li>\n<li><p>? : 只能用在DayofMonth和DayofWeek两个域。它也匹配域的任意值，但实际不会。因为DayofMonth和 DayofWeek会相互影响。例如想在每月的20日触发调度，不管20日到底是星期几，则只能使用如下写法： 13 13 15 20 <em> ?, 其中最后一位只能用？，而不能使用</em>，如果使用*表示不管星期几都会触发，实际上并不是这样。</p>\n</li>\n<li><p>- : 表示范围，例如在Minutes域使用5-20，表示从5分到20分钟每分钟触发一次</p>\n</li>\n<li><p>/ ： 表示起始时间开始触发，然后每隔固定时间触发一次，例如在Minutes域使用5/20,则意味着5分钟触发一次，而25，45等分别触发一次.</p>\n</li>\n<li><p>, : 表示列出枚举值值。例如：在Minutes域使用5,20，则意味着在5和20分每分钟触发一次。</p>\n</li>\n<li><p>L : 表示最后，只能出现在DayofWeek和DayofMonth域，如果在DayofWeek域使用5L,意味着在最后的一个星期四触发。</p>\n</li>\n<li><p>W : 表示有效工作日(周一到周五),只能出现在DayofMonth域，系统将在离指定日期的最近的有效工作日触发事件。例如：在 DayofMonth使用5W，如果5日是星期六，则将在最近的工作日：星期五，即4日触发。如果5日是星期天，则在6日(周一)触发；如果5日在星期一 到星期五中的一天，则就在5日触发。另外一点，W的最近寻找不会跨过月份</p>\n</li>\n<li><p>LW : 这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。</p>\n</li>\n<li><p># : 用于确定每个月第几个星期几，只能出现在DayofMonth域。例如在4#2，表示某月的第二个星期三。</p>\n</li>\n</ul>\n<h3 id=\"范例\"><a href=\"#范例\" class=\"headerlink\" title=\"范例\"></a>范例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 0 10,14,16 * * ? 每天上午10点，下午2点，4点 </div><div class=\"line\">0 0/30 9-17 * * ? 朝九晚五工作时间内每半小时 </div><div class=\"line\">0 0 12 ? * WED 表示每个星期三中午12点 </div><div class=\"line\">0 0 12 * * ? 每天中午12点触发 </div><div class=\"line\">0 15 10 ? * * 每天上午10:15触发 </div><div class=\"line\">0 15 10 * * ? 每天上午10:15触发 </div><div class=\"line\">0 15 10 * * ? * 每天上午10:15触发 </div><div class=\"line\">0 15 10 * * ? 2005 2005年的每天上午10:15触发 </div><div class=\"line\">0 * 14 * * ?&quot; 在每天下午2点到下午2:59期间的每1分钟触发 </div><div class=\"line\">0 0/5 14 * * ? 在每天下午2点到下午2:55期间的每5分钟触发 </div><div class=\"line\">0 0/5 14,18 * * ? 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 </div><div class=\"line\">0 0-5 14 * * ? 在每天下午2点到下午2:05期间的每1分钟触发 </div><div class=\"line\">0 10,44 14 ? 3 WED 每年三月的星期三的下午2:10和2:44触发 </div><div class=\"line\">0 15 10 ? * MON-FRI 周一至周五的上午10:15触发 </div><div class=\"line\">0 15 10 15 * ? 每月15日上午10:15触发 </div><div class=\"line\">0 15 10 L * ? 每月最后一日的上午10:15触发 </div><div class=\"line\">0 15 10 ? * 6L 每月的最后一个星期五上午10:15触发 </div><div class=\"line\">0 15 10 ? * 6L 2002-2005 2002年至2005年的每月的最后一个星期五上午10:15触发 </div><div class=\"line\">0 15 10 ? * 6#3 每月的第三个星期五上午10:15触发</div></pre></td></tr></table></figure>\n<h3 id=\"相关网站\"><a href=\"#相关网站\" class=\"headerlink\" title=\"相关网站\"></a>相关网站</h3><p>若还觉得混乱, 还有相关的在线网站可以测试生成;</p>\n<ul>\n<li><a href=\"http://cron.qqe2.com/\" target=\"_blank\" rel=\"external\">在线cron表达式生成器</a></li>\n</ul>\n","categories":[],"tags":[]},{"title":"记录一些markdown的使用技巧","url":"https://blog.hyhcoder.top/2016/05/27/记录一些markdown的使用技巧/","content":"<h1 id=\"记录一些markdown的使用技巧\"><a href=\"#记录一些markdown的使用技巧\" class=\"headerlink\" title=\"记录一些markdown的使用技巧\"></a>记录一些markdown的使用技巧</h1><p>markdown这个工具用得越来越多, 也踩了一些坑, 开一篇文档记录下一些坑和技巧;</p>\n<ol>\n<li>在对代码引用的时候, 三点后面不能有空行或空格, 不然会导致读取错乱;</li>\n<li>#后面跟着标题时, 要留个空格, 不然有些解析器会读不出来;</li>\n<li>markdown表格是最麻烦的一块之一; 推荐个网站,轻松搞定表格:表格格式化;</li>\n<li>markdown插入图片也是一个麻烦点,推荐七牛云搭配图床网站,比如这个: 极简图床;</li>\n<li>对markdown语法用到的关键字引用, 比如#,*等, 要加\\转义;</li>\n<li>首行缩进, 可以在前面插入一个全角的空格或者加入&ensp;</li>\n<li>添加空行可以结束前面的格式状态;</li>\n<li>若要使图片居中或者限制大小, 可用html语言来写, 记住markdown其实也是一种标志性语言;</li>\n</ol>\n","categories":[],"tags":[]},{"title":"Git代理设置，加速clone","url":"https://blog.hyhcoder.top/2016/04/15/Git代理设置，加速clone/","content":"<h1 id=\"Git代理设置，加速clone\"><a href=\"#Git代理设置，加速clone\" class=\"headerlink\" title=\"Git代理设置，加速clone\"></a>Git代理设置，加速clone</h1><p>由于经常用到github看开源项目, 但是经常clone的速度确实不敢说;</p>\n<p>想到之前部署了一台服务器, 可以用ss代理来进行加速;</p>\n<p>步骤:</p>\n<ol>\n<li>确保ss客户端连接;</li>\n<li>打开命令行输入以下代码:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global http.proxy &apos;socks5://127.0.0.1:1090&apos; </div><div class=\"line\">git config --global https.proxy &apos;socks5://127.0.0.1:1090&apos;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>1090为ss的本地端口,这个要根据自己的设置来更改;</p>\n<p>这样就可以完成代理;再clone一个项目, 发现速度再也不卡了;尽情享受吧!</p>\n","categories":[],"tags":[]},{"title":"JSON,JSONArray,Map一些总结","url":"https://blog.hyhcoder.top/2016/01/09/JSON-JSONArray-Map一些总结/","content":"<p>JSON是目前前后端交互非常常用的一种格式, JSON其实是个总称,里面最小单元是JSONObject,就是由一连串键值对所组成的;而JSONArray则是由一连串JSONObject所组成的数组; Map也是一个键值对,但跟JSONObject有点不同, 下面再说说;</p>\n<p>我们先来看比较复杂的一个JSONArray:<br><img src=\"http://img.hyhcoder.top/17-4-9/4877941-file_1491745216641_1063b.png\" alt=\"enter image description here\"></p>\n<a id=\"more\"></a>\n<h3 id=\"我们可以看出\"><a href=\"#我们可以看出\" class=\"headerlink\" title=\"我们可以看出\"></a>我们可以看出</h3><ol>\n<li>这是一个数组, 最外面是由[ ]所组成的;</li>\n<li>里面包含了两个JSONObject,每个JSONObject最外面是由{ }组成的,里面的键值对由冒号:连接;</li>\n<li>第一个JSONObject是由几个JSONObject连环嵌套而成;</li>\n</ol>\n<h3 id=\"取数\"><a href=\"#取数\" class=\"headerlink\" title=\"取数\"></a>取数</h3><p>若我们要把name4的值取出来;</p>\n<ol>\n<li>将以上字符串转换为JSONArray对象；</li>\n<li>取出对象的第一项，JSONObject对象；</li>\n<li>取出name1的值JSONObject对象；</li>\n<li>取出name2的值JSONObject对象；</li>\n<li>取出name4的值value2。<br><strong>PS:</strong> 若要将示例的字符串转为JSONArray的格式可用:JSONArray.fromObject(String)</li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li><p>JSONObject<br>json对象，就是一个键对应一个值，使用的是大括号{ }，如：{key:value}</p>\n</li>\n<li><p>JSONArray<br>json数组，使用中括号[ ],只不过数组里面的项也是json键值对格式的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">JSONObject Json = new JSONObject();  </div><div class=\"line\">JSONArray JsonArray = new JSONArray();    </div><div class=\"line\">Json.put(&quot;key&quot;, &quot;value&quot;);//JSONObject对象中添加键值对  </div><div class=\"line\">JsonArray.put(Json);//将JSONObject对象添加到Json数组中</div></pre></td></tr></table></figure>\n</li>\n<li><p>Map<br>map和json都是键值对，不同的是map中的每一对键值对是用等号对应起来的，如：userName=”LiMing”, 而json中的每一对键值对是用冒号对应起来的，如：userAge:18,  其实json就是一种特殊形式的map。</p>\n</li>\n</ol>\n","categories":[],"tags":[]},{"title":"解决/bin/bash^M: bad interpreter: No such file or directory","url":"https://blog.hyhcoder.top/2015/09/09/解决-bin-bash-M-bad-interpreter-No-such-file-or-directory/","content":"<p>今天编译了一个程序,然后上传到服务器运行时,居然报了以下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/bin/bash^M: bad interpreter: No such file or directory&apos;</div></pre></td></tr></table></figure></p>\n<p>查阅资料, 可以得知是因为linux和windows对换行符理解的不同所导致的,解决很简单;</p>\n<a id=\"more\"></a>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><ol>\n<li><p>使用sed命令,即可顺利转换;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sed -i &apos;s/\\r$//&apos; /mnt/www/xxx.sh</div></pre></td></tr></table></figure>\n</li>\n<li><p>或者使用dos2unix命令,也可以顺利转换;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">dos2unix /mnt/www/xxx.sh</div><div class=\"line\">//不过要注意的是dos2unix这个有些系统没安装,可通过下面命令安装</div><div class=\"line\">yum install dos2unix</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"从根本解决\"><a href=\"#从根本解决\" class=\"headerlink\" title=\"从根本解决\"></a>从根本解决</h3><p>使用上面的命令的确解决了该脚本无法运行的错误, 但是不可能让我每次编译后再在linux上执行转换命令吧, 这个不科学;</p>\n<p>继续探究, 发现我们可以在Eclipse上设置换行符的模式为unix, 这就可以避免我们的文件在unix运行的尴尬了;</p>\n<ol>\n<li><p>设置<br><img src=\"http://img.hyhcoder.top/17-4-9/99388935-file_1491743658921_72a3.png\" alt=\"enter image description here\"></p>\n</li>\n<li><p>该设置只是对新建的文件有效, 还需要对之前的文件进行转换;<br><img src=\"http://img.hyhcoder.top/17-4-9/44570419-file_1491743952413_246c.png\" alt=\"enter image description here\"></p>\n</li>\n<li><p>至此,该问题全部解决</p>\n</li>\n</ol>\n","categories":[],"tags":[]},{"title":"oracle11g导出一些表缺失问题","url":"https://blog.hyhcoder.top/2015/05/20/oracle11g导出一些表缺失问题/","content":"<h1 id=\"oracle11g导出一些表缺失问题\"><a href=\"#oracle11g导出一些表缺失问题\" class=\"headerlink\" title=\"oracle11g导出一些表缺失问题\"></a>oracle11g导出一些表缺失问题</h1><p>oracle11g的新特性，数据条数是0时不分配segment，所以就不能被导出。</p>\n<h3 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h3><ol>\n<li>插入一条数据（或者再删除），浪费时间，有时几百张表会累死的。</li>\n<li>在创建数据库之前</li>\n</ol>\n<ul>\n<li>使用代码：然后再建表就不会有问题了;<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter system set  deferred_segment_creation=false;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这两种方法都不是非常好;</p>\n<h3 id=\"下面是终极方法：\"><a href=\"#下面是终极方法：\" class=\"headerlink\" title=\"下面是终极方法：\"></a>下面是终极方法：</h3><p>1 . 先查询一下哪些表是空的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select table_name from user_tables where NUM_ROWS=0;</div></pre></td></tr></table></figure></p>\n<p>2 . 然后通过select 来生成修改语句：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Select &apos;alter table&apos;||table_name||&apos;allocate extent;&apos; from user_tables where num_rows=0 or num_rows is null;</div></pre></td></tr></table></figure></p>\n<p>3 . 最后生成了下面那些东西：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table E2USER_STATE allocate extent; </div><div class=\"line\">alter table ENTERPRISE_E2USER allocate extent; </div><div class=\"line\">alter table ENTERPRISE_INFO_TYPE allocate extent; </div><div class=\"line\">alter table ENTERPRISE_MAPMARK allocate extent; </div><div class=\"line\">alter table ENTERPRISE_NEEDTASK allocate extent; </div><div class=\"line\">alter table ENTERPRISE_PICTURE allocate extent; </div><div class=\"line\">alter table ENTERPRISE_REPORT allocate extent; </div><div class=\"line\">alter table ENTERPRISE_REPORT_TYPE allocate extent; </div><div class=\"line\">alter table ENTERPRISE_TEAM allocate extent; </div><div class=\"line\">alter table FROMUSER_ADJUNCT_TARGET allocate extent; </div><div class=\"line\">alter table FROMUSER_OFFER allocate extent; </div><div class=\"line\">alter table NEEDTASK_TYPE allocate extent; </div><div class=\"line\">alter table SYS_PRIVILEGE allocate extent; </div><div class=\"line\">alter table SYS_RELEVANCE_RESOURCE allocate extent; </div><div class=\"line\">alter table SYS_RELEVANCE_TARGET allocate extent; </div><div class=\"line\">alter table SYS_RESOURCE_TYPE allocate extent; </div><div class=\"line\">alter table TASK_FEEDBACK allocate extent; </div><div class=\"line\">alter table TASK_MYTASKTYPE allocate extent; </div><div class=\"line\">alter table TOUSER_MESSAGE allocate extent; </div><div class=\"line\">alter table ABOUTUSER_POINT allocate extent; </div><div class=\"line\">alter table ABOUTUSER_POINT_MARK allocate extent; </div><div class=\"line\">alter table ABOUTUSER_QUERYKEY allocate extent; </div><div class=\"line\">alter table ABOUTUSER_REPORT_HISTORY allocate extent; </div><div class=\"line\">alter table DICT_COMMENT_TYPE allocate extent; </div><div class=\"line\">alter table DICT_INDUSTRY_TYPE allocate extent; </div><div class=\"line\">alter table DICT_POST allocate extent; </div><div class=\"line\">alter table DICT_REGION allocate extent; </div><div class=\"line\">alter table ENTERPRISE_COMMENT allocate extent; </div><div class=\"line\">alter table ENTERPRISE_COMMENT_C allocate extent; </div><div class=\"line\">alter table ENTERPRISE_INFO allocate extent; </div><div class=\"line\">alter table ENTERPRISE_INFO_C allocate extent; </div><div class=\"line\">alter table ENTERPRISE_INFO_STATE allocate extent; </div><div class=\"line\">alter table CALENDAR_CREATETYPE allocate extent; </div><div class=\"line\">alter table CALENDAR_MY allocate extent; </div><div class=\"line\">alter table CALENDAR_TYPE allocate extent;</div></pre></td></tr></table></figure></p>\n<p>ok 执行上面那些sql，之后再exp吧，那就是见证奇迹的时刻。</p>\n","categories":[],"tags":[]},{"title":"随记","url":"https://blog.hyhcoder.top/2015/03/16/Android 随记/","content":"<h1 id=\"Android-随记\"><a href=\"#Android-随记\" class=\"headerlink\" title=\"Android 随记\"></a>Android 随记</h1><p>1 . Android 四大组件</p>\n<ul>\n<li>活动(Activity)</li>\n<li>服务(Service)</li>\n<li>广播接收器(Broadcast Receiver)</li>\n<li>内容提供器(Context Provider)</li>\n</ul>\n<p>2 . Android 分成五层架构 (硬件层)</p>\n<ul>\n<li>Linux 内核层 (提供底层驱动)</li>\n<li>系统运行库层(通过 C/C++库)(Sqlite , webkit)(虚拟机)</li>\n<li>应用框架层 (API)</li>\n<li>应用层</li>\n</ul>\n<p>3 . Android 设计讲究逻辑和视图分离</p>\n<ul>\n<li>在代码中通过R.string.hello_world 获得该字符串引用</li>\n<li>在xml中通过@string/hello_world 获得该字符串</li>\n</ul>\n<p>4 . 活动状态</p>\n<ul>\n<li>运行状态</li>\n<li>暂停状态</li>\n<li>停止状态</li>\n<li>销毁状态</li>\n</ul>\n<p>5 . 7个函数</p>\n<ul>\n<li>OnCreate() — &gt; OnDestroy()</li>\n<li>OnStart() — &gt; OnStop()</li>\n<li>OnResume() — &gt; OnPause()</li>\n<li>OnRestart()</li>\n</ul>\n<p>6 . 活动启动模式</p>\n<ul>\n<li>standard</li>\n<li>singleTask</li>\n<li>singleTop</li>\n<li>singleInstance</li>\n</ul>\n<p>7 . 四种布局</p>\n<ul>\n<li>LinearLayout</li>\n<li>RelativeLayout</li>\n<li>FrameLayout</li>\n<li>TableLayout</li>\n</ul>\n<p>8 . 单位和尺寸<br>*Px为像素 ,pt为磅数</p>\n<ul>\n<li>dp为密度无关像素, sp为可伸缩像素(文字)</li>\n</ul>\n<p>9 . 碎片的几个回调方法</p>\n<ul>\n<li>onAttach() : 当碎片和活动建立关联时调用</li>\n<li>onCreateView() : 为碎片创建视图(加载布局)时调用</li>\n<li>onActivityCreated() : 确保与碎片关联的活动一定已创建完毕时调用.</li>\n<li>onDestroyView() : 当与碎片关联的视图被移除的时候调用;</li>\n<li>onDetach() : 当碎片和活动解除关联时调用;</li>\n</ul>\n<p>10 . 发送广播可用Intent, 接收用BroadcastReceiver</p>\n<ul>\n<li>标准广播 (完全异步执行)</li>\n<li>有序广播 (同步执行)</li>\n</ul>\n<p>11 . 数据持久化功能 :</p>\n<ul>\n<li>文件存储</li>\n<li>SharedPreference存储</li>\n<li>数据库存储</li>\n</ul>\n<p>12 . 获取其他程序的数据: 获得该应用程序的内容URI(借助contentResolver进行操作);</p>\n<p>13 . Android 异步消息处理:</p>\n<ul>\n<li>Message (线程之间传递的消息)</li>\n<li>Handler (处理者, 用于发送和处理消息的)</li>\n<li>MessageQueue (消息队列)</li>\n<li>Looper (每个线程中的MessageQueue管家)</li>\n</ul>\n<p>14 . AsyncTask</p>\n<p>15 . 服务(Service)是Android中实现程序后台运行的解决方案,它非常适合用于去执行那些不需要和用户交互而且还要求长期运行的任务;</p>\n<p>16 . Android 中定时任务一般两种实现方式:</p>\n<ul>\n<li>使用Java API 里提供的Timer类</li>\n<li>使用Android的Alarm机制</li>\n</ul>\n<p>17 . Xml两种解析方式:</p>\n<ul>\n<li>pull解析</li>\n<li>SAX解析</li>\n</ul>\n<p>18 . JSON格式解析;</p>\n<ul>\n<li>JSONObject 解析</li>\n<li>使用GSON开源库来解析</li>\n</ul>\n<p>19 . 全局context, 编写一个类,用类静态参数;</p>\n<p>20 . 常用viewPager + fragment方式开发侧滑动;(有开源项目)</p>\n<p>21 . Android ANR错误 (“Application Not Responding”)</p>\n<ul>\n<li>主线程(“事件处理线程”/ “UI线程”) 在5秒内没响应输入;</li>\n<li>BroadCastReceiver 没有在10秒内完成返回;</li>\n</ul>\n<p>22 . NDK为了方便调用第三方的C/C++的库;</p>\n","categories":[],"tags":[]},{"title":"Java与C++在面向对象基本概念上的区分","url":"https://blog.hyhcoder.top/2015/03/03/Java与C++在面向对象基本概念上的区分/","content":"<h1 id=\"Java与C-在面向对象基本概念上的区分\"><a href=\"#Java与C-在面向对象基本概念上的区分\" class=\"headerlink\" title=\"Java与C++在面向对象基本概念上的区分\"></a>Java与C++在面向对象基本概念上的区分</h1><p>今天在面试的时候,被问到了Java和C++在面向对象上的区别, 居然一时不知道怎么回到, 平时一般都只知道面向对象, 然后了解到C是面向结构的, C++和Java是面向对象, 都没怎么去留意两者之间的差别;特此回来整理下, 然后以此备忘;</p>\n<h2 id=\"最基本区别\"><a href=\"#最基本区别\" class=\"headerlink\" title=\"最基本区别\"></a>最基本区别</h2><ul>\n<li>Java是一个完全面向对象的语言, C++是一个面向对象和面向过程的杂合体; 这是为了兼容C而导致的;</li>\n<li>Java中的所有东西都必须置入一个类。不存在全局函数、全局数据，也没有像结构、枚举或者联合这种东西，一切只有“类”！</li>\n<li>然而C++则不同，比如C++的main方法是置于所有的类之外的，除此之外还可以在类外定义其它的函数。在C++中，全局变量、结构、枚举、联合等一些列源于C的概念仍然存在。对于在这个问题上的区别，不同的人会有不同的看法，C++的优点是灵活机动，而且比较利于C程序员接受，因为在C中成立的事情在C++中基本上不会出现差错，他们只需要了解C++多了哪些东西便可以了，然而也正因为如此，C++杂糅了面向对象和面向过程的双重概念，由此产生出的很多机制在强化某部分功能的同时破坏了程序的整体结构。</li>\n<li>与此相比，Java语言去除了C++中为了兼容C语言而保留的非面向对象的内容，对于对C比较习惯的人来说不是十分友好，在很多问题的处理上也显得有些弃简就繁，但是它以此换来了严谨和可靠的结构，以及在维护和管理上的方便。</li>\n<li><strong>因此对两种语言的总体比较可以得出的结论是：C++更加灵活而Java更加严谨。</strong></li>\n</ul>\n<h2 id=\"类定义和类方法的定义上的区别\"><a href=\"#类定义和类方法的定义上的区别\" class=\"headerlink\" title=\"类定义和类方法的定义上的区别\"></a>类定义和类方法的定义上的区别</h2><p>Java中没有独立的类声明，只有类定义。在定义类和类的方法（C++中称为成员函数）上，让我们用一个C++的典型类定义的片段来说明两者的不同：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">class score</div><div class=\"line\">&#123;</div><div class=\"line\">score(int);</div><div class=\"line\">&#125;;</div><div class=\"line\">score::score(int x)</div><div class=\"line\">&#123;</div><div class=\"line\">//写下构造函数的具体定义</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这个例子反映了C++和Java的三个不同之处：</p>\n<ol>\n<li>在Java中，类定义采取几乎和C++一样的形式，只不过没有标志结束的分号。</li>\n<li>Java中的所有方法都是在类的主体定义的而C++并非如此。在Java中我们必须将函数的定义置于类的内部，这种禁止在类外对方法定义的规定和Java的完全面向对象特性是吻合的。</li>\n<li>Java中没有作用域范围运算符“::”。Java利用“.”做所有的事情，但可以不用考虑它，因为只能在一个类里定义元素。即使那些方法定义，也必须在一个类的内部，所以根本没有必要指定作用域的范围。而对于static方法的调用，也是通过使用ClassName.methodName()就可以了。</li>\n</ol>\n<h2 id=\"类和对象的建立与回收机制上的区别\"><a href=\"#类和对象的建立与回收机制上的区别\" class=\"headerlink\" title=\"类和对象的建立与回收机制上的区别\"></a>类和对象的建立与回收机制上的区别</h2><ul>\n<li>Java提供了与C++类似的构造函数。如果不自己定义一个，就会获得一个默认构造函数。而如果定义了一个非默认的构造函数，就不会为我们自动定义默认构造函数。这和C++是一样的。但是在Java中没有拷贝构造函数，因为所有自变量都是按引用传递的。</li>\n<li>静态初始化器是Java的一个独特概念，与构造函数对每个新建的对象初始化相对的，静态初始化器对每个类进行初始化，它不是方法，没有方法名、返回值和参数列表，在系统向内存加载时自动完成。</li>\n<li>另一方面，在C++中，对象的释放和回收是通过编程人员执行某种特殊的操作来实现的，像利用new运算符创建对象一样，利用delete运算符可以回收对象。但在Java语言中，为方便、简化编程并减少错误，对象的回收是由系统的垃圾回收机制自动完成的。Java的垃圾回收机制是一个系统后台线程，它与用户的程序共存，能够检测用户程序中各对象的状态。当它发现一个对象已经不能继续被程序利用时，就把这个对象记录下来，这种不能再使用的对象被称为内存垃圾。当垃圾达到一定数目且系统不是很忙时，垃圾回收线程会自动完成所有垃圾对象的内存释放工作，在这个过程中，在回收每个垃圾对象的同时，系统将自动调用执行它的终结器（finalize)方法。</li>\n<li>finalize()方法与C++中的析构函数（Destructor）有类似的地方，但是finalize()是由垃圾收集器调用的，而且只负责释放“资源”（如打开的文件、套接字、端口、URL等等）。如需在一个特定的地点做某样事情，必须创建一个特殊的方法，并调用它，不能依赖finalize()。而在另一方面，C++中的所有对象都会（或者说“应该”）破坏，但并非Java中的所有对象都会被当作“垃圾”收集掉。由于Java不支持析构函数的概念，所以在必要的时候，必须谨慎地创建一个清除方法。而且针对类内的基础类以及成员对象，需要明确调用所有清除方法。</li>\n</ul>\n<h2 id=\"重载方面的区别——Java没有运算符重载\"><a href=\"#重载方面的区别——Java没有运算符重载\" class=\"headerlink\" title=\"重载方面的区别——Java没有运算符重载\"></a>重载方面的区别——Java没有运算符重载</h2><p>多态是面向对象程序设计的一个特殊特性，重载则是它的重要体现。在C++中，同时支持函数重载和运算符重载，而Java具有方法重载的能力，但不允许运算符重载。</p>\n<h2 id=\"继承方面的区别——关于访问权限\"><a href=\"#继承方面的区别——关于访问权限\" class=\"headerlink\" title=\"继承方面的区别——关于访问权限\"></a>继承方面的区别——关于访问权限</h2><ul>\n<li>在C++中存在三种继承模式——公有继承、私有继承和保护继承。其中公有继承使基类中的非私有成员在派生类中的访问属性保持不变，保护继承使基类中的非私有成员在派生类中的访问属性都降一级，而私有继承使基类中的非私有成员都成为派生类中的私有成员。</li>\n<li>在Java中，只有公有继承被保留了下来，Java中的继承不会改变基础类成员的保护级别。我们不能在Java中指定public，private或者protected继承，这一点与C++是不同的。此外，在衍生类中的优先方法不能减少对基础类方法的访问。例如，假设一个成员在基础类中属于public，而我们用另一个方法代替了它，那么用于替换的方法也必须属于public（编译器会自动检查）。<br>继承方面的区别——关于多继承</li>\n</ul>\n<p>所谓多重继承，是指一个子类可以有一个以上的直接父类。</p>\n<ul>\n<li>C++在语法上直接支持多继承，其格式为：class 派生类名：访问控制关键字 1 基类名1，访问控制关键字 2 基类名2，…</li>\n<li>Java出于简化程序结构的考虑，取消了语法上对多继承的直接支持，而是用接口来实现多重继承功能的结构。</li>\n</ul>\n<p>这样一来，对于仅仅设计成一个接口的东西，以及对于用extends关键字在现有功能基础上的扩展，两者之间便产生了一个明显的差异。不值得用abstract关键字产生一种类似的效果，因为我们不能创建属于那个类的一个对象。一个abstract（抽象）类可包含抽象方法（尽管并不要求在它里面包含什么东西），但它也能包含用于具体实现的代码。因此，它被限制成一个单一的继承。通过与接口联合使用，这一方案避免了对类似于C++虚基类那样的一些机制的需要。由此而来的，Java中没有virtual关键字。</p>\n<h2 id=\"其他方面的区别\"><a href=\"#其他方面的区别\" class=\"headerlink\" title=\"其他方面的区别\"></a>其他方面的区别</h2><p>除此之外, 还有一些区别, 比如指针与引用的问题，异常机制的问题，流程控制的问题等等。通过两种语言在种种方面的差异我们可以很明显地感觉两者在风格上的差异。</p>\n","categories":[],"tags":[]},{"title":"mysqldump命令一点总结","url":"https://blog.hyhcoder.top/2015/02/09/mysqldump命令一点总结/","content":"<h1 id=\"mysqldump命令一点总结\"><a href=\"#mysqldump命令一点总结\" class=\"headerlink\" title=\"mysqldump命令一点总结\"></a>mysqldump命令一点总结</h1><h3 id=\"常见的几种导出方式\"><a href=\"#常见的几种导出方式\" class=\"headerlink\" title=\"常见的几种导出方式\"></a>常见的几种导出方式</h3><ol>\n<li><p>导出结构不导出数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -d 数据库名 -uroot -p &gt; xxx.sql</div></pre></td></tr></table></figure>\n</li>\n<li><p>导出数据不导出结构</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -t 数据库名 -uroot -p &gt; xxx.sql</div></pre></td></tr></table></figure>\n</li>\n<li><p>导出数据和表结构</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump 数据库名 -uroot -p &gt; xxx.sql</div></pre></td></tr></table></figure>\n</li>\n<li><p>导出特定表的结构</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -uroot -p -B数据库名 --table 表名 &gt; xxx.sql</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"支持的选项\"><a href=\"#支持的选项\" class=\"headerlink\" title=\"支持的选项\"></a>支持的选项</h3><p><strong>mysqldump [OPTIONS] database [tables]</strong></p>\n<p>mysqldump支持下列选项:<br>–add-locks<br>在每个表导出之前增加LOCK TABLES并且之后UNLOCK TABLE。(为了使得更快地插入到MySQL)。</p>\n<p>–add-drop-table<br>在每个create语句之前增加一个drop table。</p>\n<p>–allow-keywords<br>允许创建是关键词的列名字。这由表名前缀于每个列名做到。</p>\n<p>-c, –complete-insert<br>使用完整的insert语句(用列名字)。</p>\n<p>-C, –compress<br>如果客户和服务器均支持压缩，压缩两者间所有的信息。</p>\n<p>–delayed<br>用INSERT DELAYED命令插入行。</p>\n<p>-e, –extended-insert<br>使用全新多行INSERT语法。（给出更紧缩并且更快的插入语句）</p>\n<p>-#, –debug[=option_string]<br>跟踪程序的使用(为了调试)。</p>\n<p>–help<br>显示一条帮助消息并且退出。</p>\n<p>-F, –flush-logs<br>在开始导出前，洗掉在MySQL服务器中的日志文件。</p>\n<p>-f, –force,<br>即使我们在一个表导出期间得到一个SQL错误，继续。</p>\n<p>-h, –host=..<br>从命名的主机上的MySQL服务器导出数据。缺省主机是localhost。</p>\n<p>-l, –lock-tables.<br>为开始导出锁定所有表。</p>\n<p>-t, –no-create-info<br>不写入表创建信息(CREATE TABLE语句）</p>\n<p>-d, –no-data<br>不写入表的任何行信息。如果你只想得到一个表的结构的导出，这是很有用的！</p>\n<p>–opt<br>同–quick –add-drop-table –add-locks –extended-insert –lock-tables。<br>应该给你为读入一个MySQL服务器的尽可能最快的导出。</p>\n<p>-pyour_pass, –password[=your_pass]<br>与服务器连接时使用的口令。如果你不指定“=your_pass”部分,mysqldump需要来自终端的口令。</p>\n<p>-P port_num, –port=port_num<br>与一台主机连接时使用的TCP/IP端口号。（这用于连接到localhost以外的主机，因为它使用 Unix套接字。）</p>\n<p>-q, –quick<br>不缓冲查询，直接导出至stdout；使用mysql_use_result()做它。</p>\n<p>-S /path/to/socket, –socket=/path/to/socket<br>与localhost连接时（它是缺省主机)使用的套接字文件。</p>\n<p>-T, –tab=path-to-some-directory<br>对于每个给定的表，创建一个table_name.sql文件，它包含SQL CREATE 命令，和一个table_name.txt文件，它包含数据。 注意：这只有在mysqldump运行在mysqld守护进程运行的同一台机器上的时候才工作。.txt文件的格式根据–fields-xxx和–lines–xxx选项来定。</p>\n<p>-u user_name, –user=user_name<br>与服务器连接时，MySQL使用的用户名。缺省值是你的Unix登录名。</p>\n<p>-O var=option, –set-variable var=option设置一个变量的值。可能的变量被列在下面。</p>\n<p>-v, –verbose<br>冗长模式。打印出程序所做的更多的信息。</p>\n<p>-V, –version<br>打印版本信息并且退出。</p>\n<p>-w, –where=’where-condition’<br>只导出被选择了的记录；注意引号是强制的！</p>\n","categories":[],"tags":[]},{"title":"关于android环境搭建时sdk和adt下载慢的解决方法","url":"https://blog.hyhcoder.top/2014/12/11/关于android环境搭建时sdk和adt下载慢的解决方法/","content":"<h1 id=\"关于android环境搭建时sdk和adt下载慢的解决方法\"><a href=\"#关于android环境搭建时sdk和adt下载慢的解决方法\" class=\"headerlink\" title=\"关于android环境搭建时sdk和adt下载慢的解决方法\"></a>关于android环境搭建时sdk和adt下载慢的解决方法</h1><p>在下载sdk或adt插件时有时可能无法下载或者慢，因为各种我们知道的原因。</p>\n<p>我们可以通过修改hosts文件来解决。</p>\n<p>在Ubuntu中，输入下面的命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gedit /etc/hosts</div></pre></td></tr></table></figure></p>\n<p>然后在里面加入:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">203.208.46.146 dl.google.com </div><div class=\"line\">203.208.46.146 dl-ssl.google.com</div></pre></td></tr></table></figure></p>\n","categories":[],"tags":["android"]},{"title":"ubuntu安装后鼠标闪烁和卡顿问题","url":"https://blog.hyhcoder.top/2014/12/10/ubuntu安装后鼠标闪烁和卡顿问题/","content":"<h1 id=\"win7下安装ubuntu14-04双系统\"><a href=\"#win7下安装ubuntu14-04双系统\" class=\"headerlink\" title=\"win7下安装ubuntu14.04双系统\"></a>win7下安装ubuntu14.04双系统</h1><p>之前的ubuntu卸载掉了，最近想组建个linux下的android开发环境，因此把一些内容整理一下。</p>\n<ol>\n<li>我们首先需要在win7下把硬盘的一些空间压缩出来，比如选择F盘，进行压缩卷，然后把压缩出来的部分删除卷，使其变成黑色未分配状态，这样就为ubuntu的安装提供了空间，一般需要50G以上比较充足;</li>\n<li>ubuntu现在是14.04,去官网下载相关的iso文件，然后下载esayBCD安装，用于引导启动;</li>\n<li>打开easyBCD，添加新条目，然后在NEOgrup选项中点击安装，然后点配置，出现一个txt的文件，用下面的内容将其覆盖;<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title Install Ubuntu</div><div class=\"line\">root (hd0,0)</div><div class=\"line\">kernel (hd0,0)/vmlinuz boot=casper iso-scan/filename=/ubuntu-14.04-desktop-am64.iso ro quiet splash locale=zh_CN.UTF-8</div><div class=\"line\">initrd (hd0,0)/initrd.lz</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>注意:</strong><br>ubuntu-14.04-desktop-am64.iso是你的iso的名字，别写成我的了，这个要改成你的。<br>对于有的电脑上你的第一个盘符并不是C盘，在磁盘管理中可以看出，所以安装时需将(hd0,0)改为（hd0,1）【假设为第二个】。</p>\n<ol>\n<li><p>把下载后iso镜像文件用压缩软件或者虚拟光驱打开，找到casper文件夹，把里面的initrd.lz和vmlinuz解压到C盘，把.disk文件夹也解压到C盘，然后在把整个iso文件复制到C盘;</p>\n</li>\n<li><p>重启，会多了一个neogrup的启动项，进去，就会进入ubuntu的试用界面;</p>\n</li>\n<li><p>这一步很重要，不然可能会失败，按Ctrl+Alt+T 打开终端，输入代码:sudo umount -l /isodevice这一命令取消掉对光盘所在 驱动器的挂载（注意，这里的-l是L的小写，-l 与 /isodevice 有一个空格。），否则分区界面找不到分区;</p>\n</li>\n<li><p>做完上面的步骤，就可以点击桌面的安装进行安装了，这里除了分区没什么需要注意的。<br>（说下分区，一般分 / 50g ext4格式 ， /home 30G ext4格式 ，swap分区 8g）<br>这是我自己的，其他可以按比例分，并且只有/分区也就是根分区是必须的，其他看硬盘大小;</p>\n</li>\n<li><p>等待安装完重启便可以了;</p>\n</li>\n<li><p>最后进入Windows 7，打开EasyBCD删除安装时改的menu.lst文件，按Remove即可。<br>然后去我们的c盘 删除vmlinuz，initrd.lz和系统的iso文件。<br>利用EasyBCD可以更改启动项菜单按Edit Boot Menu按钮，可以选择将Windows7设为默认开机选项.</p>\n</li>\n</ol>\n","categories":[],"tags":["部署"]},{"title":"win7下安装ubuntu14.04双系统","url":"https://blog.hyhcoder.top/2014/12/09/win7下安装ubuntu14-04双系统/","content":"<h1 id=\"win7下安装ubuntu14-04双系统\"><a href=\"#win7下安装ubuntu14-04双系统\" class=\"headerlink\" title=\"win7下安装ubuntu14.04双系统\"></a>win7下安装ubuntu14.04双系统</h1><p>之前的ubuntu卸载掉了，最近想组建个linux下的android开发环境，因此把一些内容整理一下。</p>\n<ol>\n<li>我们首先需要在win7下把硬盘的一些空间压缩出来，比如选择F盘，进行压缩卷，然后把压缩出来的部分删除卷，使其变成黑色未分配状态，这样就为ubuntu的安装提供了空间，一般需要50G以上比较充足;</li>\n<li>ubuntu现在是14.04,去官网下载相关的iso文件，然后下载esayBCD安装，用于引导启动;</li>\n<li>打开easyBCD，添加新条目，然后在NEOgrup选项中点击安装，然后点配置，出现一个txt的文件，用下面的内容将其覆盖;<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title Install Ubuntu</div><div class=\"line\">root (hd0,0)</div><div class=\"line\">kernel (hd0,0)/vmlinuz boot=casper iso-scan/filename=/ubuntu-14.04-desktop-am64.iso ro quiet splash locale=zh_CN.UTF-8</div><div class=\"line\">initrd (hd0,0)/initrd.lz</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>注意:</strong><br>ubuntu-14.04-desktop-am64.iso是你的iso的名字，别写成我的了，这个要改成你的。<br>对于有的电脑上你的第一个盘符并不是C盘，在磁盘管理中可以看出，所以安装时需将(hd0,0)改为（hd0,1）【假设为第二个】。</p>\n<ol>\n<li><p>把下载后iso镜像文件用压缩软件或者虚拟光驱打开，找到casper文件夹，把里面的initrd.lz和vmlinuz解压到C盘，把.disk文件夹也解压到C盘，然后在把整个iso文件复制到C盘;</p>\n</li>\n<li><p>重启，会多了一个neogrup的启动项，进去，就会进入ubuntu的试用界面;</p>\n</li>\n<li><p>这一步很重要，不然可能会失败，按Ctrl+Alt+T 打开终端，输入代码:sudo umount -l /isodevice这一命令取消掉对光盘所在 驱动器的挂载（注意，这里的-l是L的小写，-l 与 /isodevice 有一个空格。），否则分区界面找不到分区;</p>\n</li>\n<li><p>做完上面的步骤，就可以点击桌面的安装进行安装了，这里除了分区没什么需要注意的。<br>（说下分区，一般分 / 50g ext4格式 ， /home 30G ext4格式 ，swap分区 8g）<br>这是我自己的，其他可以按比例分，并且只有/分区也就是根分区是必须的，其他看硬盘大小;</p>\n</li>\n<li><p>等待安装完重启便可以了;</p>\n</li>\n<li><p>最后进入Windows 7，打开EasyBCD删除安装时改的menu.lst文件，按Remove即可。<br>然后去我们的c盘 删除vmlinuz，initrd.lz和系统的iso文件。<br>利用EasyBCD可以更改启动项菜单按Edit Boot Menu按钮，可以选择将Windows7设为默认开机选项.</p>\n</li>\n</ol>\n","categories":[],"tags":["部署"]},{"title":"关于Java中转换机制整理","url":"https://blog.hyhcoder.top/2014/10/28/关于Java中转换机制整理/","content":"<h1 id=\"关于Java中转换机制整理\"><a href=\"#关于Java中转换机制整理\" class=\"headerlink\" title=\"关于Java中转换机制整理\"></a>关于Java中转换机制整理</h1><p>这两天在会看think in java, 顺便整理一些东西;</p>\n<p>下面是最基本的数据类型比较:<br><img src=\"http://img.hyhcoder.top/17-3-26/94101325-file_1490513405075_15bf5.gif\" alt=\"\"></p>\n<p>说明几点:<br>1 . 也可以分为两大类：boolean类型和数值类型（主要为了数据转换时用）</p>\n<ul>\n<li>注意boolean不能与其他类型转换，把boolean赋予一个int等类型是不可以的</li>\n</ul>\n<p>2 . String字符串并不是基本数据类型，字符串是一个类，就是说是一个引用数据类型。<br>3 . 若还需要用更高精度的浮点数，可以考虑使用BigDecimal类。<br>4 . Java提供了三个特殊的浮点数值：正无穷大、负无穷大和非数，用于表示溢出和出错。<br>5 . 例如使用一个正浮点数除以0将得到正无穷大（POSITIVE_INFINITY）;负浮点数除以0得到负无穷大（NEGATIVE_INFINITY）。0.0除以0.0或对一个负数开方得到一个非数（NaN）。（都属于Double或Float包装类）<br>6 . 所有正无穷大数值相等，所有负无穷大数值都是相等；而NaN不与任何数值相等。</p>\n<h3 id=\"1-基本数值型类型的自动类型转换\"><a href=\"#1-基本数值型类型的自动类型转换\" class=\"headerlink\" title=\"1.基本数值型类型的自动类型转换\"></a>1.基本数值型类型的自动类型转换</h3><p>这种很好理解，就是在基本类型中（boolean除外），可以系统自动转换把范围小的直接赋予范围大的变量。</p>\n<ul>\n<li>一般是实行如下转换，不用特别标记:<br><img src=\"http://img.hyhcoder.top/17-3-26/56836039-file_1490513440333_7802.png\" alt=\"\"></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AutoConversion</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">       <span class=\"keyword\">int</span> a = <span class=\"number\">6</span>;</div><div class=\"line\">       <span class=\"keyword\">float</span> f = a;<span class=\"comment\">//int可以自动转为float</span></div><div class=\"line\">        </div><div class=\"line\">       <span class=\"keyword\">byte</span> b = <span class=\"number\">9</span>;</div><div class=\"line\">       <span class=\"keyword\">char</span> c = b;<span class=\"comment\">//出错，byte不能转为char型</span></div><div class=\"line\">       <span class=\"keyword\">double</span> d = b;<span class=\"comment\">//byte 可以转为double</span></div><div class=\"line\">        </div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<p><strong>PS：</strong>有一种比较特殊的自动类型转换，就是把基本类型（boolean也行）和一个空字符连接起来，可以形成对应的字符串。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Conversion</span> </span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">     <span class=\"keyword\">boolean</span> b = <span class=\"keyword\">true</span>;</div><div class=\"line\">     String str = b + <span class=\"string\">\"\"</span>;</div><div class=\"line\">     System.out.print(str);<span class=\"comment\">//这里输出true</span></div><div class=\"line\">     &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"2-强制类型转化\"><a href=\"#2-强制类型转化\" class=\"headerlink\" title=\"2.强制类型转化\"></a>2.强制类型转化</h3><p>上面的自动类型只能把表数范围小的数值转化为大的，如果没有显性表示把大的转为小的，会发生编译错误。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Conversion</span> </span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">     <span class=\"keyword\">int</span> b = <span class=\"number\">233</span>;</div><div class=\"line\">     <span class=\"keyword\">byte</span> c = (<span class=\"keyword\">byte</span>)b;<span class=\"comment\">//强制把一个int转为byte类型</span></div><div class=\"line\">     System.out.println(c);<span class=\"comment\">//输出-23</span></div><div class=\"line\">      </div><div class=\"line\">     <span class=\"keyword\">float</span> a = <span class=\"number\">5.6</span>;<span class=\"comment\">//错误，因为5.6默认是double类型</span></div><div class=\"line\">     <span class=\"keyword\">float</span> a = (<span class=\"keyword\">float</span>)<span class=\"number\">5.6</span>;<span class=\"comment\">//正确，要进行强制转化</span></div><div class=\"line\">      </div><div class=\"line\">     <span class=\"keyword\">double</span> d = <span class=\"number\">3.98</span>;</div><div class=\"line\">     <span class=\"keyword\">int</span> e = (<span class=\"keyword\">int</span>)d;<span class=\"comment\">//强制把一个double转为int类型</span></div><div class=\"line\">     System.out.println(e);<span class=\"comment\">//输出3</span></div><div class=\"line\">     &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>像上面一样，要执行表数大的范围转为小的，需要显性声明，若强制转化后数值过大，会造成精度丢失。</p>\n<h3 id=\"3-字符串（String）转换为基本类型\"><a href=\"#3-字符串（String）转换为基本类型\" class=\"headerlink\" title=\"3.字符串（String）转换为基本类型\"></a>3.字符串（String）转换为基本类型</h3><ul>\n<li>通常情况下，字符串不能直接转换为基本类型，但通过基本类型对应的包装类可以实现。</li>\n<li>每个包装类都会有提供一个parseXxx（String str）静态方法来用于字符串转换为基本类型</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Sting a = <span class=\"string\">\"45\"</span>;</div><div class=\"line\"><span class=\"comment\">//使用Integer的方法将一个字符串转换为int类型</span></div><div class=\"line\"><span class=\"keyword\">int</span> iValue = Interger.parseInt(a);</div><div class=\"line\"><span class=\"comment\">//boolean比较特殊，仅在字符串为true的情况下为true，其他为false</span></div><div class=\"line\"><span class=\"keyword\">boolean</span> b = Boolean.valueOf(a);</div></pre></td></tr></table></figure>\n<h3 id=\"4-将基本类型转换为字符串（String）\"><a href=\"#4-将基本类型转换为字符串（String）\" class=\"headerlink\" title=\"4.将基本类型转换为字符串（String）\"></a>4.将基本类型转换为字符串（String）</h3><p>每个包装类都带有一个toString的方法，比如Double.toString(double d)等，可以转换为String字符串。</p>\n<h3 id=\"5-基本数据类型和包装类的转换\"><a href=\"#5-基本数据类型和包装类的转换\" class=\"headerlink\" title=\"5.基本数据类型和包装类的转换\"></a>5.基本数据类型和包装类的转换</h3><table>\n<thead>\n<tr>\n<th>基本数据类型</th>\n<th>包装类</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td>char</td>\n<td>Character</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>Byte</td>\n</tr>\n<tr>\n<td>short</td>\n<td>Short</td>\n</tr>\n<tr>\n<td>integer</td>\n<td>Integer</td>\n</tr>\n<tr>\n<td>long</td>\n<td>Long</td>\n</tr>\n<tr>\n<td>float</td>\n<td>Float</td>\n</tr>\n<tr>\n<td>double</td>\n<td>Double</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>下面示例两者之间的互相转换</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;</div><div class=\"line\">Integer iWrap = <span class=\"keyword\">new</span> Integer(i);<span class=\"comment\">//包装</span></div><div class=\"line\"><span class=\"keyword\">int</span> unWrap = iWrap.intValue();<span class=\"comment\">//解包装</span></div></pre></td></tr></table></figure>","categories":[],"tags":["Java,基础知识"]},{"title":"Oracle数据库服务总结","url":"https://blog.hyhcoder.top/2014/05/15/Oracle数据库服务总结/","content":"<h1 id=\"Oracle数据库服务总结\"><a href=\"#Oracle数据库服务总结\" class=\"headerlink\" title=\"Oracle数据库服务总结\"></a>Oracle数据库服务总结</h1><h2 id=\"Oracle的数据库服务默认有5个\"><a href=\"#Oracle的数据库服务默认有5个\" class=\"headerlink\" title=\"Oracle的数据库服务默认有5个\"></a>Oracle的数据库服务默认有5个</h2><p>看了几篇文章后,总结其作用如下:<br>1 .<strong>OracleServiceORCL:数据库服务</strong>，这个服务会自动的启动和停止数据库。ORCL是Oracle的实例标识。此服务被默认的设置为开机启动。</p>\n<ul>\n<li>必须启动，这是Oracle数据库的服务。</li>\n</ul>\n<p>2 .<strong>OracleOraDb11g_home1TNSListener.监听器服务</strong>，服务只有在数据库需要远程访问的时候才需要，此服务被默认的设置为开机启动。</p>\n<ul>\n<li>必须启动，这是临听，用于远程客户端连接你的Oracle;</li>\n</ul>\n<p>3 .<strong>OracleJobSchedulerORCL.Oracle作业调度服务</strong>，ORCL是Oracle实例标识。此服务被默认设置为禁用状态.</p>\n<ul>\n<li>通常不启动，用于定期操作任务的服务； </li>\n<li>数据库工作日程调度，一般没有安排工作日程就不需要启动，为什么默认是禁用？因为启动后会占用很大的系统资源。</li>\n</ul>\n<p>4 .<strong> OracleDBConsoleorcl.Oracle数据库控制台服务</strong>，orcl是Oracle的实例标识，默认的实例为orcl.在运行Enterprise Manager 的时候，需要启动这个服务。此服务被默认设置为自动开机启动的。</p>\n<ul>\n<li>可以不启动，用于管理Oracle的企业管理器的服务； </li>\n</ul>\n<p>5 .<strong>OracleOraDb10g_home1iSQL<em>Plus iSQL</em>Plus的服务进程</strong></p>\n<ul>\n<li>可以不启动，这是isqlplus服务，用于用网页执行sql执行，11g已经取消了这个功能；</li>\n</ul>\n<h2 id=\"用命令启动\"><a href=\"#用命令启动\" class=\"headerlink\" title=\"用命令启动\"></a>用命令启动</h2><ul>\n<li>启动listener:lsnrctl start  </li>\n<li>启动数据库：net start OracleServiceORCL</li>\n</ul>\n<h2 id=\"特别注意\"><a href=\"#特别注意\" class=\"headerlink\" title=\"特别注意\"></a>特别注意</h2><ol>\n<li><strong>在资源不够的情况下，要记得：</strong><br>只有这两项是必须启动的：OracleOraDb10g_home1TNSListener和OracleServiceORCL。（就是监听和数据库服务）</li>\n<li>对上面的服务也可以做一个批处理文件来启动和停止，批处理文件如下:</li>\n</ol>\n<ul>\n<li>建立dbstart.cmd文件（开启）</li>\n<li>添加如下内容：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@echo　off  </div><div class=\"line\">net　　start　　OracleServiceORACLE  </div><div class=\"line\">net　　start　　OracleDBConsoleoracle  </div><div class=\"line\">net　　start　　OracleOraDb10g_home1iSQL*Plus  </div><div class=\"line\">net　　start　　OracleOraDb10g_home1TNSListener  </div><div class=\"line\">pause</div></pre></td></tr></table></figure>\n<ul>\n<li>同样我们可以建立关闭文件（dbstop.cmd）</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@echo　off  </div><div class=\"line\">net　　stop　　OracleServiceORACLE  </div><div class=\"line\">net　　stop　　OracleDBConsoleoracle  </div><div class=\"line\">net　　stop　　OracleOraDb10g_home1iSQL*Plus  </div><div class=\"line\">net　　stop　　OracleOraDb10g_home1TNSListener  </div><div class=\"line\">pause</div></pre></td></tr></table></figure>\n","categories":[],"tags":["数据库,Oracle"]},{"title":"Oracle中删除重复记录整理","url":"https://blog.hyhcoder.top/2014/03/19/Oracle中删除重复记录整理/","content":"<h1 id=\"Oracle中删除重复记录整理\"><a href=\"#Oracle中删除重复记录整理\" class=\"headerlink\" title=\"Oracle中删除重复记录整理\"></a>Oracle中删除重复记录整理</h1><p>Oracle中经常会删除一些重复记录，整理一下以备用</p>\n<p>举例(建立数据如下):</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_table  </div><div class=\"line\">(<span class=\"keyword\">id</span> <span class=\"built_in\">NUMBER</span>,  </div><div class=\"line\"><span class=\"keyword\">name</span> VARCHAR2(<span class=\"number\">20</span>)  </div><div class=\"line\">);</div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_table <span class=\"keyword\">values</span> (<span class=\"number\">1234</span>, <span class=\"string\">'abc'</span>);  </div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_table <span class=\"keyword\">values</span> (<span class=\"number\">1234</span>, <span class=\"string\">'abc'</span>);  </div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_table <span class=\"keyword\">values</span> (<span class=\"number\">1234</span>, <span class=\"string\">'abc'</span>);  </div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_table <span class=\"keyword\">values</span> (<span class=\"number\">3456</span>, <span class=\"string\">'bcd'</span>);  </div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_table <span class=\"keyword\">values</span> (<span class=\"number\">3456</span>, <span class=\"string\">'bcd'</span>);  </div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_table <span class=\"keyword\">values</span> (<span class=\"number\">7890</span>, <span class=\"string\">'cde'</span>);</div></pre></td></tr></table></figure>\n<p>1 .<strong>第一种方法:</strong>适用于有少量重复记录的情况(临时表法)</p>\n<ul>\n<li>(建一个临时表用来存放重复的记录)</li>\n<li>(清空表的数据，但保留表的结构)</li>\n<li>(再将临时表里的内容反插回来)</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tmp_table <span class=\"keyword\">as</span> <span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span> * <span class=\"keyword\">from</span> t_table;  </div><div class=\"line\"><span class=\"keyword\">truncate</span> <span class=\"keyword\">table</span> t_table;  </div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_table <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> tmp_table;</div></pre></td></tr></table></figure>\n<p>2 .<strong>第二种方法:</strong>适用于有大量重复记录的情况</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">delete</span> t_table <span class=\"keyword\">where</span>   </div><div class=\"line\">(<span class=\"keyword\">id</span>,<span class=\"keyword\">name</span>) <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> <span class=\"keyword\">id</span>,<span class=\"keyword\">name</span>   </div><div class=\"line\"><span class=\"keyword\">from</span> t_table <span class=\"keyword\">group</span> <span class=\"keyword\">by</span>  <span class=\"keyword\">id</span>,<span class=\"keyword\">name</span> <span class=\"keyword\">having</span> <span class=\"keyword\">count</span>(*)&gt;<span class=\"number\">1</span>)   </div><div class=\"line\"><span class=\"keyword\">and</span>   </div><div class=\"line\"><span class=\"keyword\">rowid</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> <span class=\"keyword\">min</span>(<span class=\"keyword\">rowid</span>)   </div><div class=\"line\"><span class=\"keyword\">from</span> t_table <span class=\"keyword\">group</span> <span class=\"keyword\">by</span>  <span class=\"keyword\">id</span>,<span class=\"keyword\">name</span> <span class=\"keyword\">having</span> <span class=\"keyword\">count</span>(*)&gt;<span class=\"number\">1</span>);</div></pre></td></tr></table></figure>\n<p>3 .<strong>第三种方法:</strong>适用于有少量重复记录的情况</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> t_table a <span class=\"keyword\">where</span> a.rowid!=(<span class=\"keyword\">select</span> <span class=\"keyword\">max</span>(b.rowid)   </div><div class=\"line\"><span class=\"keyword\">from</span> t_table b <span class=\"keyword\">where</span> a.id=b.id <span class=\"keyword\">and</span> a.name=b.name);</div></pre></td></tr></table></figure>\n","categories":[],"tags":["数据库,Oracle"]},{"title":"","url":"https://blog.hyhcoder.top/404.html","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"�ص��ҵ���ҳ\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/personal-style.css","content":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/bg.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}","categories":[],"tags":[]},{"title":"category","url":"https://blog.hyhcoder.top/category/index.html","content":"","categories":[],"tags":[]},{"title":"关于","url":"https://blog.hyhcoder.top/about/index.html","content":"<blockquote class=\"blockquote-center\">人的一切痛苦,本质上都是对自己的无能的愤怒.<br>王小波</blockquote>","categories":[],"tags":[]},{"title":"link","url":"https://blog.hyhcoder.top/link/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"https://blog.hyhcoder.top/project/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"https://blog.hyhcoder.top/search/index.html","content":"","categories":[],"tags":[]},{"title":"标签","url":"https://blog.hyhcoder.top/tags/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/mylove.html","content":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<!-- saved from url=(0027)http://itzoo.info/love.html -->\n<html xml:lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n        <title>Love</title>\n        \n        <link type=\"text/css\" rel=\"stylesheet\" href=\"./css/mylove/default.css\">\n        <script type=\"text/javascript\" src=\"./css/mylove/jquery.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./css/mylove/jscex.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./css/mylove/jscex-parser.js\"></script>\n        <script type=\"text/javascript\" src=\"./css/mylove/jscex-jit.js\"></script>\n        <script type=\"text/javascript\" src=\"./css/mylove/jscex-builderbase.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./css/mylove/jscex-async.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./css/mylove/jscex-async-powerpack.min.js\"></script>\n        <script type=\"text/javascript\" src=\"./css/mylove/functions.js\" charset=\"utf-8\"></script>\n        <script type=\"text/javascript\" src=\"./css/mylove/love.js\" charset=\"utf-8\"></script>\n\n    </head>\n    <body>\n        <div id=\"main\">\n            <div id=\"error\">亲，您使用的浏览器无法支持即将显示的内容，请换成谷歌(<a href=\"http://www.google.cn/chrome/intl/zh-CN/landing_chrome.html?hl=zh-CN&brand=CHMI\" target=\"_blank\" rel=\"external\">Chrome</a>)或者火狐(<a href=\"http://firefox.com.cn/download/\" target=\"_blank\" rel=\"external\">Firefox</a>)浏览器哟~</div>\n            <div id=\"wrap\">\n               <div id=\"text\">\n                    <div id=\"code\">                 \n                    <span class=\"say\">我的爱人，我会牵着你的手，走到满头白发的那一天，</span><br>\n                    <span class=\"say\">我会守护你生命里的精彩，并陪伴你一路精彩下去。</span><br>\n                    <span class=\"say\">你的幸福快乐，是我一生的追求。</span><br>\n                    <span class=\"say\">我会每一天带着笑脸，和你说早安，</span><br>\n                     <span class=\"say\">我会每一晚与你道声晚安再入梦乡，</span><br>\n                    <span class=\"say\">我会带你去所有你想去的地方，</span><br>\n                    <span class=\"say\">陪你闹看你笑</span><br>\n                    <span class=\"say\">历经你生命中所有的点点滴滴。</span><br>\n                    <span class=\"say\">我期待这一生与你一起走过，</span><br>\n                    <span class=\"say\">我期待与你慢慢变老</span><br>\n                    <span class=\"say\">等我们老到哪儿也去不了，</span><br>\n                    <span class=\"say\">还能满载着一生的幸福快乐 ！</span><br>\n                    <br>\n                    <span class=\"say\">我会为我们的未来撑起一片天空，</span><br>\n                     <span class=\"say\">为我们的将来担负起一生的责任，</span><br>\n                      <span class=\"say\">愿意为你去做每一件能让你开心快乐的事。</span><br>\n                       <span class=\"say\">所有我们经历的点点滴滴，</span><br>\n                        <span class=\"say\">都是我们一辈子最美的回忆。</span><br>\n                         <span class=\"say\">我愿意爱你直到老去！</span><br>\n                   <br>\n                    <span class=\"say\"><span class=\"space\"></span> -- Yours, Chris.</span>\n                    </div>\n                </div>\n                <div id=\"clock-box\">\n                    <a href=\"https://www.hyhcoder.com/mylove.html\" target=\"_blank\">@Chris</a> 与 <a href=\"https://www.hyhcoder.com/mylove.html\" target=\"_blank\">@余海霞</a> 在一起的\n                        <div id=\"clock\"></div>\n                </div>\n                <canvas id=\"canvas\" width=\"1100\" height=\"680\"></canvas>\n            </div>\n            <audio src=\"love.mp3\" autoplay=\"autoplay\"></audio>\n        </div>\n    \n    <script>\n    </script>\n\n    <script>\n    (function(){\n        var canvas = $('#canvas');\n\n        if (!canvas[0].getContext) {\n            $(\"#error\").show();\n            return false;\n        }\n\n        var width = canvas.width();\n        var height = canvas.height();\n        \n        canvas.attr(\"width\", width);\n        canvas.attr(\"height\", height);\n\n        var opts = {\n            seed: {\n                x: width / 2 - 20,\n                color: \"rgb(190, 26, 37)\",\n                scale: 2\n            },\n            branch: [\n                [535, 680, 570, 250, 500, 200, 30, 100, [\n                    [540, 500, 455, 417, 340, 400, 13, 100, [\n                        [450, 435, 434, 430, 394, 395, 2, 40]\n                    ]],\n                    [550, 445, 600, 356, 680, 345, 12, 100, [\n                        [578, 400, 648, 409, 661, 426, 3, 80]\n                    ]],\n                    [539, 281, 537, 248, 534, 217, 3, 40],\n                    [546, 397, 413, 247, 328, 244, 9, 80, [\n                        [427, 286, 383, 253, 371, 205, 2, 40],\n                        [498, 345, 435, 315, 395, 330, 4, 60]\n                    ]],\n                    [546, 357, 608, 252, 678, 221, 6, 100, [\n                        [590, 293, 646, 277, 648, 271, 2, 80]\n                    ]]\n                ]] \n            ],\n            bloom: {\n                num: 700,\n                width: 1080,\n                height: 650,\n            },\n            footer: {\n                width: 1200,\n                height: 5,\n                speed: 10,\n            }\n        }\n\n        var tree = new Tree(canvas[0], width, height, opts);\n        var seed = tree.seed;\n        var foot = tree.footer;\n        var hold = 1;\n\n        canvas.click(function(e) {\n            var offset = canvas.offset(), x, y;\n            x = e.pageX - offset.left;\n            y = e.pageY - offset.top;\n            if (seed.hover(x, y)) {\n                hold = 0; \n                canvas.unbind(\"click\");\n                canvas.unbind(\"mousemove\");\n                canvas.removeClass('hand');\n            }\n        }).mousemove(function(e){\n            var offset = canvas.offset(), x, y;\n            x = e.pageX - offset.left;\n            y = e.pageY - offset.top;\n            canvas.toggleClass('hand', seed.hover(x, y));\n        });\n\n        var seedAnimate = eval(Jscex.compile(\"async\", function () {\n            seed.draw();\n            while (hold) {\n                $await(Jscex.Async.sleep(10));\n            }\n            while (seed.canScale()) {\n                seed.scale(0.95);\n                $await(Jscex.Async.sleep(10));\n            }\n            while (seed.canMove()) {\n                seed.move(0, 2);\n                foot.draw();\n                $await(Jscex.Async.sleep(10));\n            }\n        }));\n\n        var growAnimate = eval(Jscex.compile(\"async\", function () {\n            do {\n                tree.grow();\n                $await(Jscex.Async.sleep(10));\n            } while (tree.canGrow());\n        }));\n\n        var flowAnimate = eval(Jscex.compile(\"async\", function () {\n            do {\n                tree.flower(2);\n                $await(Jscex.Async.sleep(10));\n            } while (tree.canFlower());\n        }));\n\n        var moveAnimate = eval(Jscex.compile(\"async\", function () {\n            tree.snapshot(\"p1\", 240, 0, 610, 680);\n            while (tree.move(\"p1\", 500, 0)) {\n                foot.draw();\n                $await(Jscex.Async.sleep(10));\n            }\n            foot.draw();\n            tree.snapshot(\"p2\", 500, 0, 610, 680);\n\n            // 会有闪烁不得意这样做, (＞﹏＜)\n            canvas.parent().css(\"background\", \"url(\" + tree.toDataURL('image/png') + \")\");\n            canvas.css(\"background\", \"#ffe\");\n            $await(Jscex.Async.sleep(300));\n            canvas.css(\"background\", \"none\");\n        }));\n\n        var jumpAnimate = eval(Jscex.compile(\"async\", function () {\n            var ctx = tree.ctx;\n            while (true) {\n                tree.ctx.clearRect(0, 0, width, height);\n                tree.jump();\n                foot.draw();\n                $await(Jscex.Async.sleep(25));\n            }\n        }));\n\n        var textAnimate = eval(Jscex.compile(\"async\", function () {\n            var together = new Date();\n            together.setFullYear(2010, 5, 8);\n            together.setHours(20);\n            together.setMinutes(20);\n            together.setSeconds(0);\n            together.setMilliseconds(0);\n\n            $(\"#code\").show().typewriter();\n            $(\"#clock-box\").fadeIn(500);\n            while (true) {\n                timeElapse(together);\n                $await(Jscex.Async.sleep(1000));\n            }\n        }));\n\n        var runAsync = eval(Jscex.compile(\"async\", function () {\n            $await(seedAnimate());\n            $await(growAnimate());\n            $await(flowAnimate());\n            $await(moveAnimate());\n\n            textAnimate().start();\n\n            $await(jumpAnimate());\n        }));\n\n        runAsync().start();\n    })();\n    </script>\n\n\n\n</body></html>","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/functions.js","content":"/*\n * http://love.hackerzhou.me\n */\n\n// variables\nvar $win = $(window);\nvar clientWidth = $win.width();\nvar clientHeight = $win.height();\n\n$(window).resize(function() {\n    var newWidth = $win.width();\n    var newHeight = $win.height();\n    if (newWidth != clientWidth && newHeight != clientHeight) {\n        location.replace(location);\n    }\n});\n\n(function($) {\n\t$.fn.typewriter = function() {\n\t\tthis.each(function() {\n\t\t\tvar $ele = $(this), str = $ele.html(), progress = 0;\n\t\t\t$ele.html('');\n\t\t\tvar timer = setInterval(function() {\n\t\t\t\tvar current = str.substr(progress, 1);\n\t\t\t\tif (current == '<') {=\"\" progress=\"str.indexOf('\">', progress) + 1;\n\t\t\t\t} else {\n\t\t\t\t\tprogress++;\n\t\t\t\t}\n\t\t\t\t$ele.html(str.substring(0, progress) + (progress & 1 ? '_' : ''));\n\t\t\t\tif (progress >= str.length) {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t}\n\t\t\t}, 75);\n\t\t});\n\t\treturn this;\n\t};\n})(jQuery);\n\nfunction timeElapse(date){\n\tvar current = Date();\n\tvar seconds = (Date.parse(current) - Date.parse(date)) / 1000;\n\tvar days = Math.floor(seconds / (3600 * 24));\n\tseconds = seconds % (3600 * 24);\n\tvar hours = Math.floor(seconds / 3600);\n\tif (hours < 10) {\n\t\thours = \"0\" + hours;\n\t}\n\tseconds = seconds % 3600;\n\tvar minutes = Math.floor(seconds / 60);\n\tif (minutes < 10) {\n\t\tminutes = \"0\" + minutes;\n\t}\n\tseconds = seconds % 60;\n\tif (seconds < 10) {\n\t\tseconds = \"0\" + seconds;\n\t}\n\tvar result = \"第 <span class=\"\\\"digit\\\"\">\" + days + \"</span> 天 <span class=\"\\\"digit\\\"\">\" + hours + \"</span> 小时 <span class=\"\\\"digit\\\"\">\" + minutes + \"</span> 分钟 <span class=\"\\\"digit\\\"\">\" + seconds + \"</span> 秒\"; \n\t$(\"#clock\").html(result);\n}\n</')>","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/jscex-async-powerpack.min.js","content":"(function(){var m=function(j){if(j.length","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/jscex-builderbase.min.js","content":"(function(){var j=function(){};j.prototype={Loop:function(b,c,a,d){return{next:function(e,i){var f=function(b){a.next(e,function(a,e){if(a==\"normal\"||a==\"continue\")g(b);else if(a==\"throw\"||a==\"return\")i(a,e);else if(a==\"break\")i(\"normal\");else throw Error('Invalid type for \"Loop\": '+a);})},g=function(a){try{c&&!a&&c.call(e),!b||b.call(e)?f(!1):i(\"normal\")}catch(d){i(\"throw\",d)}};d?f(!0):g(!0)}}},Delay:function(b){return{next:function(c,a){try{b.call(c).next(c,a)}catch(d){a(\"throw\",d)}}}},Combine:function(b,\nc){return{next:function(a,d){b.next(a,function(b,i,f){if(b==\"normal\")try{c.next(a,d)}catch(g){d(\"throw\",g)}else d(b,i,f)})}}},Return:function(b){return{next:function(c,a){a(\"return\",b)}}},Normal:function(){return{next:function(b,c){c(\"normal\")}}},Break:function(){return{next:function(b,c){c(\"break\")}}},Continue:function(){return{next:function(b,c){c(\"continue\")}}},Throw:function(b){return{next:function(c,a){a(\"throw\",b)}}},Try:function(b,c,a){return{next:function(d,e){b.next(d,function(b,f,g){if(b!=\n\"throw\"||!c)a?a.next(d,function(a,c,d){a==\"normal\"?e(b,f,g):e(a,c,d)}):e(b,f,g);else if(c){var h;try{h=c.call(d,f)}catch(j){a?a.next(d,function(a,b,c){a==\"normal\"?e(\"throw\",j):e(a,b,c)}):e(\"throw\",j)}h&&h.next(d,function(b,c,f){b==\"throw\"?a?a.next(d,function(a,d,g){a==\"normal\"?e(b,c,f):e(a,d,g)}):e(b,c,f):a?a.next(d,function(a,d,g){a==\"normal\"?e(b,c,f):e(a,d,g)}):e(b,c,f)})}else a.next(d,function(a,c,d){a==\"normal\"?e(b,f,g):e(a,c,d)})})}}}};var h=function(b){if(!b.modules)b.modules={};if(!b.modules.builderbase)b.modules.builderbase=\n!0,b.BuilderBase=j},k=typeof define===\"function\"&&!define.amd,l=typeof require===\"function\"&&typeof define===\"function\"&&define.amd;if(typeof require===\"function\"&&typeof module!==\"undefined\"&&module.exports)module.exports.init=h;else if(k)define(\"jscex-builderbase\",function(b,c,a){a.exports.init=h});else if(l)define(\"jscex-builderbase\",function(){return{init:h}});else{if(typeof Jscex===\"undefined\")throw Error('Missing the root object, please load \"jscex\" module first.');h(Jscex)}})();\n","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/jscex-async.min.js","content":"(function(){var k=function(){};k.prototype={isCancellation:!0,message:\"The task has been cancelled.\"};typeof __jscex__async__taskIdSeed===\"undefined\"&&(__jscex__async__taskIdSeed=0);var l=function(b){return typeof b.start===\"function\"&&typeof b.addEventListener===\"function\"&&typeof b.removeEventListener===\"function\"&&typeof b.complete===\"function\"},j=function(b){if(!b.modules.async){var d=function(){};d.prototype={register:function(a){this.isCancellationRequested&&a();if(!this._handlers)this._handlers=\n[];this._handlers.push(a)},unregister:function(a){this._handlers&&(a=this._handlers.indexOf(a),a>=0&&this._handlers.splice(a,1))},cancel:function(){if(!this.isCancellationRequested){this.isCancellationRequested=!0;var a=this._handlers;delete this._handlers;for(var f=0;f<a.length;f++)try{a[f]()}catch(c){b.logger.warn(\"[warning] cancellation=\"\" handler=\"\" threw=\"\" an=\"\" error:=\"\" \"+c)}}},throwifcancellationrequested:function(){if(this.iscancellationrequested)throw=\"\" new=\"\" k;}};var=\"\" e=\"function(a){this.id=++__jscex__async__taskIdSeed;\" this._delegate=\"a;this._listeners={};this.status=\"ready\"};e.prototype={start:function(){if(this.status!=\"ready\")throw\" error('task=\"\" can=\"\" only=\"\" be=\"\" started=\"\" in=\"\" \"ready\"=\"\" status.');this.status=\"running\" ;this._delegate(this)},complete:function(a,f){if(this.status!=\"running\" )throw=\"\" error('the=\"\" \"complete\"=\"\" method=\"\" called=\"\" \"running\"=\"\" status.');var=\"\" c=\"this._listeners;delete\" this._listeners;if(a=\"=\"success\")this.result=f,this.status=\"succeeded\",this._notify(\"success\",c.success);else\" if(a=\"=\"failure\")this.error=\" f,this.status=\"f.isCancellation?\"canceled\":\"faulted\",this._notify(\"failure\",c.failure);else\" throw=\"\" error(\"unsupported=\"\" type:=\"\" \"+a);this._notify(\"complete\",c.complete);this.error&&!c.failure&&!c.complete&&b.logger.warn(\"[warning]=\"\" unhandled=\"\" error=\"\" occurred:=\"\" \"+this.error)},_notify:function(a,f){if(f)for(var=\"\" the=\"\" task's=\"\" \"+a+\"=\"\" listener=\"\" \"+i)}},addeventlistener:function(a,b){this._listeners&&(this._listeners[a]||(this._listeners[a]=\"[]),this._listeners[a].push(b))},removeEventListener:function(a,b){if(this._listeners){var\" i=\"c.indexOf(b);i\">=0&&c.splice(i,1)}}}};e.create=function(a){return new e(a)};e.isTask=l;var h=function(){};h.prototype={Start:function(a,b){return e.create(function(c){b.next(a,function(a,b){if(a==\"normal\"||a==\"return\")c.complete(\"success\",b);else if(a==\"throw\")c.complete(\"failure\",b);else throw Error(\"Unsupported type: \"+a);})})},Bind:function(a,b){return{next:function(c,e){var d=\nfunction(a){if(a.error)e(\"throw\",a.error);else{var d;try{d=b.call(c,a.result)}catch(h){e(\"throw\",h);return}d.next(c,e)}};a.status==\"ready\"?(a.addEventListener(\"complete\",d),a.start()):a.status==\"running\"?a.addEventListener(\"complete\",d):d(a)}}}};for(var g in b.BuilderBase.prototype)h.prototype[g]=b.BuilderBase.prototype[g];if(!b.Async)b.Async={};g=b.Async;g.CancellationToken=d;g.CanceledError=k;g.Task=e;g.AsyncBuilder=h;if(!b.builders)b.builders={};b.binders.async=\"$await\";b.builders.async=new h;\nb.modules.async=!0}},m=typeof define===\"function\"&&!define.amd,n=typeof require===\"function\"&&typeof define===\"function\"&&define.amd;if(typeof require===\"function\"&&typeof module!==\"undefined\"&&module.exports)module.exports.init=function(b){if(!b.modules.builderbase){if(typeof __dirname===\"string\")try{require.paths.unshift(__dirname)}catch(d){try{module.paths.unshift(__dirname)}catch(e){}}require(\"jscex-builderbase\").init(b)}j(b)};else if(m)define(\"jscex-async\",[\"jscex-builderbase\"],function(b,d,\ne){e.exports.init=function(d){d.modules.builderbase||b(\"jscex-builderbase\").init(d);j(d)}});else if(n)define(\"jscex-async\",[\"jscex-builderbase\"],function(b){return{init:function(d){d.modules.builderbase||b.init(d);j(d)}}});else{if(typeof Jscex===\"undefined\")throw Error('Missing the root object, please load \"jscex\" module first.');if(!Jscex.modules.builderbase)throw Error('Missing essential components, please initialize \"builderbase\" module first.');j(Jscex)}})();\n</a.length;f++)try{a[f]()}catch(c){b.logger.warn(\"[warning]>","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/jscex.min.js","content":"(function(){var b={DEBUG:1,INFO:2,WARN:3,ERROR:4},d=function(){this.level=b.WARN};d.prototype={log:function(a){try{console.log(a)}catch(b){}},debug:function(a){this.level","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/jscex-jit.js","content":"(function () {\n    \n    var codeGenerator = (typeof eval(\"(function () {})\") == \"function\") ?\n        function (code) { return code; } :\n        function (code) { return \"false || \" + code; };\n        \n    // support string type only.\n    var stringify = (typeof JSON !== \"undefined\" && JSON.stringify) ?\n        function (s) { return JSON.stringify(s); } :\n        (function () {\n            // Implementation comes from JSON2 (http://www.json.org/js.html)\n        \n            var escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n            \n            var meta = {    // table of character substitutions\n                '\\b': '\\\\b',\n                '\\t': '\\\\t',\n                '\\n': '\\\\n',\n                '\\f': '\\\\f',\n                '\\r': '\\\\r',\n                '\"' : '\\\\\"',\n                '\\\\': '\\\\\\\\'\n            }\n            \n            return function (s) {\n                // If the string contains no control characters, no quote characters, and no\n                // backslash characters, then we can safely slap some quotes around it.\n                // Otherwise we must also replace the offending characters with safe escape\n                // sequences.\n\n                escapable.lastIndex = 0;\n                return escapable.test(s) ? '\"' + s.replace(escapable, function (a) {\n                    var c = meta[a];\n                    return typeof c === 's' ? c :\n                        '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n                }) + '\"' : '\"' + s + '\"';\n            };\n        })();\n    \n    // seed defined in global\n    if (typeof __jscex__tempVarSeed === \"undefined\") {\n        __jscex__tempVarSeed = 0;\n    }\n\n    var init = function (root) {\n    \n        if (root.modules[\"jit\"]) {\n            return;\n        }\n    \n        function JscexTreeGenerator(binder) {\n            this._binder = binder;\n            this._root = null;\n        }\n        JscexTreeGenerator.prototype = {\n\n            generate: function (ast) {\n\n                var params = ast[2], statements = ast[3];\n\n                this._root = { type: \"delay\", stmts: [] };\n\n                this._visitStatements(statements, this._root.stmts);\n\n                return this._root;\n            },\n\n            _getBindInfo: function (stmt) {\n\n                var type = stmt[0];\n                if (type == \"stat\") {\n                    var expr = stmt[1];\n                    if (expr[0] == \"call\") {\n                        var callee = expr[1];\n                        if (callee[0] == \"name\" && callee[1] == this._binder && expr[2].length == 1) {\n                            return {\n                                expression: expr[2][0],\n                                argName: \"\",\n                                assignee: null\n                            };\n                        }\n                    } else if (expr[0] == \"assign\") {\n                        var assignee = expr[2];\n                        expr = expr[3];\n                        if (expr[0] == \"call\") {\n                            var callee = expr[1];\n                            if (callee[0] == \"name\" && callee[1] == this._binder && expr[2].length == 1) {\n                                return {\n                                    expression: expr[2][0],\n                                    argName: \"$$_result_$$\",\n                                    assignee: assignee\n                                };\n                            }\n                        }\n                    }\n                } else if (type == \"var\") {\n                    var defs = stmt[1];\n                    if (defs.length == 1) {\n                        var item = defs[0];\n                        var name = item[0];\n                        var expr = item[1];\n                        if (expr && expr[0] == \"call\") {\n                            var callee = expr[1];\n                            if (callee[0] == \"name\" && callee[1] == this._binder && expr[2].length == 1) {\n                                return {\n                                    expression: expr[2][0],\n                                    argName: name,\n                                    assignee: null\n                                };                            \n                            }\n                        }\n                    }\n                } else if (type == \"return\") {\n                    var expr = stmt[1];\n                    if (expr && expr[0] == \"call\") {\n                        var callee = expr[1];\n                        if (callee[0] == \"name\" && callee[1] == this._binder && expr[2].length == 1) {\n                            return {\n                                expression: expr[2][0],\n                                argName: \"$$_result_$$\",\n                                assignee: \"return\"\n                            };\n                        }\n                    }\n                }\n\n                return null;\n            },\n\n            _visitStatements: function (statements, stmts, index) {\n                if (arguments.length <= 2)=\"\" index=\"0;\" if=\"\" (index=\"\">= statements.length) {\n                    stmts.push({ type: \"normal\" });\n                    return this;\n                }\n\n                var currStmt = statements[index];\n                var bindInfo = this._getBindInfo(currStmt);\n\n                if (bindInfo) {\n                    var bindStmt = { type: \"bind\", info: bindInfo };\n                    stmts.push(bindStmt);\n\n                    if (bindInfo.assignee != \"return\") {\n                        bindStmt.stmts = [];\n                        this._visitStatements(statements, bindStmt.stmts, index + 1);\n                    }\n\n                } else {\n                    var type = currStmt[0];\n                    if (type == \"return\" || type == \"break\" || type == \"continue\" || type == \"throw\") {\n\n                        stmts.push({ type: type, stmt: currStmt });\n\n                    } else if (type == \"if\" || type == \"try\" || type == \"for\" || type == \"do\"\n                               || type == \"while\" || type == \"switch\" || type == \"for-in\") {\n\n                        var newStmt = this._visit(currStmt);\n\n                        if (newStmt.type == \"raw\") {\n                            stmts.push(newStmt);\n                            this._visitStatements(statements, stmts, index + 1);\n                        } else {\n                            var isLast = (index == statements.length - 1);\n                            if (isLast) {\n                                stmts.push(newStmt);\n                            } else {\n\n                                var combineStmt = {\n                                    type: \"combine\",\n                                    first: { type: \"delay\", stmts: [newStmt] },\n                                    second: { type: \"delay\", stmts: [] }\n                                };\n                                stmts.push(combineStmt);\n\n                                this._visitStatements(statements, combineStmt.second.stmts, index + 1);\n                            }\n                        }\n\n                    } else {\n\n                        stmts.push({ type: \"raw\", stmt: currStmt });\n\n                        this._visitStatements(statements, stmts, index + 1);\n                    }\n                }\n\n                return this;\n            },\n\n            _visit: function (ast) {\n\n                var type = ast[0];\n\n                function throwUnsupportedError() {\n                    throw new Error('\"' + type + '\" is not currently supported.');\n                }\n\n                var visitor = this._visitors[type];\n\n                if (visitor) {\n                    return visitor.call(this, ast);\n                } else {\n                    throwUnsupportedError();\n                }\n            },\n\n            _visitBody: function (ast, stmts) {\n                if (ast[0] == \"block\") {\n                    this._visitStatements(ast[1], stmts);\n                } else {\n                    this._visitStatements([ast], stmts);\n                }\n            },\n\n            _noBinding: function (stmts) {\n                switch (stmts[stmts.length - 1].type) {\n                    case \"normal\":\n                    case \"return\":\n                    case \"break\":\n                    case \"throw\":\n                    case \"continue\":\n                        return true;\n                }\n\n                return false;\n            },\n\n            _collectCaseStatements: function (cases, index) {\n                var res = [];\n\n                for (var i = index; i < cases.length; i++) {\n                    var rawStmts = cases[i][1];\n                    for (var j = 0; j < rawStmts.length; j++) {\n                        if (rawStmts[j][0] == \"break\") {\n                            return res\n                        }\n\n                        res.push(rawStmts[j]);\n                    }\n                }\n\n                return res;\n            },\n\n            _visitors: {\n\n                \"for\": function (ast) {\n\n                    var bodyStmts = [];\n                    var body = ast[4];\n                    this._visitBody(body, bodyStmts);\n\n                    if (this._noBinding(bodyStmts)) {\n                        return { type: \"raw\", stmt: ast };\n                    }\n\n                    var delayStmt = { type: \"delay\", stmts: [] };\n            \n                    var setup = ast[1];\n                    if (setup) {\n                        delayStmt.stmts.push({ type: \"raw\", stmt: setup });\n                    }\n\n                    var loopStmt = { type: \"loop\", bodyFirst: false, bodyStmt: { type: \"delay\", stmts: bodyStmts } };\n                    delayStmt.stmts.push(loopStmt);\n                    \n                    var condition = ast[2];\n                    if (condition) {\n                        loopStmt.condition = condition;\n                    }\n                    \n                    var update = ast[3];\n                    if (update) {\n                        loopStmt.update = update;\n                    }\n\n                    return delayStmt;\n                },\n\n                \"for-in\": function (ast) {\n\n                    var body = ast[4];\n                    \n                    var bodyStmts = [];\n                    this._visitBody(body, bodyStmts);\n\n                    if (this._noBinding(bodyStmts)) {\n                        return { type: \"raw\", stmt: ast };\n                    }\n                \n                    var id = (__jscex__tempVarSeed++);\n                    var keysVar = \"$$_keys_$$_\" + id;\n                    var indexVar = \"$$_index_$$_\" + id;\n                    // var memVar = \"$$_mem_$$_\" + id;\n\n                    var delayStmt = { type: \"delay\", stmts: [] };\n\n                    // var members = Jscex._forInKeys(obj);\n                    var keysAst = root.parse(\"var \" + keysVar + \" = Jscex._forInKeys(obj);\")[1][0];\n                    keysAst[1][0][1][2][0] = ast[3]; // replace obj with real AST;\n                    delayStmt.stmts.push({ type: \"raw\", stmt: keysAst });\n\n                    /*\n                    // var members = [];\n                    delayStmt.stmts.push({\n                        type: \"raw\",\n                        stmt: uglifyJS.parse(\"var \" + membersVar + \" = [];\")[1][0]\n                    });\n                    \n                    // for (var mem in obj) members.push(mem);\n                    var keysAst = uglifyJS.parse(\"for (var \" + memVar +\" in obj) \" + membersVar + \".push(\" + memVar + \");\")[1][0];\n                    keysAst[3] = ast[3]; // replace the \"obj\" with real AST.\n                    delayStmt.stmts.push({ type : \"raw\", stmt: keysAst});\n                    */\n                    \n                    // var index = 0;\n                    delayStmt.stmts.push({\n                        type: \"raw\",\n                        stmt: root.parse(\"var \" + indexVar + \" = 0;\")[1][0]\n                    });\n\n                    // index < members.length\n                    var condition = root.parse(indexVar + \" < \" + keysVar + \".length\")[1][0][1];\n\n                    // index++\n                    var update = root.parse(indexVar + \"++\")[1][0][1];\n\n                    var loopStmt = {\n                        type: \"loop\",\n                        bodyFirst: false,\n                        update: update,\n                        condition: condition,\n                        bodyStmt: { type: \"delay\", stmts: [] }\n                    };\n                    delayStmt.stmts.push(loopStmt);\n\n                    var varName = ast[2][1]; // ast[2] == [\"name\", m]\n                    if (ast[1][0] == \"var\") {\n                        loopStmt.bodyStmt.stmts.push({\n                            type: \"raw\",\n                            stmt: root.parse(\"var \" + varName + \" = \" + keysVar + \"[\" + indexVar + \"];\")[1][0]\n                        });\n                    } else {\n                        loopStmt.bodyStmt.stmts.push({\n                            type: \"raw\",\n                            stmt: root.parse(varName + \" = \" + keysVar + \"[\" + indexVar + \"];\")[1][0]\n                        });\n                    }\n\n                    this._visitBody(body, loopStmt.bodyStmt.stmts);\n\n                    return delayStmt;\n                },\n\n                \"while\": function (ast) {\n\n                    var bodyStmts = [];\n                    var body = ast[2];\n                    this._visitBody(body, bodyStmts);\n\n                    if (this._noBinding(bodyStmts)) {\n                        return { type: \"raw\", stmt: ast }\n                    }\n\n                    var loopStmt = { type: \"loop\", bodyFirst: false, bodyStmt: { type: \"delay\", stmts: bodyStmts } };\n\n                    var condition = ast[1];\n                    loopStmt.condition = condition;\n\n                    return loopStmt;\n                },\n\n                \"do\": function (ast) {\n\n                    var bodyStmts = [];\n                    var body = ast[2];\n                    this._visitBody(body, bodyStmts);\n\n                    if (this._noBinding(bodyStmts)) {\n                        return { type: \"raw\", stmt: ast };\n                    }\n\n                    var loopStmt = { type: \"loop\", bodyFirst: true, bodyStmt: { type: \"delay\", stmts: bodyStmts } };\n\n                    var condition = ast[1];\n                    loopStmt.condition = condition;\n\n                    return loopStmt;\n                },\n\n                \"switch\": function (ast) {\n                    var noBinding = true;\n\n                    var switchStmt = { type: \"switch\", item: ast[1], caseStmts: [] };\n\n                    var cases = ast[2];\n                    for (var i = 0; i < cases.length; i++) {                    \n                        var caseStmt = { item: cases[i][0], stmts: [] };\n                        switchStmt.caseStmts.push(caseStmt);\n\n                        var statements = this._collectCaseStatements(cases, i);\n                        this._visitStatements(statements, caseStmt.stmts);\n                        noBinding = noBinding && this._noBinding(caseStmt.stmts);\n                    }\n\n                    if (noBinding) {\n                        return { type: \"raw\", stmt: ast };\n                    } else {\n                        return switchStmt;\n                    }\n                },\n\n                \"if\": function (ast) {\n\n                    var noBinding = true;\n\n                    var ifStmt = { type: \"if\", conditionStmts: [] };\n\n                    var currAst = ast;\n                    while (true) {\n                        var condition = currAst[1];\n                        var condStmt = { cond: condition, stmts: [] };\n                        ifStmt.conditionStmts.push(condStmt);\n\n                        var thenPart = currAst[2];\n                        this._visitBody(thenPart, condStmt.stmts);\n\n                        noBinding = noBinding && this._noBinding(condStmt.stmts);\n\n                        var elsePart = currAst[3];\n                        if (elsePart && elsePart[0] == \"if\") {\n                            currAst = elsePart;\n                        } else {\n                            break;\n                        }\n                    }\n        \n                    var elsePart = currAst[3];\n                    if (elsePart) {\n                        ifStmt.elseStmts = [];\n\n                        this._visitBody(elsePart, ifStmt.elseStmts);\n                        \n                        noBinding = noBinding && this._noBinding(ifStmt.elseStmts);\n                    }\n\n                    if (noBinding) {\n                        return { type: \"raw\", stmt: ast };\n                    } else {\n                        return ifStmt;\n                    }\n                },\n\n                \"try\": function (ast, stmts) {\n\n                    var bodyStmts = [];\n                    var bodyStatements = ast[1];\n                    this._visitStatements(bodyStatements, bodyStmts);\n\n                    var noBinding = this._noBinding(bodyStmts)\n\n                    var tryStmt = { type: \"try\", bodyStmt: { type: \"delay\", stmts: bodyStmts } };\n                    \n                    var catchClause = ast[2];\n                    if (catchClause) {\n                        var exVar = catchClause[0];\n                        tryStmt.exVar = exVar;\n                        tryStmt.catchStmts = [];\n\n                        this._visitStatements(catchClause[1], tryStmt.catchStmts);\n\n                        noBinding = noBinding && this._noBinding(tryStmt.catchStmts);\n                    }\n\n                    var finallyStatements = ast[3];\n                    if (finallyStatements) {\n                        tryStmt.finallyStmt = { type: \"delay\", stmts: [] };\n\n                        this._visitStatements(finallyStatements, tryStmt.finallyStmt.stmts);\n\n                        noBinding = noBinding && this._noBinding(tryStmt.finallyStmt.stmts);\n                    }\n\n                    if (noBinding) {\n                        return { type: \"raw\", stmt: ast };\n                    } else {\n                        return tryStmt;\n                    }\n                }\n            }\n        }\n\n        function CodeGenerator(builderName, binder, indent) {\n            this._builderName = builderName;\n            this._binder = binder;\n            this._normalMode = false;\n            this._indent = indent;\n            this._indentLevel = 0;\n            this._builderVar = \"$$_builder_$$_\" + (__jscex__tempVarSeed++);\n        }\n        CodeGenerator.prototype = {\n            _write: function (s) {\n                this._buffer.push(s);\n                return this;\n            },\n\n            _writeLine: function (s) {\n                this._write(s)._write(\"\\n\");\n                return this;\n            },\n\n            _writeIndents: function () {\n                for (var i = 0; i < this._indent; i++) {\n                    this._write(\" \");\n                }\n\n                for (var i = 0; i < this._indentLevel; i++) {\n                    this._write(\"    \");\n                }\n                return this;\n            },\n\n            generate: function (params, jscexAst) {\n                this._buffer = [];\n\n                this._writeLine(\"(function (\" + params.join(\", \") + \") {\");\n                this._indentLevel++;\n\n                this._writeIndents()\n                    ._writeLine(\"var \" + this._builderVar + \" = Jscex.builders[\" + stringify(this._builderName) + \"];\");\n\n                this._writeIndents()\n                    ._writeLine(\"return \" + this._builderVar + \".Start(this,\");\n                this._indentLevel++;\n\n                this._pos = { };\n\n                this._writeIndents()\n                    ._visitJscex(jscexAst)\n                    ._writeLine();\n                this._indentLevel--;\n\n                this._writeIndents()\n                    ._writeLine(\");\");\n                this._indentLevel--;\n\n                this._writeIndents()\n                    ._write(\"})\");\n\n                return this._buffer.join(\"\");\n            },\n\n            _visitJscex: function (ast) {\n                this._jscexVisitors[ast.type].call(this, ast);\n                return this;\n            },\n\n            _visitRaw: function (ast) {\n                var type = ast[0];\n\n                function throwUnsupportedError() {\n                    throw new Error('\"' + type + '\" is not currently supported.');\n                }\n\n                var visitor = this._rawVisitors[type];\n\n                if (visitor) {\n                    visitor.call(this, ast);\n                } else {\n                    throwUnsupportedError();\n                }\n\n                return this;\n            },\n\n            _visitJscexStatements: function (statements) {\n                for (var i = 0; i < statements.length; i++) {\n                    var stmt = statements[i];\n\n                    if (stmt.type == \"raw\" || stmt.type == \"if\" || stmt.type == \"switch\") {\n                        this._writeIndents()\n                            ._visitJscex(stmt)._writeLine();\n                    } else if (stmt.type == \"delay\") {\n                        this._visitJscexStatements(stmt.stmts);\n                    } else {\n                        this._writeIndents()\n                            ._write(\"return \")._visitJscex(stmt)._writeLine(\";\");\n                    }\n                }\n            },\n\n            _visitRawStatements: function (statements) {\n                for (var i = 0; i < statements.length; i++) {\n                    var s = statements[i];\n\n                    this._writeIndents()\n                        ._visitRaw(s)._writeLine();\n\n                    switch (s[0]) {\n                        case \"break\":\n                        case \"return\":\n                        case \"continue\":\n                        case \"throw\":\n                            return;\n                    }\n                }\n            },\n\n            _visitRawBody: function (body) {\n                if (body[0] == \"block\") {\n                    this._visitRaw(body);\n                } else {\n                    this._writeLine();\n                    this._indentLevel++;\n\n                    this._writeIndents()\n                        ._visitRaw(body);\n                    this._indentLevel--;\n                }\n\n                return this;\n            },\n\n            _visitRawFunction: function (ast) {\n                var funcName = ast[1] || \"\";\n                var args = ast[2];\n                var statements = ast[3];\n                \n                this._writeLine(\"function \" + funcName + \"(\" + args.join(\", \") + \") {\")\n                this._indentLevel++;\n\n                var currInFunction = this._pos.inFunction;\n                this._pos.inFunction = true;\n\n                this._visitRawStatements(statements);\n                this._indentLevel--;\n\n                this._pos.inFunction = currInFunction;\n\n                this._writeIndents()\n                    ._write(\"}\");\n            },\n\n            _jscexVisitors: {\n                \"delay\": function (ast) {\n                    if (ast.stmts.length == 1) {\n                        var subStmt = ast.stmts[0];\n                        switch (subStmt.type) {\n                            case \"delay\":\n                            case \"combine\":\n                            case \"normal\":\n                            case \"break\":\n                            case \"continue\":\n                            case \"loop\":\n                            case \"try\":\n                                this._visitJscex(subStmt);\n                                return;\n                            case \"return\":\n                                if (!subStmt.stmt[1]) {\n                                    this._visitJscex(subStmt);\n                                    return;\n                                }\n                        }\n                    }\n\n                    this._writeLine(this._builderVar + \".Delay(function () {\");\n                    this._indentLevel++;\n\n                    this._visitJscexStatements(ast.stmts);\n                    this._indentLevel--;\n\n                    this._writeIndents()\n                        ._write(\"})\");\n                },\n\n                \"combine\": function (ast) {\n                    this._writeLine(this._builderVar + \".Combine(\");\n                    this._indentLevel++;\n\n                    this._writeIndents()\n                        ._visitJscex(ast.first)._writeLine(\",\");\n                    this._writeIndents()\n                        ._visitJscex(ast.second)._writeLine();\n                    this._indentLevel--;\n\n                    this._writeIndents()\n                        ._write(\")\");\n                },\n\n                \"loop\": function (ast) {\n                    this._writeLine(this._builderVar + \".Loop(\");\n                    this._indentLevel++;\n\n                    if (ast.condition) {\n                        this._writeIndents()\n                            ._writeLine(\"function () {\");\n                        this._indentLevel++;\n\n                        this._writeIndents()\n                            ._write(\"return \")._visitRaw(ast.condition)._writeLine(\";\");\n                        this._indentLevel--;\n\n                        this._writeIndents()\n                            ._writeLine(\"},\");\n                    } else {\n                        this._writeIndents()._writeLine(\"null,\");\n                    }\n\n                    if (ast.update) {\n                        this._writeIndents()\n                            ._writeLine(\"function () {\");\n                        this._indentLevel++;\n\n                        this._writeIndents()\n                            ._visitRaw(ast.update)._writeLine(\";\");\n                        this._indentLevel--;\n\n                        this._writeIndents()\n                            ._writeLine(\"},\");\n                    } else {\n                        this._writeIndents()._writeLine(\"null,\");\n                    }\n\n                    this._writeIndents()\n                        ._visitJscex(ast.bodyStmt)._writeLine(\",\");\n\n                    this._writeIndents()\n                        ._writeLine(ast.bodyFirst);\n                    this._indentLevel--;\n\n                    this._writeIndents()\n                        ._write(\")\");\n                },\n\n                \"raw\": function (ast) {\n                    this._visitRaw(ast.stmt);\n                },\n\n                \"bind\": function (ast) {\n                    var info = ast.info;\n                    this._write(this._builderVar + \".Bind(\")._visitRaw(info.expression)._writeLine(\", function (\" + info.argName + \") {\");\n                    this._indentLevel++;\n\n                    if (info.assignee == \"return\") {\n                        this._writeIndents()\n                            ._writeLine(\"return \" + this._builderVar + \".Return(\" + info.argName + \");\");\n                    } else {\n                        if (info.assignee) {\n                            this._writeIndents()\n                                ._visitRaw(info.assignee)._writeLine(\" = \" + info.argName + \";\");\n                        }\n\n                        this._visitJscexStatements(ast.stmts);\n                    }\n                    this._indentLevel--;\n\n                    this._writeIndents()\n                        ._write(\"})\");\n                },\n\n                \"if\": function (ast) {\n\n                    for (var i = 0; i < ast.conditionStmts.length; i++) {\n                        var stmt = ast.conditionStmts[i];\n                        \n                        this._write(\"if (\")._visitRaw(stmt.cond)._writeLine(\") {\");\n                        this._indentLevel++;\n\n                        this._visitJscexStatements(stmt.stmts);\n                        this._indentLevel--;\n\n                        this._writeIndents()\n                            ._write(\"} else \");\n                    }\n\n                    this._writeLine(\"{\");\n                    this._indentLevel++;\n\n                    if (ast.elseStmts) {\n                        this._visitJscexStatements(ast.elseStmts);\n                    } else {\n                        this._writeIndents()\n                            ._writeLine(\"return \" + this._builderVar + \".Normal();\");\n                    }\n\n                    this._indentLevel--;\n\n                    this._writeIndents()\n                        ._write(\"}\");\n                },\n\n                \"switch\": function (ast) {\n                    this._write(\"switch (\")._visitRaw(ast.item)._writeLine(\") {\");\n                    this._indentLevel++;\n\n                    for (var i = 0; i < ast.caseStmts.length; i++) {\n                        var caseStmt = ast.caseStmts[i];\n\n                        if (caseStmt.item) {\n                            this._writeIndents()\n                                ._write(\"case \")._visitRaw(caseStmt.item)._writeLine(\":\");\n                        } else {\n                            this._writeIndents()._writeLine(\"default:\");\n                        }\n                        this._indentLevel++;\n\n                        this._visitJscexStatements(caseStmt.stmts);\n                        this._indentLevel--;\n                    }\n\n                    this._writeIndents()\n                        ._write(\"}\");\n                },\n\n                \"try\": function (ast) {\n                    this._writeLine(this._builderVar + \".Try(\");\n                    this._indentLevel++;\n\n                    this._writeIndents()\n                        ._visitJscex(ast.bodyStmt)._writeLine(\",\");\n\n                    if (ast.catchStmts) {\n                        this._writeIndents()\n                            ._writeLine(\"function (\" + ast.exVar + \") {\");\n                        this._indentLevel++;\n\n                        this._visitJscexStatements(ast.catchStmts);\n                        this._indentLevel--;\n\n                        this._writeIndents()\n                            ._writeLine(\"},\");\n                    } else {\n                        this._writeIndents()\n                            ._writeLine(\"null,\");\n                    }\n\n                    if (ast.finallyStmt) {\n                        this._writeIndents()\n                            ._visitJscex(ast.finallyStmt)._writeLine();\n                    } else {\n                        this._writeIndents()\n                            ._writeLine(\"null\");\n                    }\n                    this._indentLevel--;\n\n                    this._writeIndents()\n                        ._write(\")\");\n                },\n\n                \"normal\": function (ast) {\n                    this._write(this._builderVar + \".Normal()\");\n                },\n\n                \"throw\": function (ast) {\n                    this._write(this._builderVar + \".Throw(\")._visitRaw(ast.stmt[1])._write(\")\");\n                },\n\n                \"break\": function (ast) {\n                    this._write(this._builderVar + \".Break()\");\n                },\n\n                \"continue\": function (ast) {\n                    this._write(this._builderVar + \".Continue()\");\n                },\n\n                \"return\": function (ast) {\n                    this._write(this._builderVar + \".Return(\");\n                    if (ast.stmt[1]) this._visitRaw(ast.stmt[1]);\n                    this._write(\")\");\n                }\n            },\n\n            _rawVisitors: {\n                \"var\": function (ast) {\n                    this._write(\"var \");\n\n                    var items = ast[1];\n                    for (var i = 0; i < items.length; i++) {\n                        this._write(items[i][0]);\n                        if (items[i].length > 1) {\n                            this._write(\" = \")._visitRaw(items[i][1]);\n                        }\n                        if (i < items.length - 1) this._write(\", \");\n                    }\n\n                    this._write(\";\");\n                },\n\n                \"seq\": function (ast) {\n                    for (var i = 1; i < ast.length; i++) {\n                        this._visitRaw(ast[i]);\n                        if (i < ast.length - 1) this._write(\", \"); \n                    }\n                },\n\n                \"binary\": function (ast) {\n                    var op = ast[1], left = ast[2], right = ast[3];\n\n                    function needBracket(item) {\n                        var type = item[0];\n                        return !(type == \"num\" || type == \"name\" || type == \"dot\");\n                    }\n\n                    if (needBracket(left)) {\n                        this._write(\"(\")._visitRaw(left)._write(\") \");\n                    } else {\n                        this._visitRaw(left)._write(\" \");\n                    }\n\n                    this._write(op);\n\n                    if (needBracket(right)) {\n                        this._write(\" (\")._visitRaw(right)._write(\")\");\n                    } else {\n                        this._write(\" \")._visitRaw(right);\n                    }\n                },\n\n                \"sub\": function (ast) {\n                    var prop = ast[1], index = ast[2];\n\n                    function needBracket() {\n                        return !(prop[0] == \"name\")\n                    }\n\n                    if (needBracket()) {\n                        this._write(\"(\")._visitRaw(prop)._write(\")[\")._visitRaw(index)._write(\"]\");\n                    } else {\n                        this._visitRaw(prop)._write(\"[\")._visitRaw(index)._write(\"]\");\n                    }\n                },\n\n                \"unary-postfix\": function (ast) {\n                    var op = ast[1];\n                    var item = ast[2];\n                    this._visitRaw(item)._write(op);\n                },\n\n                \"unary-prefix\": function (ast) {\n                    var op = ast[1];\n                    var item = ast[2];\n                    this._write(op);\n                    if (op == \"typeof\") {\n                        this._write(\"(\")._visitRaw(item)._write(\")\");\n                    } else {\n                        this._visitRaw(item);\n                    }\n                },\n\n                \"assign\": function (ast) {\n                    var op = ast[1];\n                    var name = ast[2];\n                    var value = ast[3];\n\n                    this._visitRaw(name);\n                    if ((typeof op) == \"string\") {\n                        this._write(\" \" + op + \"= \");\n                    } else {\n                        this._write(\" = \");\n                    }\n                    this._visitRaw(value);\n                },\n\n                \"stat\": function (ast) {\n                    this._visitRaw(ast[1])._write(\";\");\n                },\n\n                \"dot\": function (ast) {\n                    function needBracket() {\n                        var leftOp = ast[1][0];\n                        return !(leftOp == \"dot\" || leftOp == \"name\");\n                    }\n\n                    if (needBracket()) {\n                        this._write(\"(\")._visitRaw(ast[1])._write(\").\")._write(ast[2]);\n                    } else {\n                        this._visitRaw(ast[1])._write(\".\")._write(ast[2]);\n                    }\n                },\n\n                \"new\": function (ast) {\n                    var ctor = ast[1];\n\n                    this._write(\"new \")._visitRaw(ctor)._write(\"(\");\n\n                    var args = ast[2];\n                    for (var i = 0, len = args.length; i < len; i++) {\n                        this._visitRaw(args[i]);\n                        if (i < len - 1) this._write(\", \");\n                    }\n\n                    this._write(\")\");\n                },\n\n                \"call\": function (ast) {\n                \n                    if (_isJscexPattern(ast)) {\n                        var indent = this._indent + this._indentLevel * 4;\n                        var newCode = _compileJscexPattern(ast, indent);\n                        this._write(newCode);\n                    } else {\n\n                        var invalidBind = (ast[1][0] == \"name\") && (ast[1][1] == this._binder);\n                        if (invalidBind) {\n                            this._pos = { inFunction: true };\n                            this._buffer = [];\n                        }\n\n                        this._visitRaw(ast[1])._write(\"(\");\n\n                        var args = ast[2];\n                        for (var i = 0; i < args.length; i++) {\n                            this._visitRaw(args[i]);\n                            if (i < args.length - 1) this._write(\", \");\n                        }\n\n                        this._write(\")\");\n\n                        if (invalidBind) {\n                            throw (\"Invalid bind operation: \" + this._buffer.join(\"\"));\n                        }\n                    }\n                },\n\n                \"name\": function (ast) {\n                    this._write(ast[1]);\n                },\n\n                \"object\": function (ast) {\n                    var items = ast[1];\n                    if (items.length <= 0)=\"\" {=\"\" this._write(\"{=\"\" }\");=\"\" }=\"\" else=\"\" this._writeline(\"{\");=\"\" this._indentlevel++;=\"\" for=\"\" (var=\"\" i=\"0;\" <=\"\" items.length;=\"\" i++)=\"\" this._writeindents()=\"\" ._write(stringify(items[i][0])=\"\" +=\"\" \":=\"\" \")=\"\" ._visitraw(items[i][1]);=\"\" if=\"\" (i=\"\" items.length=\"\" -=\"\" 1)=\"\" this._writeline(\",\");=\"\" this._writeline(\"\");=\"\" this._indentlevel--;=\"\" this._writeindents()._write(\"}\");=\"\" },=\"\" \"array\":=\"\" function=\"\" (ast)=\"\" this._write(\"[\");=\"\" var=\"\" items=\"ast[1];\" this._visitraw(items[i]);=\"\" this._write(\",=\"\" \");=\"\" this._write(\"]\");=\"\" \"num\":=\"\" this._write(ast[1]);=\"\" \"regexp\":=\"\" this._write(\"=\"\" \"=\"\" ast[1]=\"\" ast[2]);=\"\" \"string\":=\"\" this._write(stringify(ast[1]));=\"\" \"function\":=\"\" this._visitrawfunction(ast);=\"\" \"defun\":=\"\" \"return\":=\"\" (this._pos.infunction)=\"\" this._write(\"return\");=\"\" value=\"ast[1];\" (value)=\"\" \")._visitraw(value);=\"\" this._write(\";\");=\"\" this._write(\"return=\"\" \")._visitjscex({=\"\" type:=\"\" \"return\",=\"\" stmt:=\"\" ast=\"\" })._write(\";\");=\"\" \"for\":=\"\" this._write(\"for=\"\" (\");=\"\" setup=\"ast[1];\" (setup)=\"\" this._visitraw(setup);=\"\" (setup[0]=\"\" !=\"var\" )=\"\" this._write(\";=\"\" condition=\"ast[2];\" (condition)=\"\" this._visitraw(condition);=\"\" update=\"ast[3];\" (update)=\"\" this._visitraw(update);=\"\" this._write(\")=\"\" currinloop=\"this._pos.inLoop;\" this._pos.inloop=\"true;\" body=\"ast[4];\" this._visitrawbody(body);=\"\" \"for-in\":=\"\" declare=\"ast[1];\" (declare[0]=\"=\" \"var\")=\"\" [\"var\",=\"\" [[\"m\"]]]=\"\" this._write(\"var=\"\" declare[1][0][0]);=\"\" this._visitraw(declare);=\"\" in=\"\" \")._visitraw(ast[3])._write(\")=\"\" \"block\":=\"\" this._writeline(\"{\")=\"\" this._visitrawstatements(ast[1]);=\"\" ._write(\"}\");=\"\" \"while\":=\"\" this._write(\"while=\"\" (\")._visitraw(condition)._write(\")=\"\" \")._visitrawbody(body);=\"\" \"do\":=\"\" this._write(\"do=\"\" (body[0]=\"=\" \"block\")=\"\" this._writeline()._writeindents();=\"\" (\")._visitraw(condition)._write(\");\");=\"\" \"if\":=\"\" thenpart=\"ast[2];\" this._write(\"if=\"\" \")._visitrawbody(thenpart);=\"\" elsepart=\"ast[3];\" (elsepart)=\"\" (thenpart[0]=\"=\" this._writeline(\"\")=\"\" ._writeindents();=\"\" (elsepart[0]=\"=\" \"if\")=\"\" this._write(\"else=\"\" \")._visitraw(elsepart);=\"\" \")._visitrawbody(elsepart);=\"\" \"break\":=\"\" (this._pos.inloop=\"\" ||=\"\" this._pos.inswitch)=\"\" this._write(\"break;\");=\"\" \"break\",=\"\" \"continue\":=\"\" (this._pos.inloop)=\"\" this._write(\"continue;\");=\"\" \"continue\",=\"\" \"throw\":=\"\" pos=\"this._pos;\" (pos.intry=\"\" pos.infunction)=\"\" this._write(\"throw=\"\" \")._visitraw(ast[1])._write(\";\");=\"\" \"throw\",=\"\" \"conditional\":=\"\" this._write(\"(\")._visitraw(ast[1])._write(\")=\"\" ?=\"\" (\")._visitraw(ast[2])._write(\")=\"\" :=\"\" (\")._visitraw(ast[3])._write(\")\");=\"\" \"try\":=\"\" this._writeline(\"try=\"\" {\");=\"\" currintry=\"this._pos.inTry;\" this._pos.intry=\"true;\" catchclause=\"ast[2];\" finallystatements=\"ast[3];\" (catchclause)=\"\" ._writeline(\"}=\"\" catch=\"\" (\"=\"\" catchclause[0]=\"\" {\")=\"\" this._visitrawstatements(catchclause[1]);=\"\" (finallystatements)=\"\" finally=\"\" this._visitrawstatements(finallystatements);=\"\" \"switch\":=\"\" this._write(\"switch=\"\" (\")._visitraw(ast[1])._writeline(\")=\"\" currinswitch=\"this._pos.inSwitch;\" this._pos.inswitch=\"true;\" cases=\"ast[2];\" cases.length;=\"\" c=\"cases[i];\" this._writeindents();=\"\" (c[0])=\"\" this._write(\"case=\"\" \")._visitraw(c[0])._writeline(\":\");=\"\" this._writeline(\"default:\");=\"\" this._visitrawstatements(c[1]);=\"\" _isjscexpattern(ast)=\"\" (ast[0]=\"\" return=\"\" false;=\"\" evalname=\"ast[1];\" (evalname[0]=\"\" evalname[1]=\"\" compilecall=\"ast[2][0];\" (!compilecall=\"\" compilecall[0]=\"\" compilemethod=\"compileCall[1];\" (!compilemethod=\"\" compilemethod[0]=\"\" compilemethod[2]=\"\" jscexname=\"compileMethod[1];\" (!jscexname=\"\" jscexname[0]=\"\" jscexname[1]=\"\" builder=\"compileCall[2][0];\" (!builder=\"\" builder[0]=\"\" func=\"compileCall[2][1];\" (!func=\"\" func[0]=\"\" true;=\"\" _compilejscexpattern(ast,=\"\" indent)=\"\" buildername=\"ast[2][0][2][0][1];\" funcast=\"ast[2][0][2][1];\" binder=\"root.binders[builderName];\" jscextreegenerator=\"new\" jscextreegenerator(binder);=\"\" jscexast=\"jscexTreeGenerator.generate(funcAst);\" codegenerator=\"new\" codegenerator(buildername,=\"\" binder,=\"\" indent);=\"\" newcode=\"codeGenerator.generate(funcAst[2],\" jscexast);=\"\" newcode;=\"\" compile(buildername,=\"\" func)=\"\" funccode=\"func.toString();\" evalcode=\"eval(Jscex.compile(\" stringify(buildername)=\"\" \",=\"\" \"))\"=\"\" evalcodeast=\"root.parse(evalCode);\" [=\"\" \"toplevel\",=\"\" \"stat\",=\"\" \"call\",=\"\" ...=\"\" ]=\"\" evalast=\"evalCodeAst[1][0][1];\" 0);=\"\" root.logger.debug(funccode=\"\" \"\\n\\n=\"\">>>\\n\\n\" + newCode);\n            \n            return codeGenerator(newCode);\n        };\n\n        root.compile = compile;\n        \n        root.modules[\"jit\"] = true;\n    }\n    \n    var isCommonJS = (typeof require !== \"undefined\" && typeof module !== \"undefined\" && module.exports);\n    var isAmd = (typeof define !== \"undefined\" && define.amd);\n    \n    if (isCommonJS) {\n        module.exports.init = function (root) {\n            if (!root.modules[\"parser\"]) {\n                require(\"./jscex-parser\").init(root);\n            };\n            \n            init(root);\n        }\n    } else if (isAmd) {\n        define(\"jscex-jit\", [\"jscex-parser\"], function (parser) {\n            return {\n                init: function (root) {\n                    if (!root.modules[\"parser\"]) {\n                        parser.init(root);\n                    }\n                    \n                    init(root);\n                }\n            };\n        });\n    } else {\n        if (typeof Jscex === \"undefined\") {\n            throw new Error('Missing root object, please load \"jscex\" module first.');\n        }\n        \n        if (!Jscex.modules[\"parser\"]) {\n            throw new Error('Missing essential components, please initialize \"parser\" module first.');\n        }\n\n        init(Jscex);\n    }\n\n})();\n</=></=>","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/love.js","content":"(function(window){\n\n    function random(min, max) {\n        return min + Math.floor(Math.random() * (max - min + 1));\n    }\n\n    function bezier(cp, t) {  \n        var p1 = cp[0].mul((1 - t) * (1 - t));\n        var p2 = cp[1].mul(2 * t * (1 - t));\n        var p3 = cp[2].mul(t * t); \n        return p1.add(p2).add(p3);\n    }  \n\n    function inheart(x, y, r) {\n        // x^2+(y-(x^2)^(1/3))^2 = 1\n        // http://www.wolframalpha.com/input/?i=x%5E2%2B%28y-%28x%5E2%29%5E%281%2F3%29%29%5E2+%3D+1\n        var z = ((x / r) * (x / r) + (y / r) * (y / r) - 1) * ((x / r) * (x / r) + (y / r) * (y / r) - 1) * ((x / r) * (x / r) + (y / r) * (y / r) - 1) - (x / r) * (x / r) * (y / r) * (y / r) * (y / r);\n        return z < 0;\n    }\n\n    Point = function(x, y) {\n        this.x = x || 0;\n        this.y = y || 0;\n    }\n    Point.prototype = {\n        clone: function() {\n            return new Point(this.x, this.y);\n        },\n        add: function(o) {\n            p = this.clone();\n            p.x += o.x;\n            p.y += o.y;\n            return p;\n        },\n        sub: function(o) {\n            p = this.clone();\n            p.x -= o.x;\n            p.y -= o.y;\n            return p;\n        },\n        div: function(n) {\n            p = this.clone();\n            p.x /= n;\n            p.y /= n;\n            return p;\n        },\n        mul: function(n) {\n            p = this.clone();\n            p.x *= n;\n            p.y *= n;\n            return p;\n        }\n    }\n\n    Heart = function() {\n        // x = 16 sin^3 t\n        // y = 13 cos t - 5 cos 2t - 2 cos 3t - cos 4t\n        // http://www.wolframalpha.com/input/?i=x+%3D+16+sin%5E3+t%2C+y+%3D+(13+cos+t+-+5+cos+2t+-+2+cos+3t+-+cos+4t)\n        var points = [], x, y, t;\n        for (var i = 10; i < 30; i += 0.2) {\n            t = i / Math.PI;\n            x = 16 * Math.pow(Math.sin(t), 3);\n            y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t);\n            points.push(new Point(x, y));\n        }\n        this.points = points;\n        this.length = points.length;\n    }\n    Heart.prototype = {\n        get: function(i, scale) {\n            return this.points[i].mul(scale || 1);\n        }\n    }\n\n    Seed = function(tree, point, scale, color) {\n        this.tree = tree;\n\n        var scale = scale || 1\n        var color = color || '#FF0000';\n\n        this.heart = {\n            point  : point,\n            scale  : scale,\n            color  : color,\n            figure : new Heart(),\n        }\n\n        this.cirle = {\n            point  : point,\n            scale  : scale,\n            color  : color,\n            radius : 5,\n        }\n    }\n    Seed.prototype = {\n        draw: function() {\n            this.drawHeart();\n            this.drawText();\n        },\n        addPosition: function(x, y) {\n            this.cirle.point = this.cirle.point.add(new Point(x, y));\n        },\n        canMove: function() {\n            return this.cirle.point.y < (this.tree.height + 20); \n        },\n        move: function(x, y) {\n            this.clear();\n            this.drawCirle();\n            this.addPosition(x, y);\n        },\n        canScale: function() {\n            return this.heart.scale > 0.2;\n        },\n        setHeartScale: function(scale) {\n            this.heart.scale *= scale;\n        },\n        scale: function(scale) {\n            this.clear();\n            this.drawCirle();\n            this.drawHeart();\n            this.setHeartScale(scale);\n        },\n        drawHeart: function() {\n            var ctx = this.tree.ctx, heart = this.heart;\n            var point = heart.point, color = heart.color, \n                scale = heart.scale;\n            ctx.save();\n            ctx.fillStyle = color;\n            ctx.translate(point.x, point.y);\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            for (var i = 0; i < heart.figure.length; i++) {\n                var p = heart.figure.get(i, scale);\n                ctx.lineTo(p.x, -p.y);\n            }\n            ctx.closePath();\n            ctx.fill();\n            ctx.restore();\n        },\n        drawCirle: function() {\n            var ctx = this.tree.ctx, cirle = this.cirle;\n            var point = cirle.point, color = cirle.color, \n                scale = cirle.scale, radius = cirle.radius;\n            ctx.save();\n            ctx.fillStyle = color;\n            ctx.translate(point.x, point.y);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n    \t    ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n            ctx.closePath();\n            ctx.fill();\n            ctx.restore();\n        },\n        drawText: function() {\n            var ctx = this.tree.ctx, heart = this.heart;\n            var point = heart.point, color = heart.color, \n                scale = heart.scale;\n            ctx.save();\n            ctx.strokeStyle = color;\n            ctx.fillStyle = color;\n            ctx.translate(point.x, point.y);\n            ctx.scale(scale, scale);\n            ctx.moveTo(0, 0);\n    \t    ctx.lineTo(15, 15);\n    \t    ctx.lineTo(60, 15);\n            ctx.stroke();\n\n            ctx.moveTo(0, 0);\n            ctx.scale(0.75, 0.75);\n            ctx.font = \"12px 微软雅黑,Verdana\"; // 字号肿么没有用? (ˉ(∞)ˉ)\n            ctx.fillText(\"click here\", 23, 16);\n            ctx.restore();\n        },\n        clear: function() {\n            var ctx = this.tree.ctx, cirle = this.cirle;\n            var point = cirle.point, scale = cirle.scale, radius = 26;\n            var w = h = (radius * scale);\n            ctx.clearRect(point.x - w, point.y - h, 4 * w, 4 * h);\n        },\n        hover: function(x, y) {\n            var ctx = this.tree.ctx;\n            var pixel = ctx.getImageData(x, y, 1, 1);\n            return pixel.data[3] == 255\n        }\n    }\n\n    Footer = function(tree, width, height, speed) {\n        this.tree = tree;\n        this.point = new Point(tree.seed.heart.point.x, tree.height - height / 2);\n        this.width = width;\n        this.height = height;\n        this.speed = speed || 2;\n        this.length = 0;\n    }\n    Footer.prototype = {\n        draw: function() {\n            var ctx = this.tree.ctx, point = this.point;\n            var len = this.length / 2;\n\n            ctx.save();\n            ctx.strokeStyle = 'rgb(35, 31, 32)';\n            ctx.lineWidth = this.height;\n            ctx.lineCap = 'round';\n            ctx.lineJoin = 'round';\n            ctx.translate(point.x, point.y);\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n    \t    ctx.lineTo(len, 0);\n    \t    ctx.lineTo(-len, 0);\n            ctx.stroke();\n            ctx.restore();\n\n            if (this.length < this.width) {\n                this.length += this.speed;\n            }\n        }\n    }\n\n    Tree = function(canvas, width, height, opt) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.width = width;\n        this.height = height;\n        this.opt = opt || {};\n\n        this.record = {};\n        \n        this.initSeed();\n        this.initFooter();\n        this.initBranch();\n        this.initBloom();\n    }\n    Tree.prototype = {\n        initSeed: function() {\n            var seed = this.opt.seed || {};\n            var x = seed.x || this.width / 2;\n            var y = seed.y || this.height / 2;\n            var point = new Point(x, y);\n            var color = seed.color || '#FF0000';\n            var scale = seed.scale || 1;\n\n            this.seed = new Seed(this, point, scale, color);\n        },\n\n        initFooter: function() {\n            var footer = this.opt.footer || {};\n            var width = footer.width || this.width;\n            var height = footer.height || 5;\n            var speed = footer.speed || 2;\n            this.footer = new Footer(this, width, height, speed);\n        },\n\n        initBranch: function() {\n            var branchs = this.opt.branch || []\n            this.branchs = [];\n            this.addBranchs(branchs);\n        },\n\n        initBloom: function() {\n            var bloom = this.opt.bloom || {};\n            var cache = [],\n                num = bloom.num || 500, \n                width = bloom.width || this.width,\n                height = bloom.height || this.height,\n                figure = this.seed.heart.figure;\n            var r = 240, x, y;\n            for (var i = 0; i < num; i++) {\n                cache.push(this.createBloom(width, height, r, figure));\n            }\n            this.blooms = [];\n            this.bloomsCache = cache;\n        },\n\n        toDataURL: function(type) {\n            return this.canvas.toDataURL(type);\n        },\n\n        draw: function(k) {\n            var s = this, ctx = s.ctx;\n            var rec = s.record[k];\n            if (!rec) {\n                return ;\n            }\n            var point = rec.point,\n                image = rec.image;\n\n            ctx.save();\n            ctx.putImageData(image, point.x, point.y);\n        \tctx.restore();\n        },\n\n        addBranch: function(branch) {\n        \tthis.branchs.push(branch);\n        },\n\n        addBranchs: function(branchs){\n            var s = this, b, p1, p2, p3, r, l, c;\n        \tfor (var i = 0; i < branchs.length; i++) {\n                b = branchs[i];\n                p1 = new Point(b[0], b[1]);\n                p2 = new Point(b[2], b[3]);\n                p3 = new Point(b[4], b[5]);\n                r = b[6];\n                l = b[7];\n                c = b[8]\n                s.addBranch(new Branch(s, p1, p2, p3, r, l, c)); \n            }\n        },\n\n        removeBranch: function(branch) {\n            var branchs = this.branchs;\n        \tfor (var i = 0; i < branchs.length; i++) {\n        \t\tif (branchs[i] === branch) {\n        \t\t\tbranchs.splice(i, 1);\n                }\n            }\n        },\n\n        canGrow: function() {\n            return !!this.branchs.length;\n        },\n        grow: function() {\n            var branchs = this.branchs;\n    \t    for (var i = 0; i < branchs.length; i++) {\n                var branch = branchs[i];\n                if (branch) {\n                    branch.grow();\n                }\n            }\n        },\n\n        addBloom: function (bloom) {\n            this.blooms.push(bloom);\n        },\n\n        removeBloom: function (bloom) {\n            var blooms = this.blooms;\n            for (var i = 0; i < blooms.length; i++) {\n                if (blooms[i] === bloom) {\n                    blooms.splice(i, 1);\n                }\n            }\n        },\n\n        createBloom: function(width, height, radius, figure, color, alpha, angle, scale, place, speed) {\n            var x, y;\n            while (true) {\n                x = random(20, width - 20);\n                y = random(20, height - 20);\n                if (inheart(x - width / 2, height - (height - 40) / 2 - y, radius)) {\n                    return new Bloom(this, new Point(x, y), figure, color, alpha, angle, scale, place, speed);\n                }\n            }\n        },\n        \n        canFlower: function() {\n            return !!this.blooms.length;\n        }, \n        flower: function(num) {\n            var s = this, blooms = s.bloomsCache.splice(0, num);\n            for (var i = 0; i < blooms.length; i++) {\n                s.addBloom(blooms[i]);\n            }\n            blooms = s.blooms;\n            for (var j = 0; j < blooms.length; j++) {\n                blooms[j].flower();\n            }\n        },\n\n        snapshot: function(k, x, y, width, height) {\n            var ctx = this.ctx;\n            var image = ctx.getImageData(x, y, width, height); \n            this.record[k] = {\n                image: image,\n                point: new Point(x, y),\n                width: width,\n                height: height\n            }\n        },\n        setSpeed: function(k, speed) {\n            this.record[k || \"move\"].speed = speed;\n        },\n        move: function(k, x, y) {\n            var s = this, ctx = s.ctx;\n            var rec = s.record[k || \"move\"];\n            var point = rec.point,\n                image = rec.image,\n                speed = rec.speed || 10,\n                width = rec.width,\n                height = rec.height; \n\n            i = point.x + speed < x ? point.x + speed : x;\n            j = point.y + speed < y ? point.y + speed : y; \n\n            ctx.save();\n            ctx.clearRect(point.x, point.y, width, height);\n            ctx.putImageData(image, i, j);\n        \tctx.restore();\n\n            rec.point = new Point(i, j);\n            rec.speed = speed * 0.95;\n\n            if (rec.speed < 2) {\n                rec.speed = 2;\n            }\n            return i < x || j < y;\n        },\n\n        jump: function() {\n            var s = this, blooms = s.blooms;\n            if (blooms.length) {\n                for (var i = 0; i < blooms.length; i++) {\n                    blooms[i].jump();\n                }\n            } \n            if ((blooms.length && blooms.length < 3) || !blooms.length) {\n                var bloom = this.opt.bloom || {},\n                    width = bloom.width || this.width,\n                    height = bloom.height || this.height,\n                    figure = this.seed.heart.figure;\n                var r = 240, x, y;\n                for (var i = 0; i < random(1,2); i++) {\n                    blooms.push(this.createBloom(width / 2 + width, height, r, figure, null, 1, null, 1, new Point(random(-100,600), 720), random(200,300)));\n                }\n            }\n        }\n    }\n\n    Branch = function(tree, point1, point2, point3, radius, length, branchs) {\n        this.tree = tree;\n        this.point1 = point1;\n        this.point2 = point2;\n        this.point3 = point3;\n        this.radius = radius;\n        this.length = length || 100;    \n        this.len = 0;\n        this.t = 1 / (this.length - 1);   \n        this.branchs = branchs || [];\n    }\n\n    Branch.prototype = {\n        grow: function() {\n            var s = this, p; \n            if (s.len <= 2=\"\" s.length)=\"\" {=\"\" p=\"bezier([s.point1,\" s.point2,=\"\" s.point3],=\"\" s.len=\"\" *=\"\" s.t);=\"\" s.draw(p);=\"\" +=\"1;\" s.radius=\"\" }=\"\" else=\"\" s.tree.removebranch(s);=\"\" s.tree.addbranchs(s.branchs);=\"\" },=\"\" draw:=\"\" function(p)=\"\" var=\"\" s=\"this;\" ctx=\"s.tree.ctx;\" ctx.save();=\"\" ctx.beginpath();=\"\" ctx.fillstyle=\"rgb(35, 31, 32)\" ;=\"\" ctx.shadowcolor=\"rgb(35, 31, 32)\" ctx.shadowblur=\"2;\" ctx.moveto(p.x,=\"\" p.y);=\"\" ctx.arc(p.x,=\"\" p.y,=\"\" s.radius,=\"\" 0,=\"\" math.pi);=\"\" ctx.closepath();=\"\" ctx.fill();=\"\" ctx.restore();=\"\" bloom=\"function(tree,\" point,=\"\" figure,=\"\" color,=\"\" alpha,=\"\" angle,=\"\" scale,=\"\" place,=\"\" speed)=\"\" this.tree=\"tree;\" this.point=\"point;\" this.color=\"color\" ||=\"\" 'rgb(255,'=\"\" random(0,=\"\" 255)=\"\" ','=\"\" ')';=\"\" this.alpha=\"alpha\" random(0.3,=\"\" 1);=\"\" this.angle=\"angle\" 360);=\"\" this.scale=\"scale\" 0.1;=\"\" this.place=\"place;\" this.speed=\"speed;\" this.figure=\"figure;\" bloom.prototype=\"{\" setfigure:=\"\" function(figure)=\"\" flower:=\"\" function()=\"\" s.draw();=\"\" s.scale=\"\" if=\"\" (s.scale=\"\"> 1) {\n                s.tree.removeBloom(s);\n            }\n        },\n        draw: function() {\n            var s = this, ctx = s.tree.ctx, figure = s.figure;\n\n            ctx.save();\n            ctx.fillStyle = s.color;\n            ctx.globalAlpha = s.alpha;\n            ctx.translate(s.point.x, s.point.y);\n            ctx.scale(s.scale, s.scale);\n            ctx.rotate(s.angle);\n            ctx.beginPath();\n            ctx.moveTo(0, 0);\n            for (var i = 0; i < figure.length; i++) {\n                var p = figure.get(i);\n                ctx.lineTo(p.x, -p.y);\n            }\n            ctx.closePath();\n            ctx.fill();\n            ctx.restore();\n        },\n        jump: function() {\n            var s = this, height = s.tree.height;\n\n            if (s.point.x < -20 || s.point.y > height + 20) {\n                s.tree.removeBloom(s);\n            } else {\n                s.draw();\n                s.point = s.place.sub(s.point).div(s.speed).add(s.point);\n                s.angle += 0.05;\n                s.speed -= 1;\n            }\n        }\n    }\n\n    window.random = random;\n    window.bezier = bezier;\n    window.Point = Point;\n    window.Tree = Tree;\n\n})(window);\n</=>","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/default.css","content":"body{margin:0;padding:0;background:#ffe;font-size:14px;font-family:'微软雅黑','宋体',sans-serif;color:#231F20;overflow:auto}\na {color:#000;font-size:14px;}\n#main{width:100%;}\n#wrap{position:relative;margin:0 auto;width:1100px;height:680px;margin-top:10px;}\n#text{width:400px;height:425px;left:60px;top:80px;position:absolute;}\n#code{display:none;font-size:16px;}\n#clock-box {position:absolute;left:60px;top:550px;font-size:28px;display:none;}\n#clock-box a {font-size:28px;text-decoration:none;}\n#clock{margin-left:48px;}\n#clock .digit {font-size:64px;}\n#canvas{margin:0 auto;width:1100px;height:680px;}\n#error{margin:0 auto;text-align:center;margin-top:60px;display:none;}\n.hand{cursor:pointer;}\n.say{margin-left:5px;}\n.space{margin-right:150px;}\n","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/jscex-parser.js","content":"/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n\n  This version is suitable for Node.js.  With minimal changes (the\n  exports stuff) it should work on any JS platform.\n\n  This file contains the tokenizer/parser.  It is a port to JavaScript\n  of parse-js [1], a JavaScript parser library written in Common Lisp\n  by Marijn Haverbeke.  Thank you Marijn!\n\n  [1] http://marijn.haverbeke.nl/parse-js/\n\n  Exported functions:\n\n    - tokenizer(code) -- returns a function.  Call the returned\n      function to fetch the next token.\n\n    - parse(code) -- returns an AST of the given JavaScript code.\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2010 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n(function () {\n\n/* -----[ Tokenizer (constants) ]----- */\n\nvar KEYWORDS = array_to_hash([\n        \"break\",\n        \"case\",\n        \"catch\",\n        \"const\",\n        \"continue\",\n        \"default\",\n        \"delete\",\n        \"do\",\n        \"else\",\n        \"finally\",\n        \"for\",\n        \"function\",\n        \"if\",\n        \"in\",\n        \"instanceof\",\n        \"new\",\n        \"return\",\n        \"switch\",\n        \"throw\",\n        \"try\",\n        \"typeof\",\n        \"var\",\n        \"void\",\n        \"while\",\n        \"with\"\n]);\n\nvar RESERVED_WORDS = array_to_hash([\n        \"abstract\",\n        \"boolean\",\n        \"byte\",\n        \"char\",\n        \"class\",\n        \"debugger\",\n        \"double\",\n        \"enum\",\n        \"export\",\n        \"extends\",\n        \"final\",\n        \"float\",\n        \"goto\",\n        \"implements\",\n        \"import\",\n        \"int\",\n        \"interface\",\n        \"long\",\n        \"native\",\n        \"package\",\n        \"private\",\n        \"protected\",\n        \"public\",\n        \"short\",\n        \"static\",\n        \"super\",\n        \"synchronized\",\n        \"throws\",\n        \"transient\",\n        \"volatile\"\n]);\n\nvar KEYWORDS_BEFORE_EXPRESSION = array_to_hash([\n        \"return\",\n        \"new\",\n        \"delete\",\n        \"throw\",\n        \"else\",\n        \"case\"\n]);\n\nvar KEYWORDS_ATOM = array_to_hash([\n        \"false\",\n        \"null\",\n        \"true\",\n        \"undefined\"\n]);\n\nvar OPERATOR_CHARS = array_to_hash(characters(\"+-*&%=<>!?|~^\"));\n\nvar RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\nvar RE_OCT_NUMBER = /^0[0-7]+$/;\nvar RE_DEC_NUMBER = /^\\d*\\.?\\d*(?:e[+-]?\\d*(?:\\d\\.?|\\.?\\d)\\d*)?$/i;\n\nvar OPERATORS = array_to_hash([\n        \"in\",\n        \"instanceof\",\n        \"typeof\",\n        \"new\",\n        \"void\",\n        \"delete\",\n        \"++\",\n        \"--\",\n        \"+\",\n        \"-\",\n        \"!\",\n        \"~\",\n        \"&\",\n        \"|\",\n        \"^\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \">>\",\n        \"<<\", \"=\"\">>>\",\n        \"<\", \"=\"\">\",\n        \"<=\", \"=\"\">=\",\n        \"==\",\n        \"===\",\n        \"!=\",\n        \"!==\",\n        \"?\",\n        \"=\",\n        \"+=\",\n        \"-=\",\n        \"/=\",\n        \"*=\",\n        \"%=\",\n        \">>=\",\n        \"<<=\", \"=\"\">>>=\",\n        \"|=\",\n        \"^=\",\n        \"&=\",\n        \"&&\",\n        \"||\"\n]);\n\nvar WHITESPACE_CHARS = array_to_hash(characters(\" \\n\\r\\t\\u200b\"));\n\nvar PUNC_BEFORE_EXPRESSION = array_to_hash(characters(\"[{}(,.;:\"));\n\nvar PUNC_CHARS = array_to_hash(characters(\"[]{}(),;:\"));\n\nvar REGEXP_MODIFIERS = array_to_hash(characters(\"gmsiy\"));\n\n/* -----[ Tokenizer ]----- */\n\n// regexps adapted from http://xregexp.com/plugins/#unicode\nvar UNICODE = {\n        letter: new RegExp(\"[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u0523\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0621-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971\\\\u0972\\\\u097B-\\\\u097F\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C33\\\\u0C35-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D28\\\\u0D2A-\\\\u0D39\\\\u0D3D\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC\\\\u0EDD\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8B\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10D0-\\\\u10FA\\\\u10FC\\\\u1100-\\\\u1159\\\\u115F-\\\\u11A2\\\\u11A8-\\\\u11F9\\\\u1200-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u1676\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u1900-\\\\u191C\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19A9\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u2094\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2183\\\\u2184\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2C6F\\\\u2C71-\\\\u2C7D\\\\u2C80-\\\\u2CE4\\\\u2D00-\\\\u2D25\\\\u2D30-\\\\u2D65\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005\\\\u3006\\\\u3031-\\\\u3035\\\\u303B\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31B7\\\\u31F0-\\\\u31FF\\\\u3400\\\\u4DB5\\\\u4E00\\\\u9FC3\\\\uA000-\\\\uA48C\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA65F\\\\uA662-\\\\uA66E\\\\uA67F-\\\\uA697\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B\\\\uA78C\\\\uA7FB-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAC00\\\\uD7A3\\\\uF900-\\\\uFA2D\\\\uFA30-\\\\uFA6A\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]\"),\n        non_spacing_mark: new RegExp(\"[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0487\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065E\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0900-\\\\u0902\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0955\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EB9\\\\u0EBB\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F90-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1DC0-\\\\u1DE6\\\\u1DFD-\\\\u1DFF\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F\\\\uA67C\\\\uA67D\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8E0-\\\\uA8F1\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE26]\"),\n        space_combining_mark: new RegExp(\"[\\\\u0903\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u0982\\\\u0983\\\\u09BE-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09D7\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD7\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC0-\\\\u0CC4\\\\u0CC7\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0D02\\\\u0D03\\\\u0D3E-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D57\\\\u0D82\\\\u0D83\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u102B\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108F\\\\u109A-\\\\u109C\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u19B0-\\\\u19C0\\\\u19C8\\\\u19C9\\\\u1A19-\\\\u1A1B\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43\\\\u1B44\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF2\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA953\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BD-\\\\uA9C0\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAA7B\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]\"),\n        connector_punctuation: new RegExp(\"[\\\\u005F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F]\")\n};\n\nfunction is_letter(ch) {\n        return UNICODE.letter.test(ch);\n};\n\nfunction is_digit(ch) {\n        ch = ch.charCodeAt(0);\n        return ch >= 48 && ch <= 57;=\"\" xxx:=\"\" find=\"\" out=\"\" if=\"\" \"unicodedigit\"=\"\" means=\"\" something=\"\" else=\"\" than=\"\" 0..9=\"\" };=\"\" function=\"\" is_alphanumeric_char(ch)=\"\" {=\"\" return=\"\" is_digit(ch)=\"\" ||=\"\" is_letter(ch);=\"\" is_unicode_combining_mark(ch)=\"\" unicode.non_spacing_mark.test(ch)=\"\" unicode.space_combining_mark.test(ch);=\"\" is_unicode_connector_punctuation(ch)=\"\" unicode.connector_punctuation.test(ch);=\"\" is_identifier_start(ch)=\"\" ch=\"=\" \"$\"=\"\" \"_\"=\"\" is_identifier_char(ch)=\"\" \"\\u200c\"=\"\" zero-width=\"\" non-joiner=\"\" <zwnj=\"\">\n                || ch == \"\\u200d\" // zero-width joiner <zwj> (in my ECMA-262 PDF, this is also 200c)\n        ;\n};\n\nfunction parse_js_number(num) {\n        if (RE_HEX_NUMBER.test(num)) {\n                return parseInt(num.substr(2), 16);\n        } else if (RE_OCT_NUMBER.test(num)) {\n                return parseInt(num.substr(1), 8);\n        } else if (RE_DEC_NUMBER.test(num)) {\n                return parseFloat(num);\n        }\n};\n\nfunction JS_Parse_Error(message, line, col, pos) {\n        this.message = message;\n        this.line = line;\n        this.col = col;\n        this.pos = pos;\n        try {\n                ({})();\n        } catch(ex) {\n                this.stack = ex.stack;\n        };\n};\n\nJS_Parse_Error.prototype.toString = function() {\n        return this.message + \" (line: \" + this.line + \", col: \" + this.col + \", pos: \" + this.pos + \")\" + \"\\n\\n\" + this.stack;\n};\n\nfunction js_error(message, line, col, pos) {\n        throw new JS_Parse_Error(message, line, col, pos);\n};\n\nfunction is_token(token, type, val) {\n        return token.type == type && (val == null || token.value == val);\n};\n\nvar EX_EOF = {};\n\nfunction tokenizer($TEXT) {\n\n        var S = {\n                text            : $TEXT.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, \"\\n\").replace(/^\\uFEFF/, ''),\n                pos             : 0,\n                tokpos          : 0,\n                line            : 0,\n                tokline         : 0,\n                col             : 0,\n                tokcol          : 0,\n                newline_before  : false,\n                regex_allowed   : false,\n                comments_before : []\n        };\n\n        function peek() { return S.text.charAt(S.pos); };\n\n        function next(signal_eof) {\n                var ch = S.text.charAt(S.pos++);\n                if (signal_eof && !ch)\n                        throw EX_EOF;\n                if (ch == \"\\n\") {\n                        S.newline_before = true;\n                        ++S.line;\n                        S.col = 0;\n                } else {\n                        ++S.col;\n                }\n                return ch;\n        };\n\n        function eof() {\n                return !S.peek();\n        };\n\n        function find(what, signal_eof) {\n                var pos = S.text.indexOf(what, S.pos);\n                if (signal_eof && pos == -1) throw EX_EOF;\n                return pos;\n        };\n\n        function start_token() {\n                S.tokline = S.line;\n                S.tokcol = S.col;\n                S.tokpos = S.pos;\n        };\n\n        function token(type, value, is_comment) {\n                S.regex_allowed = ((type == \"operator\" && !HOP(UNARY_POSTFIX, value)) ||\n                                   (type == \"keyword\" && HOP(KEYWORDS_BEFORE_EXPRESSION, value)) ||\n                                   (type == \"punc\" && HOP(PUNC_BEFORE_EXPRESSION, value)));\n                var ret = {\n                        type  : type,\n                        value : value,\n                        line  : S.tokline,\n                        col   : S.tokcol,\n                        pos   : S.tokpos,\n                        nlb   : S.newline_before\n                };\n                if (!is_comment) {\n                        ret.comments_before = S.comments_before;\n                        S.comments_before = [];\n                }\n                S.newline_before = false;\n                return ret;\n        };\n\n        function skip_whitespace() {\n                while (HOP(WHITESPACE_CHARS, peek()))\n                        next();\n        };\n\n        function read_while(pred) {\n                var ret = \"\", ch = peek(), i = 0;\n                while (ch && pred(ch, i++)) {\n                        ret += next();\n                        ch = peek();\n                }\n                return ret;\n        };\n\n        function parse_error(err) {\n                js_error(err, S.tokline, S.tokcol, S.tokpos);\n        };\n\n        function read_num(prefix) {\n                var has_e = false, after_e = false, has_x = false, has_dot = prefix == \".\";\n                var num = read_while(function(ch, i){\n                        if (ch == \"x\" || ch == \"X\") {\n                                if (has_x) return false;\n                                return has_x = true;\n                        }\n                        if (!has_x && (ch == \"E\" || ch == \"e\")) {\n                                if (has_e) return false;\n                                return has_e = after_e = true;\n                        }\n                        if (ch == \"-\") {\n                                if (after_e || (i == 0 && !prefix)) return true;\n                                return false;\n                        }\n                        if (ch == \"+\") return after_e;\n                        after_e = false;\n                        if (ch == \".\") {\n                                if (!has_dot && !has_x)\n                                        return has_dot = true;\n                                return false;\n                        }\n                        return is_alphanumeric_char(ch);\n                });\n                if (prefix)\n                        num = prefix + num;\n                var valid = parse_js_number(num);\n                if (!isNaN(valid)) {\n                        return token(\"num\", valid);\n                } else {\n                        parse_error(\"Invalid syntax: \" + num);\n                }\n        };\n\n        function read_escaped_char() {\n                var ch = next(true);\n                switch (ch) {\n                    case \"n\" : return \"\\n\";\n                    case \"r\" : return \"\\r\";\n                    case \"t\" : return \"\\t\";\n                    case \"b\" : return \"\\b\";\n                    case \"v\" : return \"\\v\";\n                    case \"f\" : return \"\\f\";\n                    case \"0\" : return \"\\0\";\n                    case \"x\" : return String.fromCharCode(hex_bytes(2));\n                    case \"u\" : return String.fromCharCode(hex_bytes(4));\n                    default  : return ch;\n                }\n        };\n\n        function hex_bytes(n) {\n                var num = 0;\n                for (; n > 0; --n) {\n                        var digit = parseInt(next(true), 16);\n                        if (isNaN(digit))\n                                parse_error(\"Invalid hex-character pattern in string\");\n                        num = (num << 4) | digit;\n                }\n                return num;\n        };\n\n        function read_string() {\n                return with_eof_error(\"Unterminated string constant\", function(){\n                        var quote = next(), ret = \"\";\n                        for (;;) {\n                                var ch = next(true);\n                                if (ch == \"\\\\\") ch = read_escaped_char();\n                                else if (ch == quote) break;\n                                ret += ch;\n                        }\n                        return token(\"string\", ret);\n                });\n        };\n\n        function read_line_comment() {\n                next();\n                var i = find(\"\\n\"), ret;\n                if (i == -1) {\n                        ret = S.text.substr(S.pos);\n                        S.pos = S.text.length;\n                } else {\n                        ret = S.text.substring(S.pos, i);\n                        S.pos = i;\n                }\n                return token(\"comment1\", ret, true);\n        };\n\n        function read_multiline_comment() {\n                next();\n                return with_eof_error(\"Unterminated multiline comment\", function(){\n                        var i = find(\"*/\", true),\n                            text = S.text.substring(S.pos, i),\n                            tok = token(\"comment2\", text, true);\n                        S.pos = i + 2;\n                        S.line += text.split(\"\\n\").length - 1;\n                        S.newline_before = text.indexOf(\"\\n\") >= 0;\n\n                        // https://github.com/mishoo/UglifyJS/issues/#issue/100\n                        if (/^@cc_on/i.test(text)) {\n                                warn(\"WARNING: at line \" + S.line);\n                                warn(\"*** Found \\\"conditional comment\\\": \" + text);\n                                warn(\"*** UglifyJS DISCARDS ALL COMMENTS.  This means your code might no longer work properly in Internet Explorer.\");\n                        }\n\n                        return tok;\n                });\n        };\n\n        function read_name() {\n                var backslash = false, name = \"\", ch;\n                while ((ch = peek()) != null) {\n                        if (!backslash) {\n                                if (ch == \"\\\\\") backslash = true, next();\n                                else if (is_identifier_char(ch)) name += next();\n                                else break;\n                        }\n                        else {\n                                if (ch != \"u\") parse_error(\"Expecting UnicodeEscapeSequence -- uXXXX\");\n                                ch = read_escaped_char();\n                                if (!is_identifier_char(ch)) parse_error(\"Unicode char: \" + ch.charCodeAt(0) + \" is not valid in identifier\");\n                                name += ch;\n                                backslash = false;\n                        }\n                }\n                return name;\n        };\n\n        function read_regexp() {\n                return with_eof_error(\"Unterminated regular expression\", function(){\n                        var prev_backslash = false, regexp = \"\", ch, in_class = false;\n                        while ((ch = next(true))) if (prev_backslash) {\n                                regexp += \"\\\\\" + ch;\n                                prev_backslash = false;\n                        } else if (ch == \"[\") {\n                                in_class = true;\n                                regexp += ch;\n                        } else if (ch == \"]\" && in_class) {\n                                in_class = false;\n                                regexp += ch;\n                        } else if (ch == \"/\" && !in_class) {\n                                break;\n                        } else if (ch == \"\\\\\") {\n                                prev_backslash = true;\n                        } else {\n                                regexp += ch;\n                        }\n                        var mods = read_name();\n                        return token(\"regexp\", [ regexp, mods ]);\n                });\n        };\n\n        function read_operator(prefix) {\n                function grow(op) {\n                        if (!peek()) return op;\n                        var bigger = op + peek();\n                        if (HOP(OPERATORS, bigger)) {\n                                next();\n                                return grow(bigger);\n                        } else {\n                                return op;\n                        }\n                };\n                return token(\"operator\", grow(prefix || next()));\n        };\n\n        function handle_slash() {\n                next();\n                var regex_allowed = S.regex_allowed;\n                switch (peek()) {\n                    case \"/\":\n                        S.comments_before.push(read_line_comment());\n                        S.regex_allowed = regex_allowed;\n                        return next_token();\n                    case \"*\":\n                        S.comments_before.push(read_multiline_comment());\n                        S.regex_allowed = regex_allowed;\n                        return next_token();\n                }\n                return S.regex_allowed ? read_regexp() : read_operator(\"/\");\n        };\n\n        function handle_dot() {\n                next();\n                return is_digit(peek())\n                        ? read_num(\".\")\n                        : token(\"punc\", \".\");\n        };\n\n        function read_word() {\n                var word = read_name();\n                return !HOP(KEYWORDS, word)\n                        ? token(\"name\", word)\n                        : HOP(OPERATORS, word)\n                        ? token(\"operator\", word)\n                        : HOP(KEYWORDS_ATOM, word)\n                        ? token(\"atom\", word)\n                        : token(\"keyword\", word);\n        };\n\n        function with_eof_error(eof_error, cont) {\n                try {\n                        return cont();\n                } catch(ex) {\n                        if (ex === EX_EOF) parse_error(eof_error);\n                        else throw ex;\n                }\n        };\n\n        function next_token(force_regexp) {\n                if (force_regexp)\n                        return read_regexp();\n                skip_whitespace();\n                start_token();\n                var ch = peek();\n                if (!ch) return token(\"eof\");\n                if (is_digit(ch)) return read_num();\n                if (ch == '\"' || ch == \"'\") return read_string();\n                if (HOP(PUNC_CHARS, ch)) return token(\"punc\", next());\n                if (ch == \".\") return handle_dot();\n                if (ch == \"/\") return handle_slash();\n                if (HOP(OPERATOR_CHARS, ch)) return read_operator();\n                if (ch == \"\\\\\" || is_identifier_start(ch)) return read_word();\n                parse_error(\"Unexpected character '\" + ch + \"'\");\n        };\n\n        next_token.context = function(nc) {\n                if (nc) S = nc;\n                return S;\n        };\n\n        return next_token;\n\n};\n\n/* -----[ Parser (constants) ]----- */\n\nvar UNARY_PREFIX = array_to_hash([\n        \"typeof\",\n        \"void\",\n        \"delete\",\n        \"--\",\n        \"++\",\n        \"!\",\n        \"~\",\n        \"-\",\n        \"+\"\n]);\n\nvar UNARY_POSTFIX = array_to_hash([ \"--\", \"++\" ]);\n\nvar ASSIGNMENT = (function(a, ret, i){\n        while (i < a.length) {\n                ret[a[i]] = a[i].substr(0, a[i].length - 1);\n                i++;\n        }\n        return ret;\n})(\n        [\"+=\", \"-=\", \"/=\", \"*=\", \"%=\", \">>=\", \"<<=\", \"=\"\">>>=\", \"|=\", \"^=\", \"&=\"],\n        { \"=\": true },\n        0\n);\n\nvar PRECEDENCE = (function(a, ret){\n        for (var i = 0, n = 1; i < a.length; ++i, ++n) {\n                var b = a[i];\n                for (var j = 0; j < b.length; ++j) {\n                        ret[b[j]] = n;\n                }\n        }\n        return ret;\n})(\n        [\n                [\"||\"],\n                [\"&&\"],\n                [\"|\"],\n                [\"^\"],\n                [\"&\"],\n                [\"==\", \"===\", \"!=\", \"!==\"],\n                [\"<\", \"=\"\">\", \"<=\", \"=\"\">=\", \"in\", \"instanceof\"],\n                [\">>\", \"<<\", \"=\"\">>>\"],\n                [\"+\", \"-\"],\n                [\"*\", \"/\", \"%\"]\n        ],\n        {}\n);\n\nvar STATEMENTS_WITH_LABELS = array_to_hash([ \"for\", \"do\", \"while\", \"switch\" ]);\n\nvar ATOMIC_START_TOKEN = array_to_hash([ \"atom\", \"num\", \"string\", \"regexp\", \"name\" ]);\n\n/* -----[ Parser ]----- */\n\nfunction NodeWithToken(str, start, end) {\n        this.name = str;\n        this.start = start;\n        this.end = end;\n};\n\nNodeWithToken.prototype.toString = function() { return this.name; };\n\nfunction parse($TEXT, exigent_mode, embed_tokens) {\n\n        var S = {\n                input       : typeof $TEXT == \"string\" ? tokenizer($TEXT, true) : $TEXT,\n                token       : null,\n                prev        : null,\n                peeked      : null,\n                in_function : 0,\n                in_loop     : 0,\n                labels      : []\n        };\n\n        S.token = next();\n\n        function is(type, value) {\n                return is_token(S.token, type, value);\n        };\n\n        function peek() { return S.peeked || (S.peeked = S.input()); };\n\n        function next() {\n                S.prev = S.token;\n                if (S.peeked) {\n                        S.token = S.peeked;\n                        S.peeked = null;\n                } else {\n                        S.token = S.input();\n                }\n                return S.token;\n        };\n\n        function prev() {\n                return S.prev;\n        };\n\n        function croak(msg, line, col, pos) {\n                var ctx = S.input.context();\n                js_error(msg,\n                         line != null ? line : ctx.tokline,\n                         col != null ? col : ctx.tokcol,\n                         pos != null ? pos : ctx.tokpos);\n        };\n\n        function token_error(token, msg) {\n                croak(msg, token.line, token.col);\n        };\n\n        function unexpected(token) {\n                if (token == null)\n                        token = S.token;\n                token_error(token, \"Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n        };\n\n        function expect_token(type, val) {\n                if (is(type, val)) {\n                        return next();\n                }\n                token_error(S.token, \"Unexpected token \" + S.token.type + \", expected \" + type);\n        };\n\n        function expect(punc) { return expect_token(\"punc\", punc); };\n\n        function can_insert_semicolon() {\n                return !exigent_mode && (\n                        S.token.nlb || is(\"eof\") || is(\"punc\", \"}\")\n                );\n        };\n\n        function semicolon() {\n                if (is(\"punc\", \";\")) next();\n                else if (!can_insert_semicolon()) unexpected();\n        };\n\n        function as() {\n                return slice(arguments);\n        };\n\n        function parenthesised() {\n                expect(\"(\");\n                var ex = expression();\n                expect(\")\");\n                return ex;\n        };\n\n        function add_tokens(str, start, end) {\n                return str instanceof NodeWithToken ? str : new NodeWithToken(str, start, end);\n        };\n\n        var statement = embed_tokens ? function() {\n                var start = S.token;\n                var ast = $statement.apply(this, arguments);\n                ast[0] = add_tokens(ast[0], start, prev());\n                return ast;\n        } : $statement;\n\n        function $statement() {\n                if (is(\"operator\", \"/\")) {\n                        S.peeked = null;\n                        S.token = S.input(true); // force regexp\n                }\n                switch (S.token.type) {\n                    case \"num\":\n                    case \"string\":\n                    case \"regexp\":\n                    case \"operator\":\n                    case \"atom\":\n                        return simple_statement();\n\n                    case \"name\":\n                        return is_token(peek(), \"punc\", \":\")\n                                ? labeled_statement(prog1(S.token.value, next, next))\n                                : simple_statement();\n\n                    case \"punc\":\n                        switch (S.token.value) {\n                            case \"{\":\n                                return as(\"block\", block_());\n                            case \"[\":\n                            case \"(\":\n                                return simple_statement();\n                            case \";\":\n                                next();\n                                return as(\"block\");\n                            default:\n                                unexpected();\n                        }\n\n                    case \"keyword\":\n                        switch (prog1(S.token.value, next)) {\n                            case \"break\":\n                                return break_cont(\"break\");\n\n                            case \"continue\":\n                                return break_cont(\"continue\");\n\n                            case \"debugger\":\n                                semicolon();\n                                return as(\"debugger\");\n\n                            case \"do\":\n                                return (function(body){\n                                        expect_token(\"keyword\", \"while\");\n                                        return as(\"do\", prog1(parenthesised, semicolon), body);\n                                })(in_loop(statement));\n\n                            case \"for\":\n                                return for_();\n\n                            case \"function\":\n                                return function_(true);\n\n                            case \"if\":\n                                return if_();\n\n                            case \"return\":\n                                if (S.in_function == 0)\n                                        croak(\"'return' outside of function\");\n                                return as(\"return\",\n                                          is(\"punc\", \";\")\n                                          ? (next(), null)\n                                          : can_insert_semicolon()\n                                          ? null\n                                          : prog1(expression, semicolon));\n\n                            case \"switch\":\n                                return as(\"switch\", parenthesised(), switch_block_());\n\n                            case \"throw\":\n                                return as(\"throw\", prog1(expression, semicolon));\n\n                            case \"try\":\n                                return try_();\n\n                            case \"var\":\n                                return prog1(var_, semicolon);\n\n                            case \"const\":\n                                return prog1(const_, semicolon);\n\n                            case \"while\":\n                                return as(\"while\", parenthesised(), in_loop(statement));\n\n                            case \"with\":\n                                return as(\"with\", parenthesised(), statement());\n\n                            default:\n                                unexpected();\n                        }\n                }\n        };\n\n        function labeled_statement(label) {\n                S.labels.push(label);\n                var start = S.token, stat = statement();\n                if (exigent_mode && !HOP(STATEMENTS_WITH_LABELS, stat[0]))\n                        unexpected(start);\n                S.labels.pop();\n                return as(\"label\", label, stat);\n        };\n\n        function simple_statement() {\n                return as(\"stat\", prog1(expression, semicolon));\n        };\n\n        function break_cont(type) {\n                var name = is(\"name\") ? S.token.value : null;\n                if (name != null) {\n                        next();\n                        if (!member(name, S.labels))\n                                croak(\"Label \" + name + \" without matching loop or statement\");\n                }\n                else if (S.in_loop == 0)\n                        croak(type + \" not inside a loop or switch\");\n                semicolon();\n                return as(type, name);\n        };\n\n        function for_() {\n                expect(\"(\");\n                var init = null;\n                if (!is(\"punc\", \";\")) {\n                        init = is(\"keyword\", \"var\")\n                                ? (next(), var_(true))\n                                : expression(true, true);\n                        if (is(\"operator\", \"in\"))\n                                return for_in(init);\n                }\n                return regular_for(init);\n        };\n\n        function regular_for(init) {\n                expect(\";\");\n                var test = is(\"punc\", \";\") ? null : expression();\n                expect(\";\");\n                var step = is(\"punc\", \")\") ? null : expression();\n                expect(\")\");\n                return as(\"for\", init, test, step, in_loop(statement));\n        };\n\n        function for_in(init) {\n                var lhs = init[0] == \"var\" ? as(\"name\", init[1][0]) : init;\n                next();\n                var obj = expression();\n                expect(\")\");\n                return as(\"for-in\", init, lhs, obj, in_loop(statement));\n        };\n\n        var function_ = embed_tokens ? function() {\n                var start = prev();\n                var ast = $function_.apply(this, arguments);\n                ast[0] = add_tokens(ast[0], start, prev());\n                return ast;\n        } : $function_;\n\n        function $function_(in_statement) {\n                var name = is(\"name\") ? prog1(S.token.value, next) : null;\n                if (in_statement && !name)\n                        unexpected();\n                expect(\"(\");\n                return as(in_statement ? \"defun\" : \"function\",\n                          name,\n                          // arguments\n                          (function(first, a){\n                                  while (!is(\"punc\", \")\")) {\n                                          if (first) first = false; else expect(\",\");\n                                          if (!is(\"name\")) unexpected();\n                                          a.push(S.token.value);\n                                          next();\n                                  }\n                                  next();\n                                  return a;\n                          })(true, []),\n                          // body\n                          (function(){\n                                  ++S.in_function;\n                                  var loop = S.in_loop;\n                                  S.in_loop = 0;\n                                  var a = block_();\n                                  --S.in_function;\n                                  S.in_loop = loop;\n                                  return a;\n                          })());\n        };\n\n        function if_() {\n                var cond = parenthesised(), body = statement(), belse;\n                if (is(\"keyword\", \"else\")) {\n                        next();\n                        belse = statement();\n                }\n                return as(\"if\", cond, body, belse);\n        };\n\n        function block_() {\n                expect(\"{\");\n                var a = [];\n                while (!is(\"punc\", \"}\")) {\n                        if (is(\"eof\")) unexpected();\n                        a.push(statement());\n                }\n                next();\n                return a;\n        };\n\n        var switch_block_ = curry(in_loop, function(){\n                expect(\"{\");\n                var a = [], cur = null;\n                while (!is(\"punc\", \"}\")) {\n                        if (is(\"eof\")) unexpected();\n                        if (is(\"keyword\", \"case\")) {\n                                next();\n                                cur = [];\n                                a.push([ expression(), cur ]);\n                                expect(\":\");\n                        }\n                        else if (is(\"keyword\", \"default\")) {\n                                next();\n                                expect(\":\");\n                                cur = [];\n                                a.push([ null, cur ]);\n                        }\n                        else {\n                                if (!cur) unexpected();\n                                cur.push(statement());\n                        }\n                }\n                next();\n                return a;\n        });\n\n        function try_() {\n                var body = block_(), bcatch, bfinally;\n                if (is(\"keyword\", \"catch\")) {\n                        next();\n                        expect(\"(\");\n                        if (!is(\"name\"))\n                                croak(\"Name expected\");\n                        var name = S.token.value;\n                        next();\n                        expect(\")\");\n                        bcatch = [ name, block_() ];\n                }\n                if (is(\"keyword\", \"finally\")) {\n                        next();\n                        bfinally = block_();\n                }\n                if (!bcatch && !bfinally)\n                        croak(\"Missing catch/finally blocks\");\n                return as(\"try\", body, bcatch, bfinally);\n        };\n\n        function vardefs(no_in) {\n                var a = [];\n                for (;;) {\n                        if (!is(\"name\"))\n                                unexpected();\n                        var name = S.token.value;\n                        next();\n                        if (is(\"operator\", \"=\")) {\n                                next();\n                                a.push([ name, expression(false, no_in) ]);\n                        } else {\n                                a.push([ name ]);\n                        }\n                        if (!is(\"punc\", \",\"))\n                                break;\n                        next();\n                }\n                return a;\n        };\n\n        function var_(no_in) {\n                return as(\"var\", vardefs(no_in));\n        };\n\n        function const_() {\n                return as(\"const\", vardefs());\n        };\n\n        function new_() {\n                var newexp = expr_atom(false), args;\n                if (is(\"punc\", \"(\")) {\n                        next();\n                        args = expr_list(\")\");\n                } else {\n                        args = [];\n                }\n                return subscripts(as(\"new\", newexp, args), true);\n        };\n\n        function expr_atom(allow_calls) {\n                if (is(\"operator\", \"new\")) {\n                        next();\n                        return new_();\n                }\n                if (is(\"operator\") && HOP(UNARY_PREFIX, S.token.value)) {\n                        return make_unary(\"unary-prefix\",\n                                          prog1(S.token.value, next),\n                                          expr_atom(allow_calls));\n                }\n                if (is(\"punc\")) {\n                        switch (S.token.value) {\n                            case \"(\":\n                                next();\n                                return subscripts(prog1(expression, curry(expect, \")\")), allow_calls);\n                            case \"[\":\n                                next();\n                                return subscripts(array_(), allow_calls);\n                            case \"{\":\n                                next();\n                                return subscripts(object_(), allow_calls);\n                        }\n                        unexpected();\n                }\n                if (is(\"keyword\", \"function\")) {\n                        next();\n                        return subscripts(function_(false), allow_calls);\n                }\n                if (HOP(ATOMIC_START_TOKEN, S.token.type)) {\n                        var atom = S.token.type == \"regexp\"\n                                ? as(\"regexp\", S.token.value[0], S.token.value[1])\n                                : as(S.token.type, S.token.value);\n                        return subscripts(prog1(atom, next), allow_calls);\n                }\n                unexpected();\n        };\n\n        function expr_list(closing, allow_trailing_comma, allow_empty) {\n                var first = true, a = [];\n                while (!is(\"punc\", closing)) {\n                        if (first) first = false; else expect(\",\");\n                        if (allow_trailing_comma && is(\"punc\", closing)) break;\n                        if (is(\"punc\", \",\") && allow_empty) {\n                                a.push([ \"atom\", \"undefined\" ]);\n                        } else {\n                                a.push(expression(false));\n                        }\n                }\n                next();\n                return a;\n        };\n\n        function array_() {\n                return as(\"array\", expr_list(\"]\", !exigent_mode, true));\n        };\n\n        function object_() {\n                var first = true, a = [];\n                while (!is(\"punc\", \"}\")) {\n                        if (first) first = false; else expect(\",\");\n                        if (!exigent_mode && is(\"punc\", \"}\"))\n                                // allow trailing comma\n                                break;\n                        var type = S.token.type;\n                        var name = as_property_name();\n                        if (type == \"name\" && (name == \"get\" || name == \"set\") && !is(\"punc\", \":\")) {\n                                a.push([ as_name(), function_(false), name ]);\n                        } else {\n                                expect(\":\");\n                                a.push([ name, expression(false) ]);\n                        }\n                }\n                next();\n                return as(\"object\", a);\n        };\n\n        function as_property_name() {\n                switch (S.token.type) {\n                    case \"num\":\n                    case \"string\":\n                        return prog1(S.token.value, next);\n                }\n                return as_name();\n        };\n\n        function as_name() {\n                switch (S.token.type) {\n                    case \"name\":\n                    case \"operator\":\n                    case \"keyword\":\n                    case \"atom\":\n                        return prog1(S.token.value, next);\n                    default:\n                        unexpected();\n                }\n        };\n\n        function subscripts(expr, allow_calls) {\n                if (is(\"punc\", \".\")) {\n                        next();\n                        return subscripts(as(\"dot\", expr, as_name()), allow_calls);\n                }\n                if (is(\"punc\", \"[\")) {\n                        next();\n                        return subscripts(as(\"sub\", expr, prog1(expression, curry(expect, \"]\"))), allow_calls);\n                }\n                if (allow_calls && is(\"punc\", \"(\")) {\n                        next();\n                        return subscripts(as(\"call\", expr, expr_list(\")\")), true);\n                }\n                if (allow_calls && is(\"operator\") && HOP(UNARY_POSTFIX, S.token.value)) {\n                        return prog1(curry(make_unary, \"unary-postfix\", S.token.value, expr),\n                                     next);\n                }\n                return expr;\n        };\n\n        function make_unary(tag, op, expr) {\n                if ((op == \"++\" || op == \"--\") && !is_assignable(expr))\n                        croak(\"Invalid use of \" + op + \" operator\");\n                return as(tag, op, expr);\n        };\n\n        function expr_op(left, min_prec, no_in) {\n                var op = is(\"operator\") ? S.token.value : null;\n                if (op && op == \"in\" && no_in) op = null;\n                var prec = op != null ? PRECEDENCE[op] : null;\n                if (prec != null && prec > min_prec) {\n                        next();\n                        var right = expr_op(expr_atom(true), prec, no_in);\n                        return expr_op(as(\"binary\", op, left, right), min_prec, no_in);\n                }\n                return left;\n        };\n\n        function expr_ops(no_in) {\n                return expr_op(expr_atom(true), 0, no_in);\n        };\n\n        function maybe_conditional(no_in) {\n                var expr = expr_ops(no_in);\n                if (is(\"operator\", \"?\")) {\n                        next();\n                        var yes = expression(false);\n                        expect(\":\");\n                        return as(\"conditional\", expr, yes, expression(false, no_in));\n                }\n                return expr;\n        };\n\n        function is_assignable(expr) {\n                if (!exigent_mode) return true;\n                switch (expr[0]) {\n                    case \"dot\":\n                    case \"sub\":\n                    case \"new\":\n                    case \"call\":\n                        return true;\n                    case \"name\":\n                        return expr[1] != \"this\";\n                }\n        };\n\n        function maybe_assign(no_in) {\n                var left = maybe_conditional(no_in), val = S.token.value;\n                if (is(\"operator\") && HOP(ASSIGNMENT, val)) {\n                        if (is_assignable(left)) {\n                                next();\n                                return as(\"assign\", ASSIGNMENT[val], left, maybe_assign(no_in));\n                        }\n                        croak(\"Invalid assignment\");\n                }\n                return left;\n        };\n\n        function expression(commas, no_in) {\n                if (arguments.length == 0)\n                        commas = true;\n                var expr = maybe_assign(no_in);\n                if (commas && is(\"punc\", \",\")) {\n                        next();\n                        return as(\"seq\", expr, expression(true, no_in));\n                }\n                return expr;\n        };\n\n        function in_loop(cont) {\n                try {\n                        ++S.in_loop;\n                        return cont();\n                } finally {\n                        --S.in_loop;\n                }\n        };\n\n        return as(\"toplevel\", (function(a){\n                while (!is(\"eof\"))\n                        a.push(statement());\n                return a;\n        })([]));\n\n};\n\n/* -----[ Utilities ]----- */\n\nfunction curry(f) {\n        var args = slice(arguments, 1);\n        return function() { return f.apply(this, args.concat(slice(arguments))); };\n};\n\nfunction prog1(ret) {\n        if (ret instanceof Function)\n                ret = ret();\n        for (var i = 1, n = arguments.length; --n > 0; ++i)\n                arguments[i]();\n        return ret;\n};\n\nfunction array_to_hash(a) {\n        var ret = {};\n        for (var i = 0; i < a.length; ++i)\n                ret[a[i]] = true;\n        return ret;\n};\n\nfunction slice(a, start) {\n        return Array.prototype.slice.call(a, start == null ? 0 : start);\n};\n\nfunction characters(str) {\n        return str.split(\"\");\n};\n\nfunction member(name, array) {\n        for (var i = array.length; --i >= 0;)\n                if (array[i] === name)\n                        return true;\n        return false;\n};\n\nfunction HOP(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\nvar warn = function() {};\n\n/* -----[ Exports ]----- */\n\nvar init = function (root) {\n    if (root.modules[\"parser\"]) {\n        return;\n    }\n    \n    root.parse = parse;\n    \n    root.modules[\"parser\"] = true;\n}\n\nvar isCommonJS = (typeof require !== \"undefined\" && typeof module !== \"undefined\" && module.exports);\nvar isAmd = (typeof define !== \"undefined\" && define.amd);\n\nif (isCommonJS) {\n    module.exports.init = init;\n} else if (isAmd) {\n    define(\"jscex-parser\", function () {\n        return { init: init };\n    });\n} else {\n    if (typeof Jscex === \"undefined\") {\n        throw new Error('Missing root object, please load \"jscex\" module first.');\n    }\n    \n    init(Jscex);\n}\n\n/*\nscope.tokenizer = tokenizer;\nscope.parse = parse;\nscope.slice = slice;\nscope.curry = curry;\nscope.member = member;\nscope.array_to_hash = array_to_hash;\nscope.PRECEDENCE = PRECEDENCE;\nscope.KEYWORDS_ATOM = KEYWORDS_ATOM;\nscope.RESERVED_WORDS = RESERVED_WORDS;\nscope.KEYWORDS = KEYWORDS;\nscope.ATOMIC_START_TOKEN = ATOMIC_START_TOKEN;\nscope.OPERATORS = OPERATORS;\nscope.is_alphanumeric_char = is_alphanumeric_char;\nscope.set_logger = function (logger) {\n    warn = logger;\n};\n*/\n\n})();</\",></=\",></\",></=\",></zwj></=></=\",></=\",></\",></\",></mihai.bazon@gmail.com></mihai.bazon@gmail.com>","categories":[],"tags":[]},{"title":"","url":"https://blog.hyhcoder.top/css/mylove/jquery.min.js","content":"/*! jQuery v1.7.1 jquery.com | jquery.org/license */\n(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cv(a){if(!ck[a]){var b=c.body,d=f(\"<\"+a+\">\").appendTo(b),e=d.css(\"display\");d.remove();if(e===\"none\"||e===\"\"){cl||(cl=c.createElement(\"iframe\"),cl.frameBorder=cl.width=cl.height=0),b.appendChild(cl);if(!cm||!cl.createElement)cm=(cl.contentWindow||cl.contentDocument).document,cm.write((c.compatMode===\"CSS1Compat\"?\"<!doctype html>\":\"\")+\"<html><body>\"),cm.close();d=cm.createElement(a),cm.body.appendChild(d),e=f.css(d,\"display\"),b.removeChild(cl)}ck[a]=e}return ck[a]}function cu(a,b){var c={};f.each(cq.concat.apply([],cq.slice(0,b)),function(){c[this]=a});return c}function ct(){cr=b}function cs(){setTimeout(ct,0);return cr=f.now()}function cj(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}function ci(){try{return new a.XMLHttpRequest}catch(b){}}function cc(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in=\"\" a.converters)typeof=\"\" h=\"=\"string\"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k===\"*\")k=l;else\" if(l!=\"=\"*\"&&l!==k){m=l+\"\" \"+k,n=\"e[m]||e[\"*\" \"+k];if(!n){p=\"b;for(o\" e){j=\"o.split(\"\" \");if(j[0]=\"==l||j[0]===\"*\"){p=e[j[1]+\"\" \"+k];if(p){o=\"e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error(\"No\" conversion=\"\" from=\"\" \"+m.replace(\"=\"\" \",\"=\"\" to=\"\" \")),n!=\"=!0&&(c=n?n(c):p(o(c)))}}return\" c}function=\"\" cb(a,c,d){var=\"\" e=\"a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i\" g)i=\"\" d&&(c[g[i]]=\"d[i]);while(f[0]===\"*\")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader(\"content-type\"));if(h)for(i\" e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in=\"\" d)j=\"f[0];else{for(i\" d){if(!f[0]||a.converters[i+\"=\"\" \"+f[0]]){j=\"i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return\" d[j]}}function=\"\" ca(a,b,c,d){if(f.isarray(b))f.each(b,function(b,e){c||be.test(a)?d(a,e):ca(a+\"[\"+(typeof=\"\" if(!c&&b!=\"null&&typeof\" b=\"=\"object\")for(var\" b)ca(a+\"[\"+e+\"]\",b[e],c,d);else=\"\" d(a,b)}function=\"\" b_(a,c){var=\"\" d,e,g=\"f.ajaxSettings.flatOptions||{};for(d\" c)c[d]!=\"=b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function\" b$(a,c,d,e,f,g){f=\"f||c.dataTypes[0],g=g||{},g[f]=!0;var\" l=\"=\"string\"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=b$(a,c,d,e,l,g)));(k||!l)&&!g[\"*\"]&&(l=b$(a,c,d,e,\"*\",g));return\" l}function=\"\" bz(a){return=\"\" function(b,c){typeof=\"\" b!=\"string\" &&(c=\"b,b=\"*\");if(f.isFunction(c)){var\" d=\"b.toLowerCase().split(bP),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\\+/.test(h),j&&(h=h.substr(1)||\"*\"),i=a[h]=a[h]||[],i[j?\"unshift\":\"push\"](c)}}}function\" bc(a,b,c){var=\"\">0){if(c!==\"border\")for(;g<h;g++)c||(d-=parsefloat(f.css(a,\"padding\"+e[g]))||0),c===\"margin\"?d+=parsefloat(f.css(a,c+e[g]))||0:d-=parsefloat(f.css(a,\"border\"+e[g]+\"width\"))||0;return d+\"px\"}d=\"bz(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0;if(c)for(;g<h;g++)d+=parseFloat(f.css(a,\"padding\"+e[g]))||0,c!==\"padding\"&&(d+=parseFloat(f.css(a,\"border\"+e[g]+\"Width\"))||0),c===\"margin\"&&(d+=parseFloat(f.css(a,c+e[g]))||0);return\" d+\"px\"}function=\"\" bp(a,b){b.src?f.ajax({url:b.src,async:!1,datatype:\"script\"}):f.globaleval((b.text||b.textcontent||b.innerhtml||\"\").replace(bf,\"=\"\" *$0*=\"\" \")),b.parentnode&&b.parentnode.removechild(b)}function=\"\" bo(a){var=\"\" b=\"c.createElement(\"div\");bh.appendChild(b),b.innerHTML=a.outerHTML;return\" b.firstchild}function=\"\" bn(a){var=\"\" a.getelementsbytagname!=\"undefined\" &&f.grep(a.getelementsbytagname(\"input\"),bm)}function=\"\" bm(a){if(a.type=\"==\"checkbox\"||a.type===\"radio\")a.defaultChecked=a.checked}function\" bl(a){return=\"\" typeof=\"\" ?a.getelementsbytagname(\"*\"):typeof=\"\" a.queryselectorall!=\"undefined\" ?a.queryselectorall(\"*\"):[]}function=\"\" bk(a,b){var=\"\" c;if(b.nodetype=\"==1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c===\"object\")b.outerHTML=a.outerHTML;else\" if(c!=\"=\"input\"||a.type!==\"checkbox\"&&a.type!==\"radio\"){if(c===\"option\")b.selected=a.defaultSelected;else\" if(c=\"==\"input\"||c===\"textarea\")b.defaultValue=a.defaultValue}else\" a.checked&&(b.defaultchecked=\"b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function\" bj(a,b){if(b.nodetype=\"==1&&!!f.hasData(a)){var\" c,d,e,g=\"f._data(a),h=f._data(b,g),i=g.events;if(i){delete\" h.handle,h.events=\"{};for(c\" in=\"\" i)for(d=\"0,e=i[c].length;d<e;d++)f.event.add(b,c+(i[c][d].namespace?\".\":\"\")+i[c][d].namespace,i[c][d],i[c][d].data)}h.data&&(h.data=f.extend({},h.data))}}function\" bi(a,b){return=\"\" f.nodename(a,\"table\")?a.getelementsbytagname(\"tbody\")[0]||a.appendchild(a.ownerdocument.createelement(\"tbody\")):a}function=\"\" u(a){var=\"\" c}function=\"\" t(a,b,c){b=\"b||0;if(f.isFunction(b))return\" f.grep(a,function(a,d){var=\"\" e=\"!!b.call(a,d,a);return\" f.grep(a,function(a,d){return=\"\" a=\"==b===c});if(typeof\" d=\"f.grep(a,function(a){return\" a.nodetype=\"==1});if(O.test(b))return\" f.filter(b,d,!c);b=\"f.filter(b,d)}return\" f.inarray(a,b)=\"\">=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+\"defer\",e=b+\"queue\",g=b+\"mark\",h=f._data(a,d);h&&(c===\"queue\"||!f._data(a,e))&&(c===\"mark\"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b===\"data\"&&f.isEmptyObject(a[b]))continue;if(b!==\"toJSON\")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e=\"data-\"+c.replace(k,\"-$1\").toLowerCase();d=a.getAttribute(e);if(typeof d==\"string\"){try{d=d===\"true\"?!0:d===\"false\"?!1:d===\"null\"?null:f.isNumeric(d)?parseFloat(d):j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var=\"\" c=\"a.document,d=a.navigator,e=a.location,f=function(){function\" j(){if(!e.isready){try{c.documentelement.doscroll(\"left\")}catch(a){settimeout(j,1);return}e.ready()}}var=\"\" e=\"function(a,b){return\" new=\"\" e.fn.init(a,b,h)},f=\"a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\\w\\W]+\">)[^>]*$|#([\\w\\-]*)$)/,j=/\\S/,k=/^\\s+/,l=/\\s+$/,m=/^<(\\w+)\\s*\\ ?=\"\">(?:<\\ \\1=\"\">)?$/,n=/^[\\],:{}\\s]*$/,o=/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,q=/(?:^|:|,)(?:\\s*\\[)+/g,r=/(webkit)[ \\/]([\\w.]+)/,s=/(opera)(?:.*version)?[ \\/]([\\w.]+)/,t=/(msie) ([\\w.]+)/,u=/(mozilla)(?:.*? rv:([\\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+\"\").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a===\"body\"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a==\"string\"){a.charAt(0)!==\"<\"||a.charat(a.length-1)!==\">\"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof=\"\" e?d[0]:d,k=\"d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return\" e.merge(this,a)}h=\"c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return\" f.find(a);this.length=\"1,this[0]=h}this.context=c,this.selector=a;return\" this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isfunction(a))return=\"\" f.ready(a);a.selector!=\"=b&&(this.selector=a.selector,this.context=a.context);return\" e.makearray(a,this)},selector:\"\",jquery:\"1.7.1\",length:0,size:function(){return=\"\" this.length},toarray:function(){return=\"\" f.call(this,0)},get:function(a){return=\"\" a=\"=null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var\" d=\"this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b===\"find\"?d.selector=this.selector+(this.selector?\"\" \":\"\")+c:b&&(d.selector=\"this.selector+\".\"+b+\"(\"+c+\")\");return\" d},each:function(a,b){return=\"\" e.each(this,a,b)},ready:function(a){e.bindready(),a.add(a);return=\"\" this},eq:function(a){a=\"+a;return\" this.eq(0)},last:function(){return=\"\" this.eq(-1)},slice:function(){return=\"\" this.pushstack(f.apply(this,arguments),\"slice\",f.call(arguments).join(\",\"))},map:function(a){return=\"\" this.pushstack(e.map(this,function(b,c){return=\"\" a.call(b,c,b)}))},end:function(){return=\"\" this.prevobject||this.constructor(null)},push:e,sort:[].sort,splice:[].splice},e.fn.init.prototype=\"e.fn,e.extend=e.fn.extend=function(){var\" a,c,d,f,g,h,i=\"arguments[0]||{},j=1,k=arguments.length,l=!1;typeof\" i=\"=\"boolean\"&&(l=i,i=arguments[1]||{},j=2),typeof\" i!=\"object\" &&!e.isfunction(i)&&(i=\"{}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c\" in=\"\" a){d=\"i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return\" i},e.extend({noconflict:function(b){a.$=\"==e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return\" e},isready:!1,readywait:1,holdready:function(a){a?e.readywait++:e.ready(!0)},ready:function(a){if(a=\"==!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return\" settimeout(e.ready,1);e.isready=\"!0;if(a!==!0&&--e.readyWait\">0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger(\"ready\").off(\"ready\")}},bindReady:function(){if(!A){A=e.Callbacks(\"once memory\");if(c.readyState===\"complete\")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener(\"DOMContentLoaded\",B,!1),a.addEventListener(\"load\",e.ready,!1);else if(c.attachEvent){c.attachEvent(\"onreadystatechange\",B),a.attachEvent(\"onload\",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)===\"function\"},isArray:Array.isArray||function(a){return e.type(a)===\"array\"},isWindow:function(a){return a&&typeof a==\"object\"&&\"setInterval\"in a},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||\"object\"},isPlainObject:function(a){if(!a||e.type(a)!==\"object\"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,\"constructor\")&&!D.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!=\"string\"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,\"@\").replace(p,\"]\").replace(q,\"\")))return(new Function(\"return \"+b))();e.error(\"Invalid JSON: \"+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,\"text/xml\")):(d=new ActiveXObject(\"Microsoft.XMLDOM\"),d.async=\"false\",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName(\"parsererror\").length)&&e.error(\"Invalid XML: \"+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,\"ms-\").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f=\"\" in=\"\" a)if(c.call(a[f],f,a[f])=\"==!1)break}else\" for(;g<h;)if(c.call(a[g],g,a[g++])=\"==!1)break;return\" a},trim:g?function(a){return=\"\" a=\"=null?\"\":G.call(a)}:function(a){return\" c=\"b||[];if(a!=null){var\" d=\"e.type(a);a.length==null||d===\"string\"||d===\"function\"||d===\"regexp\"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return\" c},inarray:function(a,b,c){var=\"\" d;if(b){if(h)return=\"\" h.call(b,a,c);d=\"b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c\" b&&b[c]=\"==a)return\" c}return-1},merge:function(a,c){var=\"\" c.length=\"=\"number\")for(var\" f=\"c.length;e<f;e++)a[d++]=c[e];else\" while(c[e]!=\"=b)a[d++]=c[e++];a.length=d;return\" a},grep:function(a,b,c){var=\"\" d},map:function(a,c,d){var=\"\" f,g,h=\"[],i=0,j=a.length,k=a\" instanceof=\"\" e||j!=\"=b&&typeof\" j=\"=\"number\"&&(j\">0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g=\"\" in=\"\" a)f=\"c(a[g],g,d),f!=null&&(h[h.length]=f);return\" h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof=\"\" c=\"=\"string\"){var\" d=\"a[c];c=a,a=d}if(!e.isFunction(a))return\" b;var=\"\" f=\"F.call(arguments,2),g=function(){return\" a.apply(c,f.concat(f.call(arguments)))};g.guid=\"a.guid=a.guid||g.guid||e.guid++;return\" g},access:function(a,c,d,f,g,h){var=\"\" i=\"a.length;if(typeof\" j=\"\" c)e.access(a,j,c[j],f,g,d);return=\"\" a}if(d!=\"=b){f=!h&&f&&e.isFunction(d);for(var\" k=\"0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return\" a}return=\"\" i?g(a[0],c):b},now:function(){return(new=\"\" date).gettime()},uamatch:function(a){a=\"a.toLowerCase();var\" b=\"r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf(\"compatible\")<0&&u.exec(a)||[];return{browser:b[1]||\"\",version:b[2]||\"0\"}},sub:function(){function\" a(b,c){return=\"\" new=\"\" a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=\"this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f\" instanceof=\"\" e&&!(f=\"\" a)&&(f=\"a(f));return\" e.fn.init.call(this,d,f,b)},a.fn.init.prototype=\"a.fn;var\" a},browser:{}}),e.each(\"boolean=\"\" number=\"\" string=\"\" function=\"\" array=\"\" date=\"\" regexp=\"\" object\".split(\"=\"\" \"),function(a,b){i[\"[object=\"\" \"+b+\"]\"]=\"b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(\" \")&&(k=/^[\\s\\xA0]+/,l=/[\\s\\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener(\"DOMContentLoaded\",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState===\"complete\"&&(c.detachEvent(\"onreadystatechange\",B),e.ready())});return\" e}(),g=\"{};f.Callbacks=function(a){a=a?g[a]||h(a):{};var\" d,e,g,h,i;for(d=\"0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h===\"array\"?m(g):h===\"function\"&&(!a.unique||!o.has(g))&&c.push(g)},n=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,l=j||0,j=0,k=c.length;for(;c&&l<k;l++)if(c[l].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}i=!1,c&&(a.once?e===!0?o.disable():c=[]:d&&d.length&&(e=d.shift(),o.fireWith(e[0],e[1])))},o={add:function(){if(c){var\" a=\"c.length;m(arguments),i?k=c.length:e&&e!==!0&&(j=a,n(e[0],e[1]))}return\" this},remove:function(){if(c){var=\"\" this},has:function(a){if(c){var=\"\" this},disable:function(){c=\"d=e=b;return\" this},disabled:function(){return!c},lock:function(){d=\"b,(!e||e===!0)&&o.disable();return\" this},locked:function(){return!d},firewith:function(b,c){d&&(i?a.once||d.push([b,c]):(!a.once||!e)&&n(b,c));return=\"\" this},fire:function(){o.firewith(this,arguments);return=\"\" this},fired:function(){return!!e}};return=\"\" o};var=\"\" memory\"),c=\"f.Callbacks(\"once\" memory\"),d=\"f.Callbacks(\"memory\"),e=\"pending\",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return\" e},isresolved:b.fired,isrejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return=\"\" this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return=\"\" this},pipe:function(a,b,c){return=\"\" f.deferred(function(d){f.each({done:[a,\"resolve\"],fail:[b,\"reject\"],progress:[c,\"notify\"]},function(a,b){var=\"\" for(var=\"\" h)a[b]=\"h[b];return\" a}},i=\"h.promise({}),j;for(j\" g)i[j]=\"g[j].fire,i[j+\"With\"]=g[j].fireWith;i.done(function(){e=\"resolved\"},c.disable,d.lock).fail(function(){e=\"rejected\"},b.disable,d.lock),a&&a.call(i,i);return\" i},when:function(a){function=\"\" m(a){return=\"\" function(b){e[a]=\"arguments.length\">1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isfunction(a.promise)?a:f.deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isfunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolvewith(j,b)}else j!=\"=a&&j.resolveWith(j,d?[a]:[]);return\" k}}),f.support=\"function(){var\" b,d,e,g,h,i,j,k,l,m,n,o,p,q=\"c.createElement(\"div\"),r=c.documentElement;q.setAttribute(\"className\",\"t\"),q.innerHTML=\"\" <link=\"\"><table></table><a href=\"/a\" style=\"top:1px;float:left;opacity:.55;\">a</a><input type=\"checkbox\">\",d=q.getElementsByTagName(\"*\"),e=q.getElementsByTagName(\"a\")[0];if(!d||!d.length||!e)return{};g=c.createElement(\"select\"),h=g.appendChild(c.createElement(\"option\")),i=q.getElementsByTagName(\"input\")[0],b={leadingWhitespace:q.firstChild.nodeType===3,tbody:!q.getElementsByTagName(\"tbody\").length,htmlSerialize:!!q.getElementsByTagName(\"link\").length,style:/top/.test(e.getAttribute(\"style\")),hrefNormalized:e.getAttribute(\"href\")===\"/a\",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value===\"on\",optSelected:h.selected,getSetAttribute:q.className!==\"t\",enctype:!!c.createElement(\"form\").enctype,html5Clone:c.createElement(\"nav\").cloneNode(!0).outerHTML!==\"<:nav></:nav>\",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete q.test}catch(s){b.deleteExpando=!1}!q.addEventListener&&q.attachEvent&&q.fireEvent&&(q.attachEvent(\"onclick\",function(){b.noCloneEvent=!1}),q.cloneNode(!0).fireEvent(\"onclick\")),i=c.createElement(\"input\"),i.value=\"t\",i.setAttribute(\"type\",\"radio\"),b.radioValue=i.value===\"t\",i.setAttribute(\"checked\",\"checked\"),q.appendChild(i),k=c.createDocumentFragment(),k.appendChild(q.lastChild),b.checkClone=k.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,k.removeChild(i),k.appendChild(q),q.innerHTML=\"\",a.getComputedStyle&&(j=c.createElement(\"div\"),j.style.width=\"0\",j.style.marginRight=\"0\",q.style.width=\"2px\",q.appendChild(j),b.reliableMarginRight=(parseInt((a.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0);if(q.attachEvent)for(o in{submit:1,change:1,focusin:1})n=\"on\"+o,p=n in q,p||(q.setAttribute(n,\"return;\"),p=typeof q[n]==\"function\"),b[o+\"Bubbles\"]=p;k.removeChild(q),k=g=h=j=q=i=null,f(function(){var a,d,e,g,h,i,j,k,m,n,o,r=c.getElementsByTagName(\"body\")[0];!r||(j=1,k=\"position:absolute;top:0;left:0;width:1px;height:1px;margin:0;\",m=\"visibility:hidden;border:0;\",n=\"style='\"+k+\"border:5px solid #000;padding:0;'\",o=\"<div \"+n+\"=\"\"><div></div></div>\"+\"<table \"+n+\"=\"\" cellpadding=\"0\" cellspacing=\"0\">\"+\"<tr><td></td></tr></table>\",a=c.createElement(\"div\"),a.style.cssText=m+\"width:0;height:0;position:static;top:0;margin-top:\"+j+\"px\",r.insertBefore(a,r.firstChild),q=c.createElement(\"div\"),a.appendChild(q),q.innerHTML=\"<table><tr><td style=\"padding:0;border:0;display:none\"></td><td>t</td></tr></table>\",l=q.getElementsByTagName(\"td\"),p=l[0].offsetHeight===0,l[0].style.display=\"\",l[1].style.display=\"none\",b.reliableHiddenOffsets=p&&l[0].offsetHeight===0,q.innerHTML=\"\",q.style.width=q.style.paddingLeft=\"1px\",f.boxModel=b.boxModel=q.offsetWidth===2,typeof q.style.zoom!=\"undefined\"&&(q.style.display=\"inline\",q.style.zoom=1,b.inlineBlockNeedsLayout=q.offsetWidth===2,q.style.display=\"\",q.innerHTML=\"<div style=\"width:4px;\"></div>\",b.shrinkWrapBlocks=q.offsetWidth!==2),q.style.cssText=k+m,q.innerHTML=o,d=q.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,i={doesNotAddBorder:e.offsetTop!==5,doesAddBorderForTableAndCells:h.offsetTop===5},e.style.position=\"fixed\",e.style.top=\"20px\",i.fixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top=\"\",d.style.overflow=\"hidden\",d.style.position=\"relative\",i.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,i.doesNotIncludeMarginInBodyOffset=r.offsetTop!==j,r.removeChild(a),q=a=null,f.extend(b,i))});return b}();var j=/^(?:\\{.*\\}|\\[.*\\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:\"jQuery\"+(f.fn.jquery+Math.random()).replace(/\\D/g,\"\"),noData:{embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c==\"string\",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c===\"events\";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c==\"object\"||typeof c==\"function\")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(\" \")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isemptyobject)(d))return}}if(!c){delete=\"\" j[k].data;if(!m(j[k]))return}f.support.deleteexpando||!j.setinterval?delete=\"\" j[k]:j[k]=\"null,i&&(f.support.deleteExpando?delete\" a[h]:a.removeattribute?a.removeattribute(h):a[h]=\"null)}},_data:function(a,b,c){return\" f.data(a,b,c,!0)},acceptdata:function(a){if(a.nodename){var=\"\" b=\"f.noData[a.nodeName.toLowerCase()];if(b)return\" b!=\"=!0&&a.getAttribute(\"classid\")===b}return!0}}),f.fn.extend({data:function(a,c){var\" d,e,g,h=\"null;if(typeof\" a=\"=\"undefined\"){if(this.length){h=f.data(this[0]);if(this[0].nodeType===1&&!f._data(this[0],\"parsedAttrs\")){e=this[0].attributes;for(var\" i=\"0,j=e.length;i<j;i++)g=e[i].name,g.indexOf(\"data-\")===0&&(g=f.camelCase(g.substring(5)),l(this[0],g,h[g]));f._data(this[0],\"parsedAttrs\",!0)}}return\" h}if(typeof=\"\" this.each(function(){f.data(this,a)});d=\"a.split(\".\"),d[1]=d[1]?\".\"+d[1]:\"\";if(c===b){h=this.triggerHandler(\"getData\"+d[1]+\"!\",[d[0]]),h===b&&this.length&&(h=f.data(this[0],a),h=l(this[0],a,h));return\" h=\"==b&&d[1]?this.data(d[0]):h}return\" this.each(function(){var=\"\" this.each(function(){f.removedata(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=\"(b||\"fx\")+\"mark\",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||\"fx\";var\" d=\"c+\"mark\",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,\"mark\"))}},queue:function(a,b,c){var\" d;if(a){b=\"(b||\"fx\")+\"queue\",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return\" d||[]}},dequeue:function(a,b){b=\"b||\"fx\";var\" c=\"f.queue(a,b),d=c.shift(),e={};d===\"inprogress\"&&(d=c.shift()),d&&(b===\"fx\"&&c.unshift(\"inprogress\"),f._data(a,b+\".run\",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+\"queue\" \"+b+\".run\",!0),n(a,b,\"queue\"))}}),f.fn.extend({queue:function(a,c){typeof=\"\" a!=\"string\" &&(c=\"a,a=\"fx\");if(c===b)return\" f.queue(this[0],a);return=\"\" this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=\"f.fx?f.fx.speeds[a]||a:a,b=b||\"fx\";return\" this.queue(b,function(b,c){var=\"\" this.queue(a||\"fx\",[])},promise:function(a,c){function=\"\" m(){--h||d.resolvewith(e,[e])}typeof=\"\" memory\"),!0))h++,l.add(m);m();return=\"\" d.promise()}});var=\"\" o=\"/[\\n\\t\\r]/g,p=/\\s+/,q=/\\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return\" f.access(this,a,b,!0,f.attr)},removeattr:function(a){return=\"\" this.each(function(){f.removeattr(this,a)})},prop:function(a,b){return=\"\" f.access(this,a,b,!0,f.prop)},removeprop:function(a){a=\"f.propFix[a]||a;return\" this.each(function(){try{this[a]=\"b,delete\" this[a]}catch(c){}})},addclass:function(a){var=\"\" b,c,d,e,g,h,i;if(f.isfunction(a))return=\"\" this.each(function(b){f(this).addclass(a.call(this,b,this.classname))});if(a&&typeof=\"\" \"+e.classname+\"=\"\" \";for(h=\"0,i=b.length;h<i;h++)~g.indexOf(\"\" \"+b[h]+\"=\"\" \")||(g+=\"b[h]+\"\" \");e.classname=\"f.trim(g)}}}return\" this},removeclass:function(a){var=\"\" c,d,e,g,h,i,j;if(f.isfunction(a))return=\"\" this.each(function(b){f(this).removeclass(a.call(this,b,this.classname))});if(a&&typeof=\"\" \"+g.classname+\"=\"\" \").replace(o,\"=\"\" \");for(i=\"0,j=c.length;i<j;i++)h=h.replace(\"\" \"+c[i]+\"=\"\" \",\"=\"\" \");g.classname=\"f.trim(h)}else\" g.classname=\"\" }}return=\"\" this},toggleclass:function(a,b){var=\"\" a,d=\"typeof\" this.each(function(c){f(this).toggleclass(a.call(this,c,this.classname,b),b)});return=\"\" this.each(function(){if(c=\"==\"string\"){var\" e,g=\"0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?\"addClass\":\"removeClass\"](e)}else\" if(c=\"==\"undefined\"||c===\"boolean\")this.className&&f._data(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":f._data(this,\"__className__\")||\"\"})},hasClass:function(a){var\" +a+\"=\"\" \",c=\"0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(\"\" \"+this[c].classname+\"=\"\" \").indexof(b)=\"\">-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h=\"\":typeof h==\"number\"?h+=\"\":f.isArray(h)&&(h=f.map(h,function(a){return a==null?\"\":a+\"\"})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!(\"set\"in c)||c.set(this,h,\"value\")===b)this.value=h}})}if(g){c=f.valHooks[g.nodeName.toLowerCase()]||f.valHooks[g.type];if(c&&\"get\"in c&&(d=c.get(g,\"value\"))!==b)return d;d=g.value;return typeof d==\"string\"?d.replace(q,\"\"):d==null?\"\":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type===\"select-one\";if(g<0)return null;c=\"j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute(\"disabled\")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,\"optgroup\"))){b=f(e).val();if(j)return\" b;h.push(b)}}if(j&&!h.length&&i.length)return=\"\" f(i[g]).val();return=\"\" h},set:function(a,b){var=\"\" c=\"f.makeArray(b);f(a).find(\"option\").each(function(){this.selected=f.inArray(f(this).val(),c)\">=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute==\"undefined\")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&\"set\"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,\"\"+d);return d}if(h&&\"get\"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;h<g;h++)e=d[h],e&&(c=f.propfix[e]||e,f.attr(a,e,\"\"),a.removeattribute(v?e:c),u.test(e)&&c in=\"\" a&&(a[c]=\"!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error(\"type\" property=\"\" can't=\"\" be=\"\" changed\");else=\"\" if(!f.support.radiovalue&&b=\"==\"radio\"&&f.nodeName(a,\"input\")){var\" c=\"a.value;a.setAttribute(\"type\",b),c&&(a.value=c);return\" b}}},value:{get:function(a,b){if(w&&f.nodename(a,\"button\"))return=\"\" w.get(a,b);return=\"\" b=\"\" a?a.value:null},set:function(a,b,c){if(w&&f.nodename(a,\"button\"))return=\"\" w.set(a,b,c);a.value=\"b}}},propFix:{tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},prop:function(a,c,d){var\" e,g,h,i=\"a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return\" d!=\"=b?g&&\"set\"in\" g&&(e=\"g.set(a,d,c))!==b?e:a[c]=d:g&&\"get\"in\" c&&c.specified?parseint(c.value,10):s.test(a.nodename)||t.test(a.nodename)&&a.href?0:b}}}}),f.attrhooks.tabindex=\"f.propHooks.tabIndex,x={get:function(a,c){var\" d,e=\"f.prop(a,c);return\" e=\"==!0||typeof\" e!=\"boolean\" &&(d=\"a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var\" d;b=\"==!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d\" a&&(a[d]=\"!0),a.setAttribute(c,c.toLowerCase()));return\" c}},v||(y=\"{name:!0,id:!0},w=f.valHooks.button={get:function(a,c){var\" d;d=\"a.getAttributeNode(c);return\" d&&(y[c]?d.nodevalue!=\"=\"\":d.specified)?d.nodeValue:b},set:function(a,b,d){var\" e.nodevalue=\"b+\"\"}},f.attrHooks.tabindex.set=w.set,f.each([\"width\",\"height\"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===\"\"){a.setAttribute(b,\"auto\");return\" c}}})}),f.attrhooks.contenteditable=\"{get:w.get,set:function(a,b,c){b===\"\"&&(b=\"false\"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each([\"href\",\"src\",\"width\",\"height\"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var\" d=\"a.getAttribute(c,2);return\" a.style.csstext.tolowercase()||b},set:function(a,b){return=\"\" a.style.csstext=\"\" +b}}),f.support.optselected||(f.prophooks.selected=\"f.extend(f.propHooks.selected,{get:function(a){var\" null}})),f.support.enctype||(f.propfix.enctype=\"encoding\" ),f.support.checkon||f.each([\"radio\",\"checkbox\"],function(){f.valhooks[this]=\"{get:function(a){return\" a.getattribute(\"value\")=\"==null?\"on\":a.value}}}),f.each([\"radio\",\"checkbox\"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return\" a.checked=\"f.inArray(f(a).val(),b)\">=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\\.]*)?(?:\\.(.+))?$/,B=/\\bhover(\\.\\S+)?\\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$/,G=function(a){var b=F.exec(a);b&&(b[1]=(b[1]||\"\").toLowerCase(),b[3]=b[3]&&new RegExp(\"(?:^|\\\\s)\"+b[3]+\"(?:\\\\s|$)\"));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c[\"class\"]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,\"mouseenter$1 mouseleave$1\")};\nf.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!=\"undefined\"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(\" \");for(k=0;k<c.length;k++){l=a.exec(c[k])||[],m=l[1],n=(l[2]||\"\").split(\".\").sort(),s=f.event.special[m]||{},m=(g?s.delegatetype:s.bindtype)||m,s=f.event.special[m]||{},o=f.extend({type:m,origtype:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:g(g),namespace:n.join(\".\")},p),r=j[m];if(!r){r=j[m]=[],r.delegatecount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addeventlistener?a.addeventlistener(m,i,!1):a.attachevent&&a.attachevent(\"on\"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegatecount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=\"f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||\"\")).split(\"\" \");for(h=\"0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j\" in=\"\" o)f.event.remove(a,j+b[h],c,d,!0);continue}p=\"f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new\" regexp(\"(^|\\\\.)\"+l.split(\".\").sort().join(\"\\\\.(?:.*\\\\.)?\")+\"(\\\\.|$)\"):null;for(n=\"0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d===\"**\"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete\" o[j])}f.isemptyobject(o)&&(q=\"g.handle,q&&(q.elem=null),f.removeData(a,[\"events\",\"handle\"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var\" h=\"c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf(\"!\")\">=0&&(h=h.slice(0,-1),k=!0),h.indexOf(\".\")>=0&&(i=h.split(\".\"),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c==\"object\"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join(\".\"),c.namespace_re=c.namespace?new RegExp(\"(^|\\\\.)\"+i.join(\"\\\\.(?:.*\\\\.)?\")+\"(\\\\.|$)\"):null,o=h.indexOf(\":\")<0?\"on\"+h:\"\";if(!e){j=f.cache;for(l in=\"\" j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=\"b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,\"events\")||{})[c.type]&&f._data(m,\"handle\"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!==\"click\"||!f.nodeName(e,\"a\"))&&f.acceptData(e)&&o&&e[h]&&(h!==\"focus\"&&h!==\"blur\"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return\" c.result}},dispatch:function(c){c=\"f.event.fix(c||a.event);var\" d=\"(f._data(this,\"events\")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=[],j,k,l,m,n,o,p,q,r,s,t;g[0]=c,c.delegateTarget=this;if(e&&!c.target.disabled&&(!c.button||c.type!==\"click\")){m=f(this),m.context=this.ownerDocument||this;for(l=c.target;l!=this;l=l.parentNode||this){o={},q=[],m[0]=l;for(j=0;j<e;j++)r=d[j],s=r.selector,o[s]===b&&(o[s]=r.quick?H(l,r.quick):m.is(s)),o[s]&&q.push(r);q.length&&i.push({elem:l,matches:q})}}d.length\">e&&i.push({elem:this,matches:d.slice(e)});for(j=0;j<i.length&&!c.ispropagationstopped();j++){p=i[j],c.currenttarget=p.elem;for(k=0;k<p.matches.length&&!c.isimmediatepropagationstopped();k++){r=p.matches[k];if(h||!c.namespace&&!r.namespace||c.namespace_re&&c.namespace_re.test(r.namespace))c.data=r.data,c.handleobj=r,n=((f.event.special[r.origtype]||{}).handle||r.handler).apply(p.elem,g),n!==b&&(c.result=n,n===!1&&(c.preventdefault(),c.stoppropagation()))}}return c.result},props:\"attrchange=\"\" attrname=\"\" relatednode=\"\" srcelement=\"\" altkey=\"\" bubbles=\"\" cancelable=\"\" ctrlkey=\"\" currenttarget=\"\" eventphase=\"\" metakey=\"\" relatedtarget=\"\" shiftkey=\"\" target=\"\" timestamp=\"\" view=\"\" which\".split(\"=\"\" \"),fixhooks:{},keyhooks:{props:\"char=\"\" charcode=\"\" key=\"\" keycode\".split(\"=\"\" \"),filter:function(a,b){a.which=\"=null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return\" a}},mousehooks:{props:\"button=\"\" buttons=\"\" clientx=\"\" clienty=\"\" fromelement=\"\" offsetx=\"\" offsety=\"\" pagex=\"\" pagey=\"\" screenx=\"\" screeny=\"\" toelement\".split(\"=\"\" \"),filter:function(a,d){var=\"\" e,f,g,h=\"d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return\" a}},fix:function(a){if(a[f.expando])return=\"\" a;var=\"\" d,e,g=\"a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return\" h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindready},load:{nobubble:!0},focus:{delegatetype:\"focusin\"},blur:{delegatetype:\"focusout\"},beforeunload:{setup:function(a,b,c){f.iswindow(this)&&(this.onbeforeunload=\"c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var\" e=\"f.extend(new\" f.event,c,{type:a,issimulated:!0,originalevent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isdefaultprevented()&&c.preventdefault()}},f.event.handle=\"f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent(\"on\"+b,c)},f.Event=function(a,b){if(!(this\" instanceof=\"\" f.event))return=\"\" new=\"\" f.event(a,b);a&&a.type?(this.originalevent=\"a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var\" a=\"this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var\" c=\"this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return\" h}}}),f.support.submitbubbles||(f.event.special.submit=\"{setup:function(){if(f.nodeName(this,\"form\"))return!1;f.event.add(this,\"click._submit\" keypress._submit\",function(a){var=\"\" b=\"a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,\"change._change\",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate(\"change\",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var\" a.handleobj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,\"._change\");return=\"\" z.test(this.nodename)}}),f.support.focusinbubbles||f.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var=\"\" d=\"0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var\" h,i;if(typeof=\"\" c!=\"string\" &&(d=\"c,c=b);for(i\" in=\"\" a)this.on(i,c,d,a[i],g);return=\"\" this}d=\"=null&&e==null?(e=c,d=c=b):e==null&&(typeof\" if(!e)return=\"\" this;g=\"==1&&(h=e,e=function(a){f().off(a);return\" h.apply(this,arguments)},e.guid=\"h.guid||(h.guid=f.guid++));return\" this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return=\"\" this.on.call(this,a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventdefault&&a.handleobj){var=\"\" this}if(typeof=\"\" g=\"\" a)this.off(g,c,a[g]);return=\"\" this}if(c=\"==!1||typeof\" this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return=\"\" this.on(a,null,b,c)},unbind:function(a,b){return=\"\" this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return=\"\" this},die:function(a,b){f(this.context).off(a,this.selector||\"**\",b);return=\"\" this},delegate:function(a,b,c,d){return=\"\" this.on(b,a,c,d)},undelegate:function(a,b,c){return=\"\" arguments.length=\"=1?this.off(a,\"**\"):this.off(b,a,c)},trigger:function(a,b){return\" this.each(function(){f.event.trigger(a,b,this)})},triggerhandler:function(a,b){if(this[0])return=\"\" f.event.trigger(a,b,this[0],!0)},toggle:function(a){var=\"\" b[e].apply(this,arguments)||!1};e.guid=\"c;while(d<b.length)b[d++].guid=c;return\" this.click(e)},hover:function(a,b){return=\"\" this.mouseenter(a).mouseleave(b||a)}}),f.each(\"blur=\"\" focus=\"\" focusin=\"\" focusout=\"\" load=\"\" resize=\"\" scroll=\"\" unload=\"\" click=\"\" dblclick=\"\" mousedown=\"\" mouseup=\"\" mousemove=\"\" mouseover=\"\" mouseout=\"\" mouseenter=\"\" mouseleave=\"\" change=\"\" select=\"\" submit=\"\" keydown=\"\" keypress=\"\" keyup=\"\" error=\"\" contextmenu\".split(\"=\"\" \"),function(a,b){f.fn[b]=\"function(a,c){c==null&&(c=a,a=null);return\">0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=\"e[h];if(j){var\" k=\"!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof\" b!=\"string\" ){if(j=\"==b){k=!0;break}}else\" if(m.filter(b,[j]).length=\"\">0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=\"e[h];if(j){var\" k=\"!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var\" a=\"/((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^\">+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g,d=\"sizcache\"+(Math.random()+\"\").replace(\".\",\"\"),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\\\/g,k=/\\r\\n/g,l=/\\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!=\"string\")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(\"\"),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]===\"~\"||w[0]===\"+\")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q=\"\",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)===\"[object Array]\")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=\"function(a,b){return\" m(a,null,null,b)},m.matchesselector=\"function(a,b){return\" m(b,null,null,[a]).length=\"\">0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftmatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!==\"\\\\\"){g[1]=(g[1]||\"\").replace(j,\"\"),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],\"\");break}}}}d||(d=typeof b.getelementsbytagname!=\"undefined\" ?b.getelementsbytagname(\"*\"):[]);return{set:d,expr:a}},m.filter=\"function(a,c,d,e){var\" f,g,h,i,j,k,l,n,p,q=\"a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h\" in=\"\" o.filter)if((f=\"o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)===\"\\\\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else\" if(f=\"==!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],\"\");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else\" break;q=\"a}return\" s},m.error=\"function(a){throw\" new=\"\" error(\"syntax=\"\" error,=\"\" unrecognized=\"\" expression:=\"\" \"+a)};var=\"\" n=\"m.getText=function(a){var\" b,c,d=\"a.nodeType,e=\"\";if(d){if(d===1||d===9){if(typeof\" a.textcontent=\"=\"string\")return\" a.textcontent;if(typeof=\"\" a.innertext=\"=\"string\")return\" a.innertext.replace(k,\"\");for(a=\"a.firstChild;a;a=a.nextSibling)e+=n(a)}else\" if(d=\"==3||d===4)return\" a.nodevalue}else=\"\" for(b=\"0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return\" e},o=\"m.selectors={order:[\"ID\",\"NAME\",\"TAG\"],match:{ID:/#((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,CLASS:/\\.((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,NAME:/\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)['\"]*\\]/,ATTR:/\\[\\s*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(?:(['\"])(.*?)\\3|(#?(?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)*)|)|)\\s*\\]/,TAG:/^((?:[\\w\\u00c0-\\uFFFF\\*\\-]|\\\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\\(\\s*(even|odd|(?:[+\\-]?\\d+|(?:[+\\-]?\\d*)?n\\s*(?:[+\\-]\\s*\\d+)?))\\s*\\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^\\-]|$)/,PSEUDO:/:((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/},leftMatch:{},attrMap:{\"class\":\"className\",\"for\":\"htmlFor\"},attrHandle:{href:function(a){return\" a.getattribute(\"href\")},type:function(a){return=\"\" a.getattribute(\"type\")}},relative:{\"+\":function(a,b){var=\"\" c=\"typeof\" b=\"=\"string\",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var\" f=\"0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},\"\">\":function(a,b){var c,d=typeof b==\"string\",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=\"c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},\"\":function(a,b,c){var\" d,f=\"e++,g=x;typeof\" b=\"=\"string\"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g(\"parentNode\",b,f,a,d,c)},\"~\":function(a,b,c){var\" b.getelementbyid!=\"undefined\" &&!c){var=\"\" d=\"b.getElementById(a[1]);return\" d&&d.parentnode?[d]:[]}},name:function(a,b){if(typeof=\"\" b.getelementsbyname!=\"undefined\" ){var=\"\" c=\"[],d=b.getElementsByName(a[1]);for(var\" e=\"0,f=d.length;e<f;e++)d[e].getAttribute(\"name\")===a[1]&&c.push(d[e]);return\" c.length=\"==0?null:c}},TAG:function(a,b){if(typeof\" b.getelementsbytagname!=\"undefined\" )return=\"\" b.getelementsbytagname(a[1])}},prefilter:{class:function(a,b,c,d,e,f){a=\" \" +a[1].replace(j,\"\")+\"=\"\" \";if(f)return=\"\" a;for(var=\"\" \"+h.classname+\"=\"\" \").replace(=\"\" [\\t\\n\\r]=\"\" g,\"=\"\" \").indexof(a)=\"\">=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,\"\")},TAG:function(a,b){return a[1].replace(j,\"\").toLowerCase()},CHILD:function(a){if(a[1]===\"nth\"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\\+|\\s*/g,\"\");var b=/(-?)(\\d*)(?:n([+\\-]?\\d*))?/.exec(a[2]===\"even\"&&\"2n\"||a[2]===\"odd\"&&\"2n+1\"||!/\\D/.test(a[2])&&\"0n+\"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,\"\");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||\"\").replace(j,\"\"),a[2]===\"~=\"&&(a[4]=\" \"+a[4]+\" \");return a},PSEUDO:function(b,c,d,e,f){if(b[1]===\"not\")if((a.exec(b[3])||\"\").length>1||/^\\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!==\"hidden\"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute(\"type\"),c=a.type;return a.nodeName.toLowerCase()===\"input\"&&\"text\"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()===\"input\"&&\"radio\"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()===\"input\"&&\"checkbox\"===a.type},file:function(a){return a.nodeName.toLowerCase()===\"input\"&&\"file\"===a.type},password:function(a){return a.nodeName.toLowerCase()===\"input\"&&\"password\"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b===\"input\"||b===\"button\")&&\"submit\"===a.type},image:function(a){return a.nodeName.toLowerCase()===\"input\"&&\"image\"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b===\"input\"||b===\"button\")&&\"reset\"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b===\"input\"&&\"button\"===a.type||b===\"button\"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b=\"\">c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e===\"contains\")return(a.textContent||a.innerText||n([a])||\"\").indexOf(b[3])>=0;if(e===\"not\"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},child:function(a,b){var c,e,f,g,h,i,j,k=\"b[1],l=a;switch(k){case\"only\":case\"first\":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k===\"first\")return!0;l=a;case\"last\":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case\"nth\":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return\" c=\"==0?j===0:j%c===0&&j/c\">=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute(\"id\")===b},TAG:function(a,b){return b===\"*\"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(\" \"+(a.className||a.getAttribute(\"class\"))+\" \").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+\"\",f=b[2],g=b[4];return d==null?f===\"!=\":!f&&m.attr?d!=null:f===\"=\"?e===g:f===\"*=\"?e.indexOf(g)>=0:f===\"~=\"?(\" \"+e+\" \").indexOf(g)>=0:g?f===\"!=\"?e!==g:f===\"^=\"?e.indexOf(g)===0:f===\"$=\"?e.substr(e.length-g.length)===g:f===\"|=\"?e===g||e.substr(0,g.length+1)===g+\"-\":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return\"\\\\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\\[]*\\])(?![^\\(]*\\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\\r|\\n)*?)/.source+o.match[r].source.replace(/\\\\(\\d+)/g,q));var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)===\"[object Array]\")Array.prototype.push.apply(d,a);else if(typeof a.length==\"number\")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return=\"\" d}}var=\"\" u,v;c.documentelement.comparedocumentposition?u=\"function(a,b){if(a===b){h=!0;return\" 0}if(!a.comparedocumentposition||!b.comparedocumentposition)return=\"\" a.comparedocumentposition?-1:1;return=\"\" a.comparedocumentposition(b)&4?-1:1}:(u=\"function(a,b){if(a===b){h=!0;return\" 0}if(a.sourceindex&&b.sourceindex)return=\"\" a.sourceindex-b.sourceindex;var=\"\" c,d,e=\"[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return\" v(a,b);if(!g)return-1;if(!i)return=\"\" 1;while(j)e.unshift(j),j=\"j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var\" k=\"0;k<c&&k<d;k++)if(e[k]!==f[k])return\" v(e[k],f[k]);return=\"\" c;var=\"\" d=\"a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return\" 1}),function(){var=\"\" a=\"c.createElement(\"div\"),d=\"script\"+(new\" date).gettime(),e=\"c.documentElement;a.innerHTML=\"<a\" name=\"\"+d+\"\">\",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!=\"undefined\"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!=\"undefined\"&&e.getAttributeNode(\"id\").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!=\"undefined\"&&a.getAttributeNode(\"id\");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement(\"div\");a.appendChild(c.createComment(\"\")),a.getElementsByTagName(\"*\").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]===\"*\"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML=\"<a href=\"#\"></a>\",a.firstChild&&typeof a.firstChild.getAttribute!=\"undefined\"&&a.firstChild.getAttribute(\"href\")!==\"#\"&&(o.attrHandle.href=function(a){return a.getAttribute(\"href\",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement(\"div\"),d=\"__sizzle__\";b.innerHTML=\"<p class=\"TEST\"></p>\";if(!b.querySelectorAll||b.querySelectorAll(\".TEST\").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\\w+$)|^\\.([\\w\\-]+$)|^#([\\w\\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b===\"body\"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!==\"object\"){var k=e,l=e.getAttribute(\"id\"),n=l||d,p=e.parentNode,q=/^\\s*[+~]/.test(b);l?n=n.replace(/'/g,\"\\\\$&\"):e.setAttribute(\"id\",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll(\"[id='\"+n+\"'] \"+b),f)}catch(r){}finally{l||k.removeAttribute(\"id\")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement(\"div\"),\"div\"),e=!1;try{b.call(c.documentElement,\"[test!='']:sizzle\")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\\=\\s*([^'\"\\]]*)\\s*\\]/g,\"='$1']\");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement(\"div\");a.innerHTML=\"<div class=\"test e\"></div><div class=\"test\"></div>\";if(!!a.getElementsByClassName&&a.getElementsByClassName(\"e\").length!==0){a.lastChild.className=\"e\";if(a.getElementsByClassName(\"e\").length===1)return;o.order.splice(1,0,\"CLASS\"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!=\"undefined\"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!==\"HTML\":!1};var y=function(a,b,c){var d,e=[],f=\"\",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,\"\");a=o.relative[a]?a+\"*\":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=\"f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[\":\"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var\" l=\"/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\\[\\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.POS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var\" b=\"this,c,d;if(typeof\" a!=\"string\" )return=\"\" f(a).filter(function(){for(c=\"0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var\" e=\"this.pushStack(\"\",\"find\",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c\">0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var=\"\" b=\"f(a);return\" this.filter(function(){for(var=\"\" a=\"0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return\" this.pushstack(t(this,a,!1),\"not\",a)},filter:function(a){return=\"\" this.pushstack(t(this,a,!0),\"filter\",a)},is:function(a){return!!a&&(typeof=\"\">=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentnode,h++}return c}var=\"\" i=\"Q.test(a)||typeof\" a!=\"string\" ?f(a,b||this.context):0;for(d=\"0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)\">-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,\"closest\",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a==\"string\")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a==\"string\"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return f.dir(a,\"parentNode\",c)},next:function(a){return f.nth(a,2,\"nextSibling\")},prev:function(a){return f.nth(a,2,\"previousSibling\")},nextAll:function(a){return f.dir(a,\"nextSibling\")},prevAll:function(a){return f.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return f.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return f.dir(a,\"previousSibling\",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,\"iframe\")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof d==\"string\"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(\",\"))}}),f.extend({filter:function(a,b,c){c&&(a=\":not(\"+a+\")\");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var V=\"abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",W=/ jQuery\\d+=\"(?:\\d+|null)\"/g,X=/^\\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,Z=/<([\\w:]+) ,$=\"/<tbody/i,_=/<|&#?\\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new\" regexp(\"<(?:\"+v+\")\",\"i\"),bd=\"/checked\\s*(?:[^=]|=\\s*.checked.)/i,be=/\\/(java|ecma)script/i,bf=/^\\s*<!(?:\\[CDATA\\[|\\-\\-)/,bg={option:[1,\"<select\" multiple=\"multiple\">\",\"\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],area:[1,\"<map>\",\"</map>\"],_default:[0,\"\",\"\"]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,\"div<div>\",\"</div>\"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!=\"object\"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,\"body\")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f.clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,\"before\",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,\"after\",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName(\"*\")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function()\n{for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName(\"*\"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(W,\"\"):null;if(typeof a==\"string\"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(Y,\"<$1>\");try{for(var c=0,d=this.length;c<d;c++)this[c].nodetype===1&&(f.cleandata(this[c].getelementsbytagname(\"*\")),this[c].innerhtml=a)}catch(e){this.empty().append(a)}}else f.isfunction(a)?this.each(function(b){var=\"\" c=\"f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return\" this},replacewith:function(a){if(this[0]&&this[0].parentnode){if(f.isfunction(a))return=\"\" this.each(function(b){var=\"\" a!=\"string\" &&(a=\"f(a).detach());return\" this.each(function(){var=\"\" b=\"this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return\" this.length?this.pushstack(f(f.isfunction(a)?a():a),\"replacewith\",a):this},detach:function(a){return=\"\" this.remove(a,!0)},dommanip:function(a,c,d){var=\"\" e,g,h,i,j=\"a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof\" j=\"=\"string\"&&bd.test(j))return\" this.each(function(){f(this).dommanip(a,c,d,!0)});if(f.isfunction(j))return=\"\" this.each(function(e){var=\"\" g=\"f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,\"tr\");for(var\" l=\"0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m\">1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bp)}return this}}),f.buildfragment=\"function(a,b,d){var\" e,g,h,i,j=\"a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof\" j=\"=\"string\"&&j.length<512&&i===c&&j.charAt(0)===\"<\"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){f.fn[a]=function(c){var\" d=\"[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return\" this}for(var=\"\" h=\"0,i=e.length;h<i;h++){var\">0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||!bc.test(\"<\"+a.nodename)?a.clonenode(!0):bo(a);if((!f.support.nocloneevent||!f.support.noclonechecked)&&(a.nodetype===1||a.nodetype===11)&&!f.isxmldoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var=\"\" g;b=\"b||c,typeof\" b.createelement=\"=\"undefined\"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var\" h=\"[],i;for(var\" j=\"0,k;(k=a[j])!=null;j++){typeof\" k=\"=\"number\"&&(k+=\"\");if(!k)continue;if(typeof\">\");var l=(Z.exec(k)||[\"\",\"\"])[1].toLowerCase(),m=bg[l]||bg._default,n=m[0],o=b.createElement(\"div\");b===c?bh.appendChild(o):U(b).appendChild(o),o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l===\"table\"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]===\"<table>\"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],\"tbody\")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)==\"number\")for(i=0;i<r;i++)bn(k[i]);else bn(k);k.nodetype?h.push(k):h=\"f.merge(h,k)}if(d){g=function(a){return!a.type||be.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],\"script\")&&(!h[j].type||h[j].type.toLowerCase()===\"text/javascript\"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var\" s=\"f.grep(h[j].getElementsByTagName(\"script\"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return\" h},cleandata:function(a){var=\"\" b,c,d=\"f.cache,e=f.event.special,g=f.support.deleteExpando;for(var\" h=\"0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var\" j=\"\" in=\"\" b.events)e[j]?f.event.remove(i,j):f.removeevent(i,j,b.handle);b.handle&&(b.handle.elem=\"null)}g?delete\" i[f.expando]:i.removeattribute&&i.removeattribute(f.expando),delete=\"\" d[c]}}}});var=\"\" bq=\"/alpha\\([^)]*\\)/i,br=/opacity=([^)]*)/,bs=/([A-Z]|^ms)/g,bt=/^-?\\d+(?:px)?$/i,bu=/^-?\\d/,bv=/^([\\-+])=([\\-+.\\de]+)/,bw={position:\"absolute\",visibility:\"hidden\",display:\"block\"},bx=[\"Left\",\"Right\"],by=[\"Top\",\"Bottom\"],bz,bA,bB;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return\" this;return=\"\" f.access(this,a,c,!0,function(a,c,d){return=\"\" d!=\"=b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var\" c=\"bz(a,\"opacity\",\"opacity\");return\" a.style.opacity}}},cssnumber:{fillopacity:!0,fontweight:!0,lineheight:!0,opacity:!0,orphans:!0,widows:!0,zindex:!0,zoom:!0},cssprops:{\"float\":f.support.cssfloat?\"cssfloat\":\"stylefloat\"},style:function(a,c,d,e){if(!!a&&a.nodetype!=\"=3&&a.nodeType!==8&&!!a.style){var\" g,h,i=\"f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&\"get\"in\" k&&(g=\"k.get(a,!1,e))!==b)return\" g;return=\"\" j[c]}h=\"typeof\" d,h=\"==\"string\"&&(g=bv.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h=\"number\");if(d==null||h===\"number\"&&isNaN(d))return;h===\"number\"&&!f.cssNumber[i]&&(d+=\"px\");if(!k||!(\"set\"in\" k)||(d=\"k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var\" e,g;c=\"f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c===\"cssFloat\"&&(c=\"float\");if(g&&\"get\"in\" g&&(e=\"g.get(a,!0,d))!==b)return\" e;if(bz)return=\"\" bz(a,c)},swap:function(a,b,c){var=\"\" d=\"{};for(var\" e=\"\" b)d[e]=\"a.style[e],a.style[e]=b[e];c.call(a);for(e\" b)a.style[e]=\"d[e]}}),f.curCSS=f.css,f.each([\"height\",\"width\"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var\" e;if(c){if(a.offsetwidth!=\"=0)return\" bc(a,b,d);f.swap(a,bw,function(){e=\"bC(a,b,d)});return\" e}},set:function(a,b){if(!bt.test(b))return=\"\" b;b=\"parseFloat(b);if(b\">=0)return b+\"px\"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return br.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||\"\")?parseFloat(RegExp.$1)/100+\"\":b?\"1\":\"\"},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?\"alpha(opacity=\"+b*100+\")\":\"\",g=d&&d.filter||c.filter||\"\";c.zoom=1;if(b>=1&&f.trim(g.replace(bq,\"\"))===\"\"){c.removeAttribute(\"filter\");if(d&&!d.filter)return}c.filter=bq.test(g)?g.replace(bq,e):g+\" \"+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:\"inline-block\"},function(){b?c=bz(a,\"margin-right\",\"marginRight\"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bA=function(a,b){var c,d,e;b=b.replace(bs,\"-$1\").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===\"\"&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b)));return c}),c.documentElement.currentStyle&&(bB=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f===null&&g&&(e=g[b])&&(f=e),!bt.test(f)&&bu.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b===\"fontSize\"?\"1em\":f||0,f=g.pixelLeft+\"px\",g.left=c,d&&(a.runtimeStyle.left=d));return f===\"\"?\"auto\":f}),bz=bA||bB,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,\"display\"))===\"none\"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bD=/%20/g,bE=/\\[\\]$/,bF=/\\r?\\n/g,bG=/#.*$/,bH=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg,bI=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bJ=/^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,bK=/^(?:GET|HEAD)$/,bL=/^\\/\\//,bM=/\\?/,bN=/<script\\b[^<]*(?:(?!<\\ script=\"\">)<[^<]*)*<\\ script=\"\">/gi,bO=/^(?:select|textarea)/i,bP=/\\s+/,bQ=/([?&])_=[^&]*/,bR=/^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+))?)?/,bS=f.fn.load,bT={},bU={},bV,bW,bX=[\"*/\"]+[\"*\"];try{bV=e.href}catch(bY){bV=c.createElement(\"a\"),bV.href=\"\",bV=bV.href}bW=bR.exec(bV.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!=\"string\"&&bS)return bS.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(\" \");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h=\"GET\";c&&(f.isFunction(c)?(d=c,c=b):typeof c==\"object\"&&(c=f.param(c,f.ajaxSettings.traditional),h=\"POST\"));var i=this;f.ajax({url:a,type:h,dataType:\"html\",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f(\"<div>\").append(c.replace(bN,\"\")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bO.test(this.nodeName)||bI.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bF,\"\\r\\n\")}}):{name:b.name,value:c.replace(bF,\"\\r\\n\")}}).get()}}),f.each(\"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each([\"get\",\"post\"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,\"script\")},getJSON:function(a,b,c){return f.get(a,b,c,\"json\")},ajaxSetup:function(a,b){b?b_(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b_(a,b);return a},ajaxSettings:{url:bV,isLocal:bJ.test(bW[1]),global:!0,type:\"GET\",contentType:\"application/x-www-form-urlencoded\",processData:!0,async:!0,accepts:{xml:\"application/xml, text/xml\",html:\"text/html\",text:\"text/plain\",json:\"application/json, text/javascript\",\"*\":bX},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\"},converters:{\"* text\":a.String,\"text html\":!0,\"text json\":f.parseJSON,\"text xml\":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bZ(bT),ajaxTransport:bZ(bU),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||\"\",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?cb(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifmodified){if(y=v.getresponseheader(\"last-modified\"))f.lastmodified[k]=y;if(z=v.getresponseheader(\"etag\"))f.etag[k]=z}if(a===304)w=\"notmodified\",o=!0;else try{r=\"cc(d,x),w=\"success\",o=!0}catch(A){w=\"parsererror\",u=A}}else{u=w;if(!w||a)w=\"error\",a<0&&(a=0)}v.status=a,v.statusText=\"\"+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger(\"ajax\"+(o?\"Success\":\"Error\"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger(\"ajaxComplete\",[v,d]),--f.active||f.event.trigger(\"ajaxStop\"))}}typeof\" a=\"=\"object\"&&(c=a,a=b),c=c||{};var\" d=\"f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e\" instanceof=\"\" f)?f(e):f.event,h=\"f.Deferred(),i=f.Callbacks(\"once\" memory\"),j=\"d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var\" c=\"a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return\" this},getallresponseheaders:function(){return=\"\" s=\"==2?n:null},getResponseHeader:function(a){var\" c;if(s=\"==2){if(!o){o={};while(c=bH.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return\" this},abort:function(a){a=\"a||\"abort\",p&&p.abort(a),w(0,a);return\" this}};h.promise(v),v.success=\"v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var\" b;if(s<2)for(b=\"\" in=\"\" a)j[b]=\"[j[b],a[b]];else\" b=\"a[v.status],v.then(b,b)}return\" this},d.url=\"((a||d.url)+\"\").replace(bG,\"\").replace(bL,bW[1]+\"//\"),d.dataTypes=f.trim(d.dataType||\"*\").toLowerCase().split(bP),d.crossDomain==null&&(r=bR.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bW[1]&&r[2]==bW[2]&&(r[3]||(r[1]===\"http:\"?80:443))==(bW[3]||(bW[1]===\"http:\"?80:443)))),d.data&&d.processData&&typeof\" d.data!=\"string\" &&(d.data=\"f.param(d.data,d.traditional)),b$(bT,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bK.test(d.type),t&&f.active++===0&&f.event.trigger(\"ajaxStart\");if(!d.hasContent){d.data&&(d.url+=(bM.test(d.url)?\"&\":\"?\")+d.data,delete\" d.data),k=\"d.url;if(d.cache===!1){var\" x=\"f.now(),y=d.url.replace(bQ,\"$1_=\"+x);d.url=y+(y===d.url?(bM.test(d.url)?\"&\":\"?\")+\"_=\"+x:\"\")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader(\"Content-Type\",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader(\"If-Modified-Since\",f.lastModified[k]),f.etag[k]&&v.setRequestHeader(\"If-None-Match\",f.etag[k])),v.setRequestHeader(\"Accept\",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!==\"*\"?\",\" \"+bx+\";=\"\" q=\"0.01\":\"\"):d.accepts[\"*\"]);for(u\" d.headers)v.setrequestheader(u,d.headers[u]);if(d.beforesend&&(d.beforesend.call(e,v,d)=\"==!1||s===2)){v.abort();return!1}for(u\" in{success:1,error:1,complete:1})v[u](d[u]);p=\"b$(bU,d,c,v);if(!p)w(-1,\"No\" transport\");else{v.readystate=\"1,t&&g.trigger(\"ajaxSend\",[v,d]),d.async&&d.timeout\">0&&(q=setTimeout(function(){v.abort(\"timeout\")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw=\"\" z}}return=\"\" v},param:function(a,c){var=\"\" d=\"[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else\" for(var=\"\" g=\"\" in=\"\" a)ca(g,a[g],c,e);return=\"\" d.join(\"&\").replace(bd,\"+\")}}),f.extend({active:0,lastmodified:{},etag:{}});var=\"\" cd=\"f.now(),ce=/(\\=)\\?(&|$)|\\?\\?/i;f.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){return\" f.expando+\"_\"+cd++}}),f.ajaxprefilter(\"json=\"\" jsonp\",function(b,c,d){var=\"\" e=\"b.contentType===\"application/x-www-form-urlencoded\"&&typeof\" b.data=\"=\"string\";if(b.dataTypes[0]===\"jsonp\"||b.jsonp!==!1&&(ce.test(b.url)||e&&ce.test(b.data))){var\" g,h=\"b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l=\"$1\"+h+\"$2\";b.jsonp!==!1&&(j=j.replace(ce,l),b.url===j&&(e&&(k=k.replace(ce,l)),b.data===k&&(j+=(/\\?/.test(j)?\"&\":\"?\")+b.jsonp+\"=\"+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters[\"script\" json\"]=\"function(){g||f.error(h+\"\" was=\"\" not=\"\" called\");return=\"\" g[0]},b.datatypes[0]=\"json\" ;return\"script\"}}),f.ajaxsetup({accepts:{script:\"text=\"\" javascript,=\"\" application=\"\" ecmascript,=\"\" x-ecmascript\"},contents:{script:=\"\" javascript|ecmascript=\"\" },converters:{\"text=\"\" script\":function(a){f.globaleval(a);return=\"\" a}}}),f.ajaxprefilter(\"script\",function(a){a.cache=\"==b&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\",a.global=!1)}),f.ajaxTransport(\"script\",function(a){if(a.crossDomain){var\" d,e=\"c.head||c.getElementsByTagName(\"head\")[0]||c.documentElement;return{send:function(f,g){d=c.createElement(\"script\"),d.async=\"async\",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,\"success\")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var\" cf=\"a.ActiveXObject?function(){for(var\" a=\"\" ch)ch[a](0,1)}:!1,cg=\"0,ch;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ci()||cj()}:ci,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&\"withCredentials\"in\" a})}(f.ajaxsettings.xhr()),f.support.ajax&&f.ajaxtransport(function(c){if(!c.crossdomain||f.support.cors){var=\"\" d;return{send:function(e,g){var=\"\" h=\"c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j\" c.xhrfields)h[j]=\"c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e[\"X-Requested-With\"]&&(e[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(j\" e)h.setrequestheader(j,e[j])}catch(k){}h.send(c.hascontent&&c.data||null),d=\"function(a,e){var\" j,k,l,m,n;try{if(d&&(e||h.readystate=\"==4)){d=b,i&&(h.onreadystatechange=f.noop,cf&&delete\" ch[i]);if(e)h.readystate!=\"=4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=\"\"}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cg,cf&&(ch||(ch={},f(a).unload(cf)),ch[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var\" ck=\"{},cl,cm,cn=/^(?:toggle|show|hide)$/,co=/^([+\\-]=)?([\\d+.\\-]+)([a-z%]*)$/i,cp,cq=[[\"height\",\"marginTop\",\"marginBottom\",\"paddingTop\",\"paddingBottom\"],[\"width\",\"marginLeft\",\"marginRight\",\"paddingLeft\",\"paddingRight\"],[\"opacity\"]],cr;f.fn.extend({show:function(a,b,c){var\" d,e;if(a||a=\"==0)return\" this.animate(cu(\"show\",3),a,b,c);for(var=\"\" this},hide:function(a,b,c){if(a||a=\"==0)return\" this.animate(cu(\"hide\",3),a,b,c);var=\"\" d,e,g=\"0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,\"display\"),e!==\"none\"&&!f._data(d,\"olddisplay\")&&f._data(d,\"olddisplay\",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display=\"none\");return\" this},_toggle:f.fn.toggle,toggle:function(a,b,c){var=\"\" b=\"d?a:f(this).is(\":hidden\");f(this)[b?\"show\":\"hide\"]()}):this.animate(cu(\"toggle\",3),a,b,c);return\" this},fadeto:function(a,b,c,d){return=\"\" this.filter(\":hidden\").css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function=\"\" g(){e.queue=\"==!1&&f._mark(this);var\" a){g=\"f.camelCase(i),i!==g&&(a[g]=a[i],delete\" a[i]),h=\"a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||\"swing\";if(h===\"hide\"&&d||h===\"show\"&&!d)return\" b.complete.call(this);c&&(g=\"==\"height\"||g===\"width\")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,\"display\")===\"inline\"&&f.css(this,\"float\")===\"none\"&&(!f.support.inlineBlockNeedsLayout||cv(this.nodeName)===\"inline\"?this.style.display=\"inline-block\":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow=\"hidden\");for(i\" a)j=\"new\" f.fx(this,b,i),h=\"a[i],cn.test(h)?(o=f._data(this,\"toggle\"+i)||(h===\"toggle\"?d?\"show\":\"hide\":0),o?(f._data(this,\"toggle\"+i,o===\"show\"?\"hide\":\"show\"),j[o]()):j[h]()):(k=co.exec(h),l=j.cur(),k?(m=parseFloat(k[2]),n=k[3]||(f.cssNumber[i]?\"\":\"px\"),n!==\"px\"&&(f.style(this,i,(m||1)+n),l=(m||1)/j.cur()*l,f.style(this,i,l+n)),k[1]&&(m=(k[1]===\"-=\"?-1:1)*m+l),j.custom(l,m,n)):j.custom(l,h,\"\"));return!0}var\" this.each(e.complete,[!1]);a=\"f.extend({},a);return\" e.queue=\"==!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof\" a!=\"string\" &&(d=\"c,c=a,a=b),c&&a!==!1&&this.queue(a||\"fx\",[]);return\" this.each(function(){function=\"\" h(a,b,c){var=\"\" b,c=\"!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b\" g)g[b]&&g[b].stop&&b.indexof(\".run\")=\"==b.length-4&&h(this,g,b);else\" g[b=\"a+\".run\"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:cu(\"show\",1),slideUp:cu(\"hide\",1),slideToggle:cu(\"toggle\",1),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){f.fn[a]=function(a,c,d){return\" this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var=\"\" d.duration=\"=\"number\"?d.duration:d.duration\" f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue=\"=null||d.queue===!0)d.queue=\"fx\";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return\" d},easing:{linear:function(a,b,c,d){return=\"\" c+d*a},swing:function(a,b,c,d){return(-math.cos(a*math.pi)=\"\" 2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=\"b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return\" this.elem[this.prop];var=\"\" a,b=\"f.css(this.elem,this.prop);return\" isnan(a=\"parseFloat(b))?!b||b===\"auto\"?0:b:a},custom:function(a,c,d){function\" h(a){return=\"\" e.step(a)}var=\"\" b,c,d,e=\"cr||cs(),g=!0,h=this.elem,i=this.options;if(a||e\">=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each([\"\",\"X\",\"Y\"],function(a,b){h.style[\"overflow\"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,\"fxshow\"+b,!0),f.removeData(h,\"toggle\"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearinterval(cp),cp=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,\"opacity\",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each([\"width\",\"height\"],function(a,b){f.fx.step[b]=function(a){f.style(a.elem,b,math.max(0,a.now)+a.unit)}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return=\"\" a=\"==b.elem}).length});var\" cw=\"/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;\"getBoundingClientRect\"in\" c.documentelement?f.fn.offset=\"function(a){var\" b=\"this[0],c;if(a)return\" this.each(function(b){f.offset.setoffset(this,a,b)});if(!b||!b.ownerdocument)return=\"\" null;if(b=\"==b.ownerDocument.body)return\" f.offset.bodyoffset(b);try{c=\"b.getBoundingClientRect()}catch(d){}var\" e=\"b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return\" c?{top:c.top,left:c.left}:{top:0,left:0};var=\"\" h=\"e.body,i=cy(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var\" f.offset.bodyoffset(b);var=\"\" c,d=\"b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.support.fixedPosition&&k.position===\"fixed\")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&c.overflow!==\"visible\"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position===\"relative\"||k.position===\"static\")l+=i.offsetTop,m+=i.offsetLeft;f.support.fixedPosition&&k.position===\"fixed\"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={bodyOffset:function(a){var\" d=\"f.css(a,\"position\");d===\"static\"&&(a.style.position=\"relative\");var\">-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),\"using\"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,\"marginTop\"))||0,c.left-=parseFloat(f.css(a,\"marginLeft\"))||0,d.top+=parseFloat(f.css(b[0],\"borderTopWidth\"))||0,d.left+=parseFloat(f.css(b[0],\"borderLeftWidth\"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,\"position\")===\"static\")a=a.offsetParent;return a})}}),f.each([\"Left\",\"Top\"],function(a,c){var d=\"scroll\"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cy(e);return g?\"pageXOffset\"in g?g[a?\"pageYOffset\":\"pageXOffset\"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cy(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each([\"Height\",\"Width\"],function(a,c){var d=c.toLowerCase();f.fn[\"inner\"+c]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,d,\"padding\")):this[d]():null},f.fn[\"outer\"+c]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,d,a?\"margin\":\"border\")):this[d]():null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement[\"client\"+c],h=e.document.body;return e.document.compatMode===\"CSS1Compat\"&&g||h&&h[\"client\"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement[\"client\"+c],e.body[\"scroll\"+c],e.documentElement[\"scroll\"+c],e.body[\"offset\"+c],e.documentElement[\"offset\"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNumeric(j)?j:i}return this.css(d,typeof a==\"string\"?a:a+\"px\")}}),a.jQuery=a.$=f,typeof define==\"function\"&&define.amd&&define.amd.jQuery&&define(\"jquery\",[],function(){return f})})(window);</b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearinterval(cp),cp=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,\"opacity\",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each([\"width\",\"height\"],function(a,b){f.fx.step[b]=function(a){f.style(a.elem,b,math.max(0,a.now)+a.unit)}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return></2)w(-1,z);else></300||a===304){if(d.ifmodified){if(y=v.getresponseheader(\"last-modified\"))f.lastmodified[k]=y;if(z=v.getresponseheader(\"etag\"))f.etag[k]=z}if(a===304)w=\"notmodified\",o=!0;else></div></[^<]*)*<\\></script\\b[^<]*(?:(?!<\\></r;i++)bn(k[i]);else></table></\"+a.nodename)?a.clonenode(!0):bo(a);if((!f.support.nocloneevent||!f.support.noclonechecked)&&(a.nodetype===1||a.nodetype===11)&&!f.isxmldoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return></n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bp)}return></d;c++)this[c].nodetype===1&&(f.cleandata(this[c].getelementsbytagname(\"*\")),this[c].innerhtml=a)}catch(e){this.empty().append(a)}}else></$1></([\\w:]+)></(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^></a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentnode,h++}return></e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return></i;h++)m(a,g[h],e,c);return></e;c++)d.push(a[c]);else></i;h++)if(g[h]===a)return!1;return!0}m.error(e)},child:function(a,b){var></c[3]-0},gt:function(a,b,c){return></f;e++){c=a[e];if(c){var></f;e++){h=o.order[e];if(g=o.leftmatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!==\"\\\\\"){g[1]=(g[1]||\"\").replace(j,\"\"),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],\"\");break}}}}d||(d=typeof></a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return></i;h++){var></i;h++){var></i.length&&!c.ispropagationstopped();j++){p=i[j],c.currenttarget=p.elem;for(k=0;k<p.matches.length&&!c.isimmediatepropagationstopped();k++){r=p.matches[k];if(h||!c.namespace&&!r.namespace||c.namespace_re&&c.namespace_re.test(r.namespace))c.data=r.data,c.handleobj=r,n=((f.event.special[r.origtype]||{}).handle||r.handler).apply(p.elem,g),n!==b&&(c.result=n,n===!1&&(c.preventdefault(),c.stoppropagation()))}}return></0?\"on\"+h:\"\";if(!e){j=f.cache;for(l></c.length;k++){l=a.exec(c[k])||[],m=l[1],n=(l[2]||\"\").split(\".\").sort(),s=f.event.special[m]||{},m=(g?s.delegatetype:s.bindtype)||m,s=f.event.special[m]||{},o=f.extend({type:m,origtype:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:g(g),namespace:n.join(\".\")},p),r=j[m];if(!r){r=j[m]=[],r.delegatecount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addeventlistener?a.addeventlistener(m,i,!1):a.attachevent&&a.attachevent(\"on\"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegatecount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var></g;h++)e=d[h],e&&(c=f.propfix[e]||e,f.attr(a,e,\"\"),a.removeattribute(v?e:c),u.test(e)&&c></0)return></g;e++)delete></d;c++)b[c]&&b[c].promise&&f.isfunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolvewith(j,b)}else></=1&&a&&f.isfunction(a.promise)?a:f.deferred(),k=j.promise();if(d></j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else></h;)if(c.apply(a[g++],d)===!1)break}else></3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d></\"||a.charat(a.length-1)!==\"></\\></(\\w+)\\s*\\></d;c++)b[a[c]]=!0;return></h;g++)c||(d-=parsefloat(f.css(a,\"padding\"+e[g]))||0),c===\"margin\"?d+=parsefloat(f.css(a,c+e[g]))||0:d-=parsefloat(f.css(a,\"border\"+e[g]+\"width\"))||0;return></i;g++){if(g===1)for(h></body></html></\"+a+\">","categories":[],"tags":[]}]